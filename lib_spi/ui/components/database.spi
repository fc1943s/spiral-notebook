open solid
open base_table
open row
open db_connection
open db
open real_js
open state

inl db_item (status : db_status) (id : string) (title : string) (db_type : db_type) =
    create_custom_component row {
        Status = CheckDisabled
        OnLoad = Some fun state dispatch =>
            dispatch fun old_state state =>
                state.db.status <- old_state.db.status /@ a ;[status]
        OnUnload = Some fun state dispatch =>
            dispatch fun old_state state =>
                state.db.status <-
                    old_state.db.status
                    |> am.filter fun db_status => db_status <> status
        Props = fun props' => {props' with
            Id = Some id
            Title = Some <| str title
            Children = Some fun () => ;[
                create_custom_component db_connection {
                    DbType = db_type
                }
            ]
        }
    }

let database (props : mut solid_props) =
    create_component base_table
        id
        fun () => ;[
            db_item
                {client = GunRs; server = GunRs}
                "db-gun-rs-rs"
                "Rust -{'>'} Rust"
                GunRs
            db_item
                {client = GunRs; server = GunJs}
                "db-gun-rs-js"
                "Rust -{'>'} JavaScript"
                GunJs
            db_item
                {client = GunJs; server = GunJs}
                "db-gun-js-js"
                "JavaScript -{'>'} JavaScript"
                GunJs
            db_item
                {client = GunJs; server = GunRs}
                "db-gun-js-rs"
                "JavaScript -{'>'} Rust"
                GunRs
        ]
