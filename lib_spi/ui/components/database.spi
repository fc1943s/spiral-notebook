open solid
open base_table
open row
open db_connection
open db
open real_js
open state



let database (props : mut solid_props) =
    create_component base_table
        id
        fun () => ;[
            create_custom_component row {
                Status = CheckDisabled
                OnLoad = Some fun state dispatch =>
                    dispatch fun old_state state =>
                        console_fsx.inspect (
                            "database row on_load",
                            "old_state:", ((real stringify `(mut state__) old_state) : string),
                            "state:", ((real stringify `(mut state__) state) : string),
                            "state.db.status:", ((real stringify `(a i32 db_status) state.db.status) : string)
                        )
                        state.db.status <- old_state.db.status /@ a ;[{client = GunRs; server = GunRs}]
                Props = mut <| init_props fun props' => {props' with
                    Id = Some "db-gun-rs-rs"
                    Title = Some <| str "Rust -{'>'} Rust"
                    Children = Some fun () => ;[
                        create_custom_component db_connection {
                            DbType = GunRs
                        }
                    ]
                }
            }
            create_custom_component row {
                Status = CheckDisabled
                OnLoad = Some fun state dispatch =>
                    dispatch fun old_state state =>
                        state.db.status <- old_state.db.status /@ a ;[{client = GunRs; server = GunJs}]
                Props = mut <| init_props fun props' => {props' with
                    Id = Some "db-gun-rs-js"
                    Title = Some <| str "Rust -{'>'} JavaScript"
                    Children = Some fun () => ;[
                        create_custom_component db_connection {
                            DbType = GunJs
                        }
                    ]
                }
            }
            create_custom_component row {
                Status = CheckDisabled
                OnLoad = Some fun state dispatch =>
                    dispatch fun old_state state =>
                        state.db.status <- old_state.db.status /@ a ;[{client = GunJs; server = GunJs}]
                Props = mut <| init_props fun props' => {props' with
                    Id = Some "db-gun-js-js"
                    Title = Some <| str "JavaScript -{'>'} JavaScript"
                    Children = Some fun () => ;[
                        create_custom_component db_connection {
                            DbType = GunJs
                        }
                    ]
                }
            }
            create_custom_component row {
                Status = CheckDisabled
                OnLoad = Some fun state dispatch =>
                    dispatch fun old_state state =>
                        state.db.status <- old_state.db.status /@ a ;[{client = GunJs; server = GunRs}]
                Props = mut <| init_props fun props' => {props' with
                    Id = Some "db-gun-js-rs"
                    Title = Some <| str "JavaScript -{'>'} Rust"
                    Children = Some fun () => ;[
                        create_custom_component db_connection {
                            DbType = GunRs
                        }
                    ]
                }
            }
        ]
