
// import * as store from "../store"
// import useStore from "../hooks/useStore"
// import { Box, Stack } from '@hope-ui/solid'
// import useFetch from "../hooks/useFetch"
// import BaseButton from "./BaseButton"
// import { BiRegularPlus, BiRegularMinus } from "solid-icons/bi"
// import { Index } from "solid-js"
// import BaseTable from "./BaseTable"
// import Row from "./Row"


// function ChainStatus<State extends store.State>() {
//     const { state } = useStore<State>()

//     const { request, clear } = useFetch<typeof state.profile.tmp.chainStatus, State>(
//         { contentAddress: `profile/tmp/chainStatus` },
//         state.profile.tmp.chainStatus || {},
//         (state, newValue) => ({
//             profile: {
//                 ...state.profile,
//                 tmp: {
//                     ...state.profile.tmp,
//                     chainStatus: newValue
//                 }
//             }
//         } as State),
//         (client) => client.status().do()
//     )


open solid
open row
open base_button
open base_table
open store
open real_util
open real_js
open base_icon


inl chain_status (props : mut_props) =
    inl state, dispatch = use_store ()

    create_custom_component row {
        Status = CheckHidden
        OnLoad = None
        Props = mut <| init_props fun props' => {props' with
            Id = Some <| "status"
            Title = Some <|
                stack
                    fun props' => {props' with
                        AlignItems = Some "start"
                        Direction = Some <| breakpoints {initial = "row"; sm = "column"}
                        MarginBottom = Some <| breakpoints {initial = "0"; sm = "8px"}
                        Spacing = Some "7px"
                        Padding = Some "3px"
                    }
                    fun () => ;[
                        box
                            id
                            fun () => ;[
                                str "Chain Status"
                            ]
                        create_component base_button
                            fun props' => {props' with
                                LeftIcon = Some <|
                                    create_custom_component base_icon {
                                        Icon = biRegularPlus_
                                        Props = id
                                        Css = id
                                    }
                                PaddingRight = Some "10px"
                                OnClick = Some (fun () => ())
                            }
                            fun () => ;[
                                str "Request"
                            ]
                        create_component base_button
                            fun props' => {props' with
                                LeftIcon = Some <|
                                    create_custom_component base_icon {
                                        Icon = biRegularMinus_
                                        Props = id
                                        Css = id
                                    }
                                PaddingRight = Some "10px"
                                OnClick = Some (fun () => ())
                            }
                            fun () => ;[
                                str "Clear"
                            ]
                    ]
            Children = Some fun () => ;[
                create_component base_table
                    id
                    fun () => ;[
                        index' [
                            Each' (state.profile.tmp.chain_status |> am.toList |> listm.rev |> listm.toArray)
                        ] fun item => ;[
                            create_custom_component row {
                                Status = CheckHidden
                                OnLoad = None
                                Props = mut <| init_props fun props' => {props' with
                                    Title = Some <| str (item () |> fst |> real to_string `i32)
                                    Padding = Some "3px"
                                    Children = Some fun () => ;[
                                        pre
                                            id
                                            fun () => ;[
                                                item ()
                                                |> snd
                                                |> real stringify_fmt `any
                                                |> str
                                            ]
                                    ]
                                }
                            }
                        ]
                    ]
            ]
        }
    }
