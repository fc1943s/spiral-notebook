open js
open real_js
open solid
open db
open tictactoe


union log_level =
    | Debug
    | Info
    | Warn
    | Error
inl log_level_label = function
    | Debug => "Debug"
    | Info => "Info"
    | Warn => "Warn"
    | Error => "Error"
inl new_log_level = function
    | "Debug" => Debug
    | "Info" => Info
    | "Warn" => Warn
    | "Error" => Error
    | _ => Error

type chain_account = {account : account; address : string; private_key : string; mnemonic : string}
type db_connection = {db_type : db_type; url : string; port : i32; ws : string}
type db_status = {client : db_type; server : db_type}
type state__ =
    {
        chain : {
            token : option string
            url : option string
            port : option i32
            accounts : a i32 chain_account
        }
        db : {
            connection : a i32 db_connection
            status : a i32 db_status
        }
        profile : {
            tmp : {
                counter : a i32 (i32 * i32)
                chain_status : a i32 (i32 * any)
                chain_deploy : a i32 (i32 * any)
            }
        }
        settings : {
            log_level : log_level
            ui : {
                modal : option i32
            }
        }
    }


let empty_state () : state__ =
    inl env : env = real get_env ()
    {
        chain = {
            token = Some (tictactoe_testnet.token ())
            url =
                match env.codespace_name with
                | "" => tictactoe_testnet.url ()
                | codespace_name => $"$\"http://{!codespace_name}-4001.githubpreview.dev\""
                |> Some
            port =
                match env.codespace_name with
                | "" => tictactoe_testnet.port ()
                | codespace_name => 80
                |> Some
            accounts = tictactoe_testnet.accounts ()
        }
        db = {
            status = a ;[]
            connection = a ;[
                {
                    db_type = GunRs
                    url =
                        match env.codespace_name, env.is_test with
                        | "", _ => "ws://localhost"
                        | _, true => "ws://localhost"
                        | codespace_name, _ => $"$\"ws://{!codespace_name}-4944.githubpreview.dev\""
                    port =
                        match env.codespace_name, env.is_test with
                        | "", true => 14944
                        | "", false => 4944
                        | _, _ => 80
                    ws = "ws"
                }
                {
                    db_type = GunJs
                    url =
                        match env.codespace_name, env.is_test with
                        | "", _ => "wss://localhost"
                        | _, true => "wss://localhost"
                        | codespace_name, _ => $"$\"ws://{!codespace_name}-8765.githubpreview.dev\""
                    port =
                        match env.codespace_name, env.is_test with
                        | "", true => 18765
                        | "", false => 8765
                        | _, _ => 80
                    ws = "gun"
                }
            ]
        }
        settings = {
            log_level =
                if env.github_run_id = ""
                then Debug
                else Warn
            ui = {
                modal = None
            }
        }
        profile = {
            tmp = {
                counter = a ;[]
                chain_status = a ;[]
                chain_deploy = a ;[]
            }
        }
    }

let empty_db_connection () : db_connection =
    {
        db_type = GunRs
        url = ""
        port = 0
        ws = ""
    }
