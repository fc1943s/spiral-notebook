open real_js
open real_util
open real_core


let new_log
    (get_log_level : () -> log_level_type)
    (get_locals : () -> array any)
    (color : string)
    : log_level_type -> array any -> ()
    =
    inl env : env = real get_env ()
    inl start_timestamp : i64 = real ticks ()
    fun log_level (args : array any) : () =>
        if real union_tag (get_log_level ()) <= real union_tag log_level then
            inl new_ticks : i64 = real ticks ()
            inl new_timestamp () : i64 = real new_ticks - start_timestamp
            inl timestamp : string = real to_string `i64 (new_timestamp ())
            inl timestamp : string = pad 6 timestamp
            inl run_id : i32 = $"emitJsExpr () \"components_spi.run_id\""
            inl header : string = $"$\"[{!timestamp}] run_id: {!run_id}\""
            inl args =
                inl args : string = real stringify `(array any) args
                inl locals : string = real stringify `(array any) (get_locals ())
                if env.is_test then
                    header,
                    args,
                    locals,
                    "",
                    ""
                else
                    ($"$\"{!header} %%c%%s %%c%%s\"" : string),
                    ($"$\"font-weight: bold; color: {!color}\"" : string),
                    args,
                    "font-weight: bold; color: #444",
                    locals
            $"emitJsExpr () $\"console.log.apply(console, {!args})\"" : ()
