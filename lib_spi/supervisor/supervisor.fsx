type [<Struct>] US0 =
    | US0_0
    | US0_1 of f1_0 : string
and Mut0 = {mutable l0 : int32; mutable l1 : US0}
let rec method0 () : struct (string * string * string * bool) =
    let v0 : string = ""
    let v1 : obj = v0
    struct (v0, v0, v0, true)
and method1 (v0 : int32, v1 : string) : string =
    let v2 : int32 = String.length v1
    let v3 : bool = v2 < v0
    if v3 then
        let v4 : string = $"0{v1}"
        method1(v0, v4)
    else
        v1
and method2 (v0 : string) : string =
    v0
and method3 () : string =
    let v0 : string = "$1=$2"
    v0
and method4 () : string =
    let v0 : string = "[$1]"
    v0
and method5 () : string =
    let v0 : string = " "
    v0
and closure2 () (v0 : Types.Ref<Types.std.path.Path>) : Types.std.path.PathBuf =
    let v1 : string = "package.spiproj"
    let v2 : string = "$1.join($0.as_str())"
    let v3 : Types.std.path.PathBuf = Fable.Core.Rust.emitExpr struct (v1, v0) v2
    v3
and closure3 () (v0 : Types.Ref<Types.std.path.PathBuf>) : bool =
    let v1 : string = "std::path::Path::exists($0)"
    let v2 : bool = Fable.Core.Rust.emitExpr v0 v1
    v2
and method6 (v0 : int32, v1 : Mut0) : bool =
    let v2 : int32 = v1.l0
    let v3 : bool = v2 < v0
    v3
and closure1 (v0 : Types.std.path.PathBuf) (v1 : Option<Types.std.path.PathBuf>) : string =
    let struct (v2 : string, v3 : string, v4 : string, v5 : bool) = method0()
    let v6 : string = "chrono::Utc::now()"
    let v7 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v8 : string = "($0).timestamp()"
    let v9 : int64 = Fable.Core.Rust.emitExpr v7 v8
    let v10 : string = "pwd"
    let v11 : string = "($0).to_string()"
    let v12 : Types.std.string.String = Fable.Core.Rust.emitExpr v10 v11
    let v13 : Types.EmitType<Types.std.string.String> = v12 |> unbox<Types.EmitType<Types.std.string.String>>
    let v14 : string = "std::env::current_dir()"
    let v15 : Result<Types.std.path.PathBuf, Types.std.io.Error> = Fable.Core.Rust.emitExpr () v14
    let v16 : string = "($0).as_ref().unwrap().to_path_buf()"
    let v17 : Types.std.path.PathBuf = Fable.Core.Rust.emitExpr v15 v16
    let v18 : string = "($0).canonicalize()"
    let v19 : Result<Types.std.path.PathBuf, Types.std.io.Error> = Fable.Core.Rust.emitExpr v17 v18
    let v20 : Types.std.path.PathBuf = Fable.Core.Rust.emitExpr v19 v16
    let v21 : string = "fable_library_rust::String_::fromStr(&format!(\"{}\", $0.display()))"
    let v22 : string = Fable.Core.Rust.emitExpr v20 v21
    let v23 : Types.std.string.String = Fable.Core.Rust.emitExpr v22 v11
    let v24 : Types.EmitType<Types.std.string.String> = v23 |> unbox<Types.EmitType<Types.std.string.String>>
    let v25 : string = "spi_path"
    let v26 : Types.std.string.String = Fable.Core.Rust.emitExpr v25 v11
    let v27 : Types.EmitType<Types.std.string.String> = v26 |> unbox<Types.EmitType<Types.std.string.String>>
    let v28 : string = Fable.Core.Rust.emitExpr v0 v21
    let v29 : Types.std.string.String = Fable.Core.Rust.emitExpr v28 v11
    let v30 : Types.EmitType<Types.std.string.String> = v29 |> unbox<Types.EmitType<Types.std.string.String>>
    let v31 : string = "new_fsx_path"
    let v32 : Types.std.string.String = Fable.Core.Rust.emitExpr v31 v11
    let v33 : Types.EmitType<Types.std.string.String> = v32 |> unbox<Types.EmitType<Types.std.string.String>>
    let v34 : Types.std.path.PathBuf = Fable.Core.Rust.emitExpr v1 v16
    let v35 : string = Fable.Core.Rust.emitExpr v34 v21
    let v36 : Types.std.string.String = Fable.Core.Rust.emitExpr v35 v11
    let v37 : Types.EmitType<Types.std.string.String> = v36 |> unbox<Types.EmitType<Types.std.string.String>>
    let v38 : (Types.EmitType<Types.std.string.String> []) = [|v13; v24; v27; v30; v33; v37|]
    let v39 : string = "core::ops::Deref::deref($0)"
    let v40 : obj = Fable.Core.Rust.emitExpr v38 v39
    let v41 : string = "format!(\"{:?}\", ***$0)"
    let v42 : Types.std.string.String = Fable.Core.Rust.emitExpr v40 v41
    let v43 : Types.EmitType<Types.std.string.String> = v42 |> unbox<Types.EmitType<Types.std.string.String>>
    let v44 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v45 : int64 = Fable.Core.Rust.emitExpr v44 v8
    let v46 : int64 = v45 - v9
    let v47 : string = (v46).ToString ()
    let v48 : int32 = 6
    let v49 : string = method1(v48, v47)
    let v50 : string = "rand::random::<u8>()"
    let v51 : uint8 = Fable.Core.Rust.emitExpr () v50
    let v52 : string = "timestamp"
    let v53 : Types.std.string.String = Fable.Core.Rust.emitExpr v52 v11
    let v54 : Types.EmitType<Types.std.string.String> = v53 |> unbox<Types.EmitType<Types.std.string.String>>
    let v55 : Types.std.string.String = Fable.Core.Rust.emitExpr v49 v11
    let v56 : Types.EmitType<Types.std.string.String> = v55 |> unbox<Types.EmitType<Types.std.string.String>>
    let v57 : string = "run_id"
    let v58 : Types.std.string.String = Fable.Core.Rust.emitExpr v57 v11
    let v59 : Types.EmitType<Types.std.string.String> = v58 |> unbox<Types.EmitType<Types.std.string.String>>
    let v60 : string = "format!(\"{:?}\", $0)"
    let v61 : Types.std.string.String = Fable.Core.Rust.emitExpr v51 v60
    let v62 : Types.EmitType<Types.std.string.String> = v61 |> unbox<Types.EmitType<Types.std.string.String>>
    let v63 : string = "log_level"
    let v64 : Types.std.string.String = Fable.Core.Rust.emitExpr v63 v11
    let v65 : Types.EmitType<Types.std.string.String> = v64 |> unbox<Types.EmitType<Types.std.string.String>>
    let v66 : string = "Debug"
    let v67 : Types.std.string.String = Fable.Core.Rust.emitExpr v66 v11
    let v68 : Types.EmitType<Types.std.string.String> = v67 |> unbox<Types.EmitType<Types.std.string.String>>
    let v69 : (Types.EmitType<Types.std.string.String> []) = [|v54; v56; v59; v62; v65; v68|]
    let v70 : obj = Fable.Core.Rust.emitExpr v69 v39
    let v71 : Types.std.string.String = Fable.Core.Rust.emitExpr v70 v41
    let v72 : Types.EmitType<Types.std.string.String> = v71 |> unbox<Types.EmitType<Types.std.string.String>>
    let v73 : string = "> spi_to_fsx ()"
    let v74 : Types.std.string.String = Fable.Core.Rust.emitExpr v73 v11
    let v75 : Types.EmitType<Types.std.string.String> = v74 |> unbox<Types.EmitType<Types.std.string.String>>
    let v76 : (Types.EmitType<Types.std.string.String> []) = [|v75|]
    let v77 : obj = Fable.Core.Rust.emitExpr v76 v39
    let v78 : Types.std.string.String = Fable.Core.Rust.emitExpr v77 v41
    let v79 : Types.EmitType<Types.std.string.String> = v78 |> unbox<Types.EmitType<Types.std.string.String>>
    let v80 : Types.std.string.String = v79 |> unbox
    let v81 : string = "fable_library_rust::String_::fromStr($0)"
    let v82 : string = Fable.Core.Rust.emitExpr v80 v81
    let v83 : string = "\"([^\"]+)\", \"([^\"]+)\""
    let v84 : string = $"r#\"{v83}\"#"
    let v85 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v84
    let v86 : string = "regex::RegexBuilder::new($0)"
    let v87 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v85 v86
    let v88 : string = "$0.build().unwrap()"
    let v89 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v87 v88
    let v90 : string = method2(v82)
    let v91 : string = "$0.as_str()"
    let v92 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v90 v91
    let v93 : string = method3()
    let v94 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v93 v91
    let v95 : string = "$0.replace_all(&$1, $2).to_string()"
    let v96 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v89, v92, v94) v95
    let v97 : string = Fable.Core.Rust.emitExpr v96 v81
    let v98 : string = "\\[\"(.*?)\"\\]"
    let v99 : string = $"r#\"{v98}\"#"
    let v100 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v99
    let v101 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v100 v86
    let v102 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v101 v88
    let v103 : string = method2(v97)
    let v104 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v103 v91
    let v105 : string = method4()
    let v106 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v105 v91
    let v107 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v102, v104, v106) v95
    let v108 : string = Fable.Core.Rust.emitExpr v107 v81
    let v109 : string = ", "
    let v110 : string = $"r#\"{v109}\"#"
    let v111 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v110
    let v112 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v111 v86
    let v113 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v112 v88
    let v114 : string = method2(v108)
    let v115 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v114 v91
    let v116 : string = method5()
    let v117 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v116 v91
    let v118 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v113, v115, v117) v95
    let v119 : string = Fable.Core.Rust.emitExpr v118 v81
    let v120 : Types.std.string.String = Fable.Core.Rust.emitExpr v119 v11
    let v121 : Types.EmitType<Types.std.string.String> = v120 |> unbox<Types.EmitType<Types.std.string.String>>
    let v122 : string = "purple"
    let v123 : string = "colored::Colorize::color(&*$0, $1.to_string())"
    let v124 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v121, v122) v123
    let v125 : string = "format!(\"{}\", $0)"
    let v126 : Types.std.string.String = Fable.Core.Rust.emitExpr v124 v125
    let v127 : Types.std.string.String = v43 |> unbox
    let v128 : string = Fable.Core.Rust.emitExpr v127 v81
    let v129 : string = $"r#\"{v83}\"#"
    let v130 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v129
    let v131 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v130 v86
    let v132 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v131 v88
    let v133 : string = method2(v128)
    let v134 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v133 v91
    let v135 : string = method3()
    let v136 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v135 v91
    let v137 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v132, v134, v136) v95
    let v138 : string = Fable.Core.Rust.emitExpr v137 v81
    let v139 : string = $"r#\"{v98}\"#"
    let v140 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v139
    let v141 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v140 v86
    let v142 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v141 v88
    let v143 : string = method2(v138)
    let v144 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v143 v91
    let v145 : string = method4()
    let v146 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v145 v91
    let v147 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v142, v144, v146) v95
    let v148 : string = Fable.Core.Rust.emitExpr v147 v81
    let v149 : string = $"r#\"{v109}\"#"
    let v150 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v149
    let v151 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v150 v86
    let v152 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v151 v88
    let v153 : string = method2(v148)
    let v154 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v153 v91
    let v155 : string = method5()
    let v156 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v155 v91
    let v157 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v152, v154, v156) v95
    let v158 : string = Fable.Core.Rust.emitExpr v157 v81
    let v159 : Types.std.string.String = Fable.Core.Rust.emitExpr v158 v11
    let v160 : Types.EmitType<Types.std.string.String> = v159 |> unbox<Types.EmitType<Types.std.string.String>>
    let v161 : string = "de884c"
    let v162 : string = v161.Substring (0, 2)
    let v163 : string = "u8::from_str_radix($0, 16).unwrap()"
    let v164 : uint8 = Fable.Core.Rust.emitExpr v162 v163
    let v165 : string = v161.Substring (2, 2)
    let v166 : uint8 = Fable.Core.Rust.emitExpr v165 v163
    let v167 : string = v161.Substring (4, 2)
    let v168 : uint8 = Fable.Core.Rust.emitExpr v167 v163
    let v169 : string = "colored::Colorize::truecolor(&*$0.to_string(), $1, $2, $3)"
    let v170 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v160, v164, v166, v168) v169
    let v171 : Types.std.string.String = Fable.Core.Rust.emitExpr v170 v125
    let v172 : Types.std.string.String = v72 |> unbox
    let v173 : string = Fable.Core.Rust.emitExpr v172 v81
    let v174 : string = $"r#\"{v83}\"#"
    let v175 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v174
    let v176 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v175 v86
    let v177 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v176 v88
    let v178 : string = method2(v173)
    let v179 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v178 v91
    let v180 : string = method3()
    let v181 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v180 v91
    let v182 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v177, v179, v181) v95
    let v183 : string = Fable.Core.Rust.emitExpr v182 v81
    let v184 : string = $"r#\"{v98}\"#"
    let v185 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v184
    let v186 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v185 v86
    let v187 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v186 v88
    let v188 : string = method2(v183)
    let v189 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v188 v91
    let v190 : string = method4()
    let v191 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v190 v91
    let v192 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v187, v189, v191) v95
    let v193 : string = Fable.Core.Rust.emitExpr v192 v81
    let v194 : string = $"r#\"{v109}\"#"
    let v195 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v194
    let v196 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v195 v86
    let v197 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v196 v88
    let v198 : string = method2(v193)
    let v199 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v198 v91
    let v200 : string = method5()
    let v201 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v200 v91
    let v202 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v197, v199, v201) v95
    let v203 : string = Fable.Core.Rust.emitExpr v202 v81
    let v204 : Types.std.string.String = Fable.Core.Rust.emitExpr v203 v11
    let v205 : Types.EmitType<Types.std.string.String> = v204 |> unbox<Types.EmitType<Types.std.string.String>>
    let v206 : string = "222222"
    let v207 : string = v206.Substring (0, 2)
    let v208 : uint8 = Fable.Core.Rust.emitExpr v207 v163
    let v209 : string = v206.Substring (2, 2)
    let v210 : uint8 = Fable.Core.Rust.emitExpr v209 v163
    let v211 : string = v206.Substring (4, 2)
    let v212 : uint8 = Fable.Core.Rust.emitExpr v211 v163
    let v213 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v205, v208, v210, v212) v169
    let v214 : Types.std.string.String = Fable.Core.Rust.emitExpr v213 v125
    let v215 : string = $"{v126} {v171} {v214}"
    System.Console.WriteLine v215
    let v216 : Result<Types.std.path.PathBuf, Types.std.io.Error> = Fable.Core.Rust.emitExpr v0 v18
    let v217 : Types.std.path.PathBuf = Fable.Core.Rust.emitExpr v216 v16
    let v218 : string = "spi_path_clean"
    let v219 : Types.std.string.String = Fable.Core.Rust.emitExpr v218 v11
    let v220 : Types.EmitType<Types.std.string.String> = v219 |> unbox<Types.EmitType<Types.std.string.String>>
    let v221 : string = Fable.Core.Rust.emitExpr v217 v21
    let v222 : Types.std.string.String = Fable.Core.Rust.emitExpr v221 v11
    let v223 : Types.EmitType<Types.std.string.String> = v222 |> unbox<Types.EmitType<Types.std.string.String>>
    let v224 : (Types.EmitType<Types.std.string.String> []) = [|v220; v223|]
    let v225 : obj = Fable.Core.Rust.emitExpr v224 v39
    let v226 : Types.std.string.String = Fable.Core.Rust.emitExpr v225 v41
    let v227 : Types.EmitType<Types.std.string.String> = v226 |> unbox<Types.EmitType<Types.std.string.String>>
    let v228 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v229 : int64 = Fable.Core.Rust.emitExpr v228 v8
    let v230 : int64 = v229 - v9
    let v231 : string = (v230).ToString ()
    let v232 : int32 = 6
    let v233 : string = method1(v232, v231)
    let v234 : uint8 = Fable.Core.Rust.emitExpr () v50
    let v235 : Types.std.string.String = Fable.Core.Rust.emitExpr v52 v11
    let v236 : Types.EmitType<Types.std.string.String> = v235 |> unbox<Types.EmitType<Types.std.string.String>>
    let v237 : Types.std.string.String = Fable.Core.Rust.emitExpr v233 v11
    let v238 : Types.EmitType<Types.std.string.String> = v237 |> unbox<Types.EmitType<Types.std.string.String>>
    let v239 : Types.std.string.String = Fable.Core.Rust.emitExpr v57 v11
    let v240 : Types.EmitType<Types.std.string.String> = v239 |> unbox<Types.EmitType<Types.std.string.String>>
    let v241 : Types.std.string.String = Fable.Core.Rust.emitExpr v234 v60
    let v242 : Types.EmitType<Types.std.string.String> = v241 |> unbox<Types.EmitType<Types.std.string.String>>
    let v243 : Types.std.string.String = Fable.Core.Rust.emitExpr v63 v11
    let v244 : Types.EmitType<Types.std.string.String> = v243 |> unbox<Types.EmitType<Types.std.string.String>>
    let v245 : Types.std.string.String = Fable.Core.Rust.emitExpr v66 v11
    let v246 : Types.EmitType<Types.std.string.String> = v245 |> unbox<Types.EmitType<Types.std.string.String>>
    let v247 : (Types.EmitType<Types.std.string.String> []) = [|v236; v238; v240; v242; v244; v246|]
    let v248 : obj = Fable.Core.Rust.emitExpr v247 v39
    let v249 : Types.std.string.String = Fable.Core.Rust.emitExpr v248 v41
    let v250 : Types.EmitType<Types.std.string.String> = v249 |> unbox<Types.EmitType<Types.std.string.String>>
    let v251 : Types.std.string.String = Fable.Core.Rust.emitExpr v73 v11
    let v252 : Types.EmitType<Types.std.string.String> = v251 |> unbox<Types.EmitType<Types.std.string.String>>
    let v253 : (Types.EmitType<Types.std.string.String> []) = [|v252|]
    let v254 : obj = Fable.Core.Rust.emitExpr v253 v39
    let v255 : Types.std.string.String = Fable.Core.Rust.emitExpr v254 v41
    let v256 : Types.EmitType<Types.std.string.String> = v255 |> unbox<Types.EmitType<Types.std.string.String>>
    let v257 : Types.std.string.String = v256 |> unbox
    let v258 : string = Fable.Core.Rust.emitExpr v257 v81
    let v259 : string = $"r#\"{v83}\"#"
    let v260 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v259
    let v261 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v260 v86
    let v262 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v261 v88
    let v263 : string = method2(v258)
    let v264 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v263 v91
    let v265 : string = method3()
    let v266 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v265 v91
    let v267 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v262, v264, v266) v95
    let v268 : string = Fable.Core.Rust.emitExpr v267 v81
    let v269 : string = $"r#\"{v98}\"#"
    let v270 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v269
    let v271 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v270 v86
    let v272 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v271 v88
    let v273 : string = method2(v268)
    let v274 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v273 v91
    let v275 : string = method4()
    let v276 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v275 v91
    let v277 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v272, v274, v276) v95
    let v278 : string = Fable.Core.Rust.emitExpr v277 v81
    let v279 : string = $"r#\"{v109}\"#"
    let v280 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v279
    let v281 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v280 v86
    let v282 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v281 v88
    let v283 : string = method2(v278)
    let v284 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v283 v91
    let v285 : string = method5()
    let v286 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v285 v91
    let v287 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v282, v284, v286) v95
    let v288 : string = Fable.Core.Rust.emitExpr v287 v81
    let v289 : Types.std.string.String = Fable.Core.Rust.emitExpr v288 v11
    let v290 : Types.EmitType<Types.std.string.String> = v289 |> unbox<Types.EmitType<Types.std.string.String>>
    let v291 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v290, v122) v123
    let v292 : Types.std.string.String = Fable.Core.Rust.emitExpr v291 v125
    let v293 : Types.std.string.String = v227 |> unbox
    let v294 : string = Fable.Core.Rust.emitExpr v293 v81
    let v295 : string = $"r#\"{v83}\"#"
    let v296 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v295
    let v297 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v296 v86
    let v298 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v297 v88
    let v299 : string = method2(v294)
    let v300 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v299 v91
    let v301 : string = method3()
    let v302 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v301 v91
    let v303 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v298, v300, v302) v95
    let v304 : string = Fable.Core.Rust.emitExpr v303 v81
    let v305 : string = $"r#\"{v98}\"#"
    let v306 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v305
    let v307 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v306 v86
    let v308 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v307 v88
    let v309 : string = method2(v304)
    let v310 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v309 v91
    let v311 : string = method4()
    let v312 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v311 v91
    let v313 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v308, v310, v312) v95
    let v314 : string = Fable.Core.Rust.emitExpr v313 v81
    let v315 : string = $"r#\"{v109}\"#"
    let v316 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v315
    let v317 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v316 v86
    let v318 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v317 v88
    let v319 : string = method2(v314)
    let v320 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v319 v91
    let v321 : string = method5()
    let v322 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v321 v91
    let v323 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v318, v320, v322) v95
    let v324 : string = Fable.Core.Rust.emitExpr v323 v81
    let v325 : Types.std.string.String = Fable.Core.Rust.emitExpr v324 v11
    let v326 : Types.EmitType<Types.std.string.String> = v325 |> unbox<Types.EmitType<Types.std.string.String>>
    let v327 : string = v161.Substring (0, 2)
    let v328 : uint8 = Fable.Core.Rust.emitExpr v327 v163
    let v329 : string = v161.Substring (2, 2)
    let v330 : uint8 = Fable.Core.Rust.emitExpr v329 v163
    let v331 : string = v161.Substring (4, 2)
    let v332 : uint8 = Fable.Core.Rust.emitExpr v331 v163
    let v333 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v326, v328, v330, v332) v169
    let v334 : Types.std.string.String = Fable.Core.Rust.emitExpr v333 v125
    let v335 : Types.std.string.String = v250 |> unbox
    let v336 : string = Fable.Core.Rust.emitExpr v335 v81
    let v337 : string = $"r#\"{v83}\"#"
    let v338 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v337
    let v339 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v338 v86
    let v340 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v339 v88
    let v341 : string = method2(v336)
    let v342 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v341 v91
    let v343 : string = method3()
    let v344 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v343 v91
    let v345 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v340, v342, v344) v95
    let v346 : string = Fable.Core.Rust.emitExpr v345 v81
    let v347 : string = $"r#\"{v98}\"#"
    let v348 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v347
    let v349 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v348 v86
    let v350 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v349 v88
    let v351 : string = method2(v346)
    let v352 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v351 v91
    let v353 : string = method4()
    let v354 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v353 v91
    let v355 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v350, v352, v354) v95
    let v356 : string = Fable.Core.Rust.emitExpr v355 v81
    let v357 : string = $"r#\"{v109}\"#"
    let v358 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v357
    let v359 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v358 v86
    let v360 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v359 v88
    let v361 : string = method2(v356)
    let v362 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v361 v91
    let v363 : string = method5()
    let v364 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v363 v91
    let v365 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v360, v362, v364) v95
    let v366 : string = Fable.Core.Rust.emitExpr v365 v81
    let v367 : Types.std.string.String = Fable.Core.Rust.emitExpr v366 v11
    let v368 : Types.EmitType<Types.std.string.String> = v367 |> unbox<Types.EmitType<Types.std.string.String>>
    let v369 : string = v206.Substring (0, 2)
    let v370 : uint8 = Fable.Core.Rust.emitExpr v369 v163
    let v371 : string = v206.Substring (2, 2)
    let v372 : uint8 = Fable.Core.Rust.emitExpr v371 v163
    let v373 : string = v206.Substring (4, 2)
    let v374 : uint8 = Fable.Core.Rust.emitExpr v373 v163
    let v375 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v368, v370, v372, v374) v169
    let v376 : Types.std.string.String = Fable.Core.Rust.emitExpr v375 v125
    let v377 : string = $"{v292} {v334} {v376}"
    System.Console.WriteLine v377
    let v378 : string = "($0).parent()"
    let v379 : Option<Types.Ref<Types.std.path.Path>> = Fable.Core.Rust.emitExpr v217 v378
    let v380 : string = "$0.unwrap()"
    let v381 : Types.Ref<Types.std.path.Path> = Fable.Core.Rust.emitExpr v379 v380
    let v382 : string = "std::path::PathBuf::from($0)"
    let v383 : Types.std.path.PathBuf = Fable.Core.Rust.emitExpr v381 v382
    let v384 : Result<Types.std.path.PathBuf, Types.std.io.Error> = Fable.Core.Rust.emitExpr v383 v18
    let v385 : Types.std.path.PathBuf = Fable.Core.Rust.emitExpr v384 v16
    let v386 : string = "src_path"
    let v387 : Types.std.string.String = Fable.Core.Rust.emitExpr v386 v11
    let v388 : Types.EmitType<Types.std.string.String> = v387 |> unbox<Types.EmitType<Types.std.string.String>>
    let v389 : string = Fable.Core.Rust.emitExpr v385 v21
    let v390 : Types.std.string.String = Fable.Core.Rust.emitExpr v389 v11
    let v391 : Types.EmitType<Types.std.string.String> = v390 |> unbox<Types.EmitType<Types.std.string.String>>
    let v392 : (Types.EmitType<Types.std.string.String> []) = [|v388; v391|]
    let v393 : obj = Fable.Core.Rust.emitExpr v392 v39
    let v394 : Types.std.string.String = Fable.Core.Rust.emitExpr v393 v41
    let v395 : Types.EmitType<Types.std.string.String> = v394 |> unbox<Types.EmitType<Types.std.string.String>>
    let v396 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v397 : int64 = Fable.Core.Rust.emitExpr v396 v8
    let v398 : int64 = v397 - v9
    let v399 : string = (v398).ToString ()
    let v400 : int32 = 6
    let v401 : string = method1(v400, v399)
    let v402 : uint8 = Fable.Core.Rust.emitExpr () v50
    let v403 : Types.std.string.String = Fable.Core.Rust.emitExpr v52 v11
    let v404 : Types.EmitType<Types.std.string.String> = v403 |> unbox<Types.EmitType<Types.std.string.String>>
    let v405 : Types.std.string.String = Fable.Core.Rust.emitExpr v401 v11
    let v406 : Types.EmitType<Types.std.string.String> = v405 |> unbox<Types.EmitType<Types.std.string.String>>
    let v407 : Types.std.string.String = Fable.Core.Rust.emitExpr v57 v11
    let v408 : Types.EmitType<Types.std.string.String> = v407 |> unbox<Types.EmitType<Types.std.string.String>>
    let v409 : Types.std.string.String = Fable.Core.Rust.emitExpr v402 v60
    let v410 : Types.EmitType<Types.std.string.String> = v409 |> unbox<Types.EmitType<Types.std.string.String>>
    let v411 : Types.std.string.String = Fable.Core.Rust.emitExpr v63 v11
    let v412 : Types.EmitType<Types.std.string.String> = v411 |> unbox<Types.EmitType<Types.std.string.String>>
    let v413 : Types.std.string.String = Fable.Core.Rust.emitExpr v66 v11
    let v414 : Types.EmitType<Types.std.string.String> = v413 |> unbox<Types.EmitType<Types.std.string.String>>
    let v415 : (Types.EmitType<Types.std.string.String> []) = [|v404; v406; v408; v410; v412; v414|]
    let v416 : obj = Fable.Core.Rust.emitExpr v415 v39
    let v417 : Types.std.string.String = Fable.Core.Rust.emitExpr v416 v41
    let v418 : Types.EmitType<Types.std.string.String> = v417 |> unbox<Types.EmitType<Types.std.string.String>>
    let v419 : Types.std.string.String = Fable.Core.Rust.emitExpr v73 v11
    let v420 : Types.EmitType<Types.std.string.String> = v419 |> unbox<Types.EmitType<Types.std.string.String>>
    let v421 : (Types.EmitType<Types.std.string.String> []) = [|v420|]
    let v422 : obj = Fable.Core.Rust.emitExpr v421 v39
    let v423 : Types.std.string.String = Fable.Core.Rust.emitExpr v422 v41
    let v424 : Types.EmitType<Types.std.string.String> = v423 |> unbox<Types.EmitType<Types.std.string.String>>
    let v425 : Types.std.string.String = v424 |> unbox
    let v426 : string = Fable.Core.Rust.emitExpr v425 v81
    let v427 : string = $"r#\"{v83}\"#"
    let v428 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v427
    let v429 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v428 v86
    let v430 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v429 v88
    let v431 : string = method2(v426)
    let v432 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v431 v91
    let v433 : string = method3()
    let v434 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v433 v91
    let v435 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v430, v432, v434) v95
    let v436 : string = Fable.Core.Rust.emitExpr v435 v81
    let v437 : string = $"r#\"{v98}\"#"
    let v438 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v437
    let v439 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v438 v86
    let v440 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v439 v88
    let v441 : string = method2(v436)
    let v442 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v441 v91
    let v443 : string = method4()
    let v444 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v443 v91
    let v445 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v440, v442, v444) v95
    let v446 : string = Fable.Core.Rust.emitExpr v445 v81
    let v447 : string = $"r#\"{v109}\"#"
    let v448 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v447
    let v449 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v448 v86
    let v450 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v449 v88
    let v451 : string = method2(v446)
    let v452 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v451 v91
    let v453 : string = method5()
    let v454 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v453 v91
    let v455 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v450, v452, v454) v95
    let v456 : string = Fable.Core.Rust.emitExpr v455 v81
    let v457 : Types.std.string.String = Fable.Core.Rust.emitExpr v456 v11
    let v458 : Types.EmitType<Types.std.string.String> = v457 |> unbox<Types.EmitType<Types.std.string.String>>
    let v459 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v458, v122) v123
    let v460 : Types.std.string.String = Fable.Core.Rust.emitExpr v459 v125
    let v461 : Types.std.string.String = v395 |> unbox
    let v462 : string = Fable.Core.Rust.emitExpr v461 v81
    let v463 : string = $"r#\"{v83}\"#"
    let v464 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v463
    let v465 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v464 v86
    let v466 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v465 v88
    let v467 : string = method2(v462)
    let v468 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v467 v91
    let v469 : string = method3()
    let v470 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v469 v91
    let v471 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v466, v468, v470) v95
    let v472 : string = Fable.Core.Rust.emitExpr v471 v81
    let v473 : string = $"r#\"{v98}\"#"
    let v474 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v473
    let v475 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v474 v86
    let v476 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v475 v88
    let v477 : string = method2(v472)
    let v478 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v477 v91
    let v479 : string = method4()
    let v480 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v479 v91
    let v481 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v476, v478, v480) v95
    let v482 : string = Fable.Core.Rust.emitExpr v481 v81
    let v483 : string = $"r#\"{v109}\"#"
    let v484 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v483
    let v485 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v484 v86
    let v486 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v485 v88
    let v487 : string = method2(v482)
    let v488 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v487 v91
    let v489 : string = method5()
    let v490 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v489 v91
    let v491 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v486, v488, v490) v95
    let v492 : string = Fable.Core.Rust.emitExpr v491 v81
    let v493 : Types.std.string.String = Fable.Core.Rust.emitExpr v492 v11
    let v494 : Types.EmitType<Types.std.string.String> = v493 |> unbox<Types.EmitType<Types.std.string.String>>
    let v495 : string = v161.Substring (0, 2)
    let v496 : uint8 = Fable.Core.Rust.emitExpr v495 v163
    let v497 : string = v161.Substring (2, 2)
    let v498 : uint8 = Fable.Core.Rust.emitExpr v497 v163
    let v499 : string = v161.Substring (4, 2)
    let v500 : uint8 = Fable.Core.Rust.emitExpr v499 v163
    let v501 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v494, v496, v498, v500) v169
    let v502 : Types.std.string.String = Fable.Core.Rust.emitExpr v501 v125
    let v503 : Types.std.string.String = v418 |> unbox
    let v504 : string = Fable.Core.Rust.emitExpr v503 v81
    let v505 : string = $"r#\"{v83}\"#"
    let v506 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v505
    let v507 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v506 v86
    let v508 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v507 v88
    let v509 : string = method2(v504)
    let v510 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v509 v91
    let v511 : string = method3()
    let v512 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v511 v91
    let v513 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v508, v510, v512) v95
    let v514 : string = Fable.Core.Rust.emitExpr v513 v81
    let v515 : string = $"r#\"{v98}\"#"
    let v516 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v515
    let v517 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v516 v86
    let v518 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v517 v88
    let v519 : string = method2(v514)
    let v520 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v519 v91
    let v521 : string = method4()
    let v522 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v521 v91
    let v523 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v518, v520, v522) v95
    let v524 : string = Fable.Core.Rust.emitExpr v523 v81
    let v525 : string = $"r#\"{v109}\"#"
    let v526 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v525
    let v527 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v526 v86
    let v528 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v527 v88
    let v529 : string = method2(v524)
    let v530 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v529 v91
    let v531 : string = method5()
    let v532 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v531 v91
    let v533 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v528, v530, v532) v95
    let v534 : string = Fable.Core.Rust.emitExpr v533 v81
    let v535 : Types.std.string.String = Fable.Core.Rust.emitExpr v534 v11
    let v536 : Types.EmitType<Types.std.string.String> = v535 |> unbox<Types.EmitType<Types.std.string.String>>
    let v537 : string = v206.Substring (0, 2)
    let v538 : uint8 = Fable.Core.Rust.emitExpr v537 v163
    let v539 : string = v206.Substring (2, 2)
    let v540 : uint8 = Fable.Core.Rust.emitExpr v539 v163
    let v541 : string = v206.Substring (4, 2)
    let v542 : uint8 = Fable.Core.Rust.emitExpr v541 v163
    let v543 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v536, v538, v540, v542) v169
    let v544 : Types.std.string.String = Fable.Core.Rust.emitExpr v543 v125
    let v545 : string = $"{v460} {v502} {v544}"
    System.Console.WriteLine v545
    let v546 : string = "$0.ancestors()"
    let v547 : Types.Ref<Types.std.path.Ancestors> = Fable.Core.Rust.emitExpr v385 v546
    let v548 : unativeint = unativeint 10
    let v549 : string = "$1.take($0)"
    let v550 : Types.std.iter.Iterator<Types.Ref<Types.std.path.Path>> = Fable.Core.Rust.emitExpr struct (v548, v547) v549
    let v551 : (Types.Ref<Types.std.path.Path> -> Types.std.path.PathBuf) = closure2()
    let v552 : Types.Ref<(Types.Ref<Types.std.path.Path> -> Types.std.path.PathBuf)> = v551 |> unbox
    let v553 : string = "$1.into_iter().map($0)"
    let v554 : Types.std.iter.Iterator<Types.std.path.PathBuf> = Fable.Core.Rust.emitExpr struct (v552, v550) v553
    let v555 : (Types.Ref<Types.std.path.PathBuf> -> bool) = closure3()
    let v556 : Types.Ref<(Types.Ref<Types.std.path.PathBuf> -> bool)> = v555 |> unbox
    let v557 : string = "$1.into_iter().find($0)"
    let v558 : Option<Types.std.path.PathBuf> = Fable.Core.Rust.emitExpr struct (v556, v554) v557
    let v559 : Types.std.path.PathBuf = Fable.Core.Rust.emitExpr v558 v16
    let v560 : string = "spiproj_path"
    let v561 : Types.std.string.String = Fable.Core.Rust.emitExpr v560 v11
    let v562 : Types.EmitType<Types.std.string.String> = v561 |> unbox<Types.EmitType<Types.std.string.String>>
    let v563 : string = Fable.Core.Rust.emitExpr v559 v21
    let v564 : Types.std.string.String = Fable.Core.Rust.emitExpr v563 v11
    let v565 : Types.EmitType<Types.std.string.String> = v564 |> unbox<Types.EmitType<Types.std.string.String>>
    let v566 : (Types.EmitType<Types.std.string.String> []) = [|v562; v565|]
    let v567 : obj = Fable.Core.Rust.emitExpr v566 v39
    let v568 : Types.std.string.String = Fable.Core.Rust.emitExpr v567 v41
    let v569 : Types.EmitType<Types.std.string.String> = v568 |> unbox<Types.EmitType<Types.std.string.String>>
    let v570 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v571 : int64 = Fable.Core.Rust.emitExpr v570 v8
    let v572 : int64 = v571 - v9
    let v573 : string = (v572).ToString ()
    let v574 : int32 = 6
    let v575 : string = method1(v574, v573)
    let v576 : uint8 = Fable.Core.Rust.emitExpr () v50
    let v577 : Types.std.string.String = Fable.Core.Rust.emitExpr v52 v11
    let v578 : Types.EmitType<Types.std.string.String> = v577 |> unbox<Types.EmitType<Types.std.string.String>>
    let v579 : Types.std.string.String = Fable.Core.Rust.emitExpr v575 v11
    let v580 : Types.EmitType<Types.std.string.String> = v579 |> unbox<Types.EmitType<Types.std.string.String>>
    let v581 : Types.std.string.String = Fable.Core.Rust.emitExpr v57 v11
    let v582 : Types.EmitType<Types.std.string.String> = v581 |> unbox<Types.EmitType<Types.std.string.String>>
    let v583 : Types.std.string.String = Fable.Core.Rust.emitExpr v576 v60
    let v584 : Types.EmitType<Types.std.string.String> = v583 |> unbox<Types.EmitType<Types.std.string.String>>
    let v585 : Types.std.string.String = Fable.Core.Rust.emitExpr v63 v11
    let v586 : Types.EmitType<Types.std.string.String> = v585 |> unbox<Types.EmitType<Types.std.string.String>>
    let v587 : Types.std.string.String = Fable.Core.Rust.emitExpr v66 v11
    let v588 : Types.EmitType<Types.std.string.String> = v587 |> unbox<Types.EmitType<Types.std.string.String>>
    let v589 : (Types.EmitType<Types.std.string.String> []) = [|v578; v580; v582; v584; v586; v588|]
    let v590 : obj = Fable.Core.Rust.emitExpr v589 v39
    let v591 : Types.std.string.String = Fable.Core.Rust.emitExpr v590 v41
    let v592 : Types.EmitType<Types.std.string.String> = v591 |> unbox<Types.EmitType<Types.std.string.String>>
    let v593 : Types.std.string.String = Fable.Core.Rust.emitExpr v73 v11
    let v594 : Types.EmitType<Types.std.string.String> = v593 |> unbox<Types.EmitType<Types.std.string.String>>
    let v595 : (Types.EmitType<Types.std.string.String> []) = [|v594|]
    let v596 : obj = Fable.Core.Rust.emitExpr v595 v39
    let v597 : Types.std.string.String = Fable.Core.Rust.emitExpr v596 v41
    let v598 : Types.EmitType<Types.std.string.String> = v597 |> unbox<Types.EmitType<Types.std.string.String>>
    let v599 : Types.std.string.String = v598 |> unbox
    let v600 : string = Fable.Core.Rust.emitExpr v599 v81
    let v601 : string = $"r#\"{v83}\"#"
    let v602 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v601
    let v603 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v602 v86
    let v604 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v603 v88
    let v605 : string = method2(v600)
    let v606 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v605 v91
    let v607 : string = method3()
    let v608 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v607 v91
    let v609 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v604, v606, v608) v95
    let v610 : string = Fable.Core.Rust.emitExpr v609 v81
    let v611 : string = $"r#\"{v98}\"#"
    let v612 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v611
    let v613 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v612 v86
    let v614 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v613 v88
    let v615 : string = method2(v610)
    let v616 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v615 v91
    let v617 : string = method4()
    let v618 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v617 v91
    let v619 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v614, v616, v618) v95
    let v620 : string = Fable.Core.Rust.emitExpr v619 v81
    let v621 : string = $"r#\"{v109}\"#"
    let v622 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v621
    let v623 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v622 v86
    let v624 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v623 v88
    let v625 : string = method2(v620)
    let v626 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v625 v91
    let v627 : string = method5()
    let v628 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v627 v91
    let v629 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v624, v626, v628) v95
    let v630 : string = Fable.Core.Rust.emitExpr v629 v81
    let v631 : Types.std.string.String = Fable.Core.Rust.emitExpr v630 v11
    let v632 : Types.EmitType<Types.std.string.String> = v631 |> unbox<Types.EmitType<Types.std.string.String>>
    let v633 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v632, v122) v123
    let v634 : Types.std.string.String = Fable.Core.Rust.emitExpr v633 v125
    let v635 : Types.std.string.String = v569 |> unbox
    let v636 : string = Fable.Core.Rust.emitExpr v635 v81
    let v637 : string = $"r#\"{v83}\"#"
    let v638 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v637
    let v639 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v638 v86
    let v640 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v639 v88
    let v641 : string = method2(v636)
    let v642 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v641 v91
    let v643 : string = method3()
    let v644 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v643 v91
    let v645 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v640, v642, v644) v95
    let v646 : string = Fable.Core.Rust.emitExpr v645 v81
    let v647 : string = $"r#\"{v98}\"#"
    let v648 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v647
    let v649 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v648 v86
    let v650 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v649 v88
    let v651 : string = method2(v646)
    let v652 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v651 v91
    let v653 : string = method4()
    let v654 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v653 v91
    let v655 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v650, v652, v654) v95
    let v656 : string = Fable.Core.Rust.emitExpr v655 v81
    let v657 : string = $"r#\"{v109}\"#"
    let v658 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v657
    let v659 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v658 v86
    let v660 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v659 v88
    let v661 : string = method2(v656)
    let v662 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v661 v91
    let v663 : string = method5()
    let v664 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v663 v91
    let v665 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v660, v662, v664) v95
    let v666 : string = Fable.Core.Rust.emitExpr v665 v81
    let v667 : Types.std.string.String = Fable.Core.Rust.emitExpr v666 v11
    let v668 : Types.EmitType<Types.std.string.String> = v667 |> unbox<Types.EmitType<Types.std.string.String>>
    let v669 : string = v161.Substring (0, 2)
    let v670 : uint8 = Fable.Core.Rust.emitExpr v669 v163
    let v671 : string = v161.Substring (2, 2)
    let v672 : uint8 = Fable.Core.Rust.emitExpr v671 v163
    let v673 : string = v161.Substring (4, 2)
    let v674 : uint8 = Fable.Core.Rust.emitExpr v673 v163
    let v675 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v668, v670, v672, v674) v169
    let v676 : Types.std.string.String = Fable.Core.Rust.emitExpr v675 v125
    let v677 : Types.std.string.String = v592 |> unbox
    let v678 : string = Fable.Core.Rust.emitExpr v677 v81
    let v679 : string = $"r#\"{v83}\"#"
    let v680 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v679
    let v681 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v680 v86
    let v682 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v681 v88
    let v683 : string = method2(v678)
    let v684 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v683 v91
    let v685 : string = method3()
    let v686 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v685 v91
    let v687 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v682, v684, v686) v95
    let v688 : string = Fable.Core.Rust.emitExpr v687 v81
    let v689 : string = $"r#\"{v98}\"#"
    let v690 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v689
    let v691 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v690 v86
    let v692 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v691 v88
    let v693 : string = method2(v688)
    let v694 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v693 v91
    let v695 : string = method4()
    let v696 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v695 v91
    let v697 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v692, v694, v696) v95
    let v698 : string = Fable.Core.Rust.emitExpr v697 v81
    let v699 : string = $"r#\"{v109}\"#"
    let v700 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v699
    let v701 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v700 v86
    let v702 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v701 v88
    let v703 : string = method2(v698)
    let v704 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v703 v91
    let v705 : string = method5()
    let v706 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v705 v91
    let v707 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v702, v704, v706) v95
    let v708 : string = Fable.Core.Rust.emitExpr v707 v81
    let v709 : Types.std.string.String = Fable.Core.Rust.emitExpr v708 v11
    let v710 : Types.EmitType<Types.std.string.String> = v709 |> unbox<Types.EmitType<Types.std.string.String>>
    let v711 : string = v206.Substring (0, 2)
    let v712 : uint8 = Fable.Core.Rust.emitExpr v711 v163
    let v713 : string = v206.Substring (2, 2)
    let v714 : uint8 = Fable.Core.Rust.emitExpr v713 v163
    let v715 : string = v206.Substring (4, 2)
    let v716 : uint8 = Fable.Core.Rust.emitExpr v715 v163
    let v717 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v710, v712, v714, v716) v169
    let v718 : Types.std.string.String = Fable.Core.Rust.emitExpr v717 v125
    let v719 : string = $"{v634} {v676} {v718}"
    System.Console.WriteLine v719
    let v720 : string = "($0).to_str()"
    let v721 : Option<Types.Ref<Types.Str>> = Fable.Core.Rust.emitExpr v217 v720
    let v722 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v721 v380
    let v723 : string = ".spir"
    let v724 : Types.Ref<string> = v723 |> unbox
    let v725 : string = ".spi"
    let v726 : Types.Ref<string> = v725 |> unbox
    let v727 : string = "&$2.replace(&*$0, &$1)"
    let v728 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr struct (v724, v726, v722) v727
    let v729 : Types.Ref<string> = v725 |> unbox
    let v730 : string = ".fsx"
    let v731 : Types.Ref<string> = v730 |> unbox
    let v732 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr struct (v729, v731, v728) v727
    let v733 : Types.std.path.PathBuf = Fable.Core.Rust.emitExpr v732 v382
    let v734 : Result<Types.std.path.PathBuf, Types.std.io.Error> = Fable.Core.Rust.emitExpr v733 v18
    let v735 : Types.std.path.PathBuf = Fable.Core.Rust.emitExpr v734 v16
    let v736 : string = "fsx_path"
    let v737 : Types.std.string.String = Fable.Core.Rust.emitExpr v736 v11
    let v738 : Types.EmitType<Types.std.string.String> = v737 |> unbox<Types.EmitType<Types.std.string.String>>
    let v739 : string = Fable.Core.Rust.emitExpr v735 v21
    let v740 : Types.std.string.String = Fable.Core.Rust.emitExpr v739 v11
    let v741 : Types.EmitType<Types.std.string.String> = v740 |> unbox<Types.EmitType<Types.std.string.String>>
    let v742 : (Types.EmitType<Types.std.string.String> []) = [|v738; v741|]
    let v743 : obj = Fable.Core.Rust.emitExpr v742 v39
    let v744 : Types.std.string.String = Fable.Core.Rust.emitExpr v743 v41
    let v745 : Types.EmitType<Types.std.string.String> = v744 |> unbox<Types.EmitType<Types.std.string.String>>
    let v746 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v747 : int64 = Fable.Core.Rust.emitExpr v746 v8
    let v748 : int64 = v747 - v9
    let v749 : string = (v748).ToString ()
    let v750 : int32 = 6
    let v751 : string = method1(v750, v749)
    let v752 : uint8 = Fable.Core.Rust.emitExpr () v50
    let v753 : Types.std.string.String = Fable.Core.Rust.emitExpr v52 v11
    let v754 : Types.EmitType<Types.std.string.String> = v753 |> unbox<Types.EmitType<Types.std.string.String>>
    let v755 : Types.std.string.String = Fable.Core.Rust.emitExpr v751 v11
    let v756 : Types.EmitType<Types.std.string.String> = v755 |> unbox<Types.EmitType<Types.std.string.String>>
    let v757 : Types.std.string.String = Fable.Core.Rust.emitExpr v57 v11
    let v758 : Types.EmitType<Types.std.string.String> = v757 |> unbox<Types.EmitType<Types.std.string.String>>
    let v759 : Types.std.string.String = Fable.Core.Rust.emitExpr v752 v60
    let v760 : Types.EmitType<Types.std.string.String> = v759 |> unbox<Types.EmitType<Types.std.string.String>>
    let v761 : Types.std.string.String = Fable.Core.Rust.emitExpr v63 v11
    let v762 : Types.EmitType<Types.std.string.String> = v761 |> unbox<Types.EmitType<Types.std.string.String>>
    let v763 : Types.std.string.String = Fable.Core.Rust.emitExpr v66 v11
    let v764 : Types.EmitType<Types.std.string.String> = v763 |> unbox<Types.EmitType<Types.std.string.String>>
    let v765 : (Types.EmitType<Types.std.string.String> []) = [|v754; v756; v758; v760; v762; v764|]
    let v766 : obj = Fable.Core.Rust.emitExpr v765 v39
    let v767 : Types.std.string.String = Fable.Core.Rust.emitExpr v766 v41
    let v768 : Types.EmitType<Types.std.string.String> = v767 |> unbox<Types.EmitType<Types.std.string.String>>
    let v769 : Types.std.string.String = Fable.Core.Rust.emitExpr v73 v11
    let v770 : Types.EmitType<Types.std.string.String> = v769 |> unbox<Types.EmitType<Types.std.string.String>>
    let v771 : (Types.EmitType<Types.std.string.String> []) = [|v770|]
    let v772 : obj = Fable.Core.Rust.emitExpr v771 v39
    let v773 : Types.std.string.String = Fable.Core.Rust.emitExpr v772 v41
    let v774 : Types.EmitType<Types.std.string.String> = v773 |> unbox<Types.EmitType<Types.std.string.String>>
    let v775 : Types.std.string.String = v774 |> unbox
    let v776 : string = Fable.Core.Rust.emitExpr v775 v81
    let v777 : string = $"r#\"{v83}\"#"
    let v778 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v777
    let v779 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v778 v86
    let v780 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v779 v88
    let v781 : string = method2(v776)
    let v782 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v781 v91
    let v783 : string = method3()
    let v784 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v783 v91
    let v785 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v780, v782, v784) v95
    let v786 : string = Fable.Core.Rust.emitExpr v785 v81
    let v787 : string = $"r#\"{v98}\"#"
    let v788 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v787
    let v789 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v788 v86
    let v790 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v789 v88
    let v791 : string = method2(v786)
    let v792 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v791 v91
    let v793 : string = method4()
    let v794 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v793 v91
    let v795 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v790, v792, v794) v95
    let v796 : string = Fable.Core.Rust.emitExpr v795 v81
    let v797 : string = $"r#\"{v109}\"#"
    let v798 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v797
    let v799 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v798 v86
    let v800 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v799 v88
    let v801 : string = method2(v796)
    let v802 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v801 v91
    let v803 : string = method5()
    let v804 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v803 v91
    let v805 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v800, v802, v804) v95
    let v806 : string = Fable.Core.Rust.emitExpr v805 v81
    let v807 : Types.std.string.String = Fable.Core.Rust.emitExpr v806 v11
    let v808 : Types.EmitType<Types.std.string.String> = v807 |> unbox<Types.EmitType<Types.std.string.String>>
    let v809 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v808, v122) v123
    let v810 : Types.std.string.String = Fable.Core.Rust.emitExpr v809 v125
    let v811 : Types.std.string.String = v745 |> unbox
    let v812 : string = Fable.Core.Rust.emitExpr v811 v81
    let v813 : string = $"r#\"{v83}\"#"
    let v814 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v813
    let v815 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v814 v86
    let v816 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v815 v88
    let v817 : string = method2(v812)
    let v818 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v817 v91
    let v819 : string = method3()
    let v820 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v819 v91
    let v821 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v816, v818, v820) v95
    let v822 : string = Fable.Core.Rust.emitExpr v821 v81
    let v823 : string = $"r#\"{v98}\"#"
    let v824 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v823
    let v825 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v824 v86
    let v826 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v825 v88
    let v827 : string = method2(v822)
    let v828 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v827 v91
    let v829 : string = method4()
    let v830 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v829 v91
    let v831 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v826, v828, v830) v95
    let v832 : string = Fable.Core.Rust.emitExpr v831 v81
    let v833 : string = $"r#\"{v109}\"#"
    let v834 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v833
    let v835 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v834 v86
    let v836 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v835 v88
    let v837 : string = method2(v832)
    let v838 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v837 v91
    let v839 : string = method5()
    let v840 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v839 v91
    let v841 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v836, v838, v840) v95
    let v842 : string = Fable.Core.Rust.emitExpr v841 v81
    let v843 : Types.std.string.String = Fable.Core.Rust.emitExpr v842 v11
    let v844 : Types.EmitType<Types.std.string.String> = v843 |> unbox<Types.EmitType<Types.std.string.String>>
    let v845 : string = v161.Substring (0, 2)
    let v846 : uint8 = Fable.Core.Rust.emitExpr v845 v163
    let v847 : string = v161.Substring (2, 2)
    let v848 : uint8 = Fable.Core.Rust.emitExpr v847 v163
    let v849 : string = v161.Substring (4, 2)
    let v850 : uint8 = Fable.Core.Rust.emitExpr v849 v163
    let v851 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v844, v846, v848, v850) v169
    let v852 : Types.std.string.String = Fable.Core.Rust.emitExpr v851 v125
    let v853 : Types.std.string.String = v768 |> unbox
    let v854 : string = Fable.Core.Rust.emitExpr v853 v81
    let v855 : string = $"r#\"{v83}\"#"
    let v856 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v855
    let v857 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v856 v86
    let v858 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v857 v88
    let v859 : string = method2(v854)
    let v860 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v859 v91
    let v861 : string = method3()
    let v862 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v861 v91
    let v863 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v858, v860, v862) v95
    let v864 : string = Fable.Core.Rust.emitExpr v863 v81
    let v865 : string = $"r#\"{v98}\"#"
    let v866 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v865
    let v867 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v866 v86
    let v868 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v867 v88
    let v869 : string = method2(v864)
    let v870 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v869 v91
    let v871 : string = method4()
    let v872 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v871 v91
    let v873 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v868, v870, v872) v95
    let v874 : string = Fable.Core.Rust.emitExpr v873 v81
    let v875 : string = $"r#\"{v109}\"#"
    let v876 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v875
    let v877 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v876 v86
    let v878 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v877 v88
    let v879 : string = method2(v874)
    let v880 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v879 v91
    let v881 : string = method5()
    let v882 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v881 v91
    let v883 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v878, v880, v882) v95
    let v884 : string = Fable.Core.Rust.emitExpr v883 v81
    let v885 : Types.std.string.String = Fable.Core.Rust.emitExpr v884 v11
    let v886 : Types.EmitType<Types.std.string.String> = v885 |> unbox<Types.EmitType<Types.std.string.String>>
    let v887 : string = v206.Substring (0, 2)
    let v888 : uint8 = Fable.Core.Rust.emitExpr v887 v163
    let v889 : string = v206.Substring (2, 2)
    let v890 : uint8 = Fable.Core.Rust.emitExpr v889 v163
    let v891 : string = v206.Substring (4, 2)
    let v892 : uint8 = Fable.Core.Rust.emitExpr v891 v163
    let v893 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v886, v888, v890, v892) v169
    let v894 : Types.std.string.String = Fable.Core.Rust.emitExpr v893 v125
    let v895 : string = $"{v810} {v852} {v894}"
    System.Console.WriteLine v895
    let v896 : string = ""
    let v897 : string = "std::fs::write($0, $1.as_str())"
    let v898 : Result<unit, Types.std.io.Error> = Fable.Core.Rust.emitExpr struct (v735, v896) v897
    let v899 : string = "*(($0).as_ref()).unwrap()"
    Fable.Core.Rust.emitExpr v898 v899
    let v900 : string = "> fs_write fsx_path \"\"; ok"
    let v901 : Types.std.string.String = Fable.Core.Rust.emitExpr v900 v11
    let v902 : Types.EmitType<Types.std.string.String> = v901 |> unbox<Types.EmitType<Types.std.string.String>>
    let v903 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v904 : int64 = Fable.Core.Rust.emitExpr v903 v8
    let v905 : int64 = v904 - v9
    let v906 : string = (v905).ToString ()
    let v907 : int32 = 6
    let v908 : string = method1(v907, v906)
    let v909 : uint8 = Fable.Core.Rust.emitExpr () v50
    let v910 : Types.std.string.String = Fable.Core.Rust.emitExpr v52 v11
    let v911 : Types.EmitType<Types.std.string.String> = v910 |> unbox<Types.EmitType<Types.std.string.String>>
    let v912 : Types.std.string.String = Fable.Core.Rust.emitExpr v908 v11
    let v913 : Types.EmitType<Types.std.string.String> = v912 |> unbox<Types.EmitType<Types.std.string.String>>
    let v914 : Types.std.string.String = Fable.Core.Rust.emitExpr v57 v11
    let v915 : Types.EmitType<Types.std.string.String> = v914 |> unbox<Types.EmitType<Types.std.string.String>>
    let v916 : Types.std.string.String = Fable.Core.Rust.emitExpr v909 v60
    let v917 : Types.EmitType<Types.std.string.String> = v916 |> unbox<Types.EmitType<Types.std.string.String>>
    let v918 : Types.std.string.String = Fable.Core.Rust.emitExpr v63 v11
    let v919 : Types.EmitType<Types.std.string.String> = v918 |> unbox<Types.EmitType<Types.std.string.String>>
    let v920 : Types.std.string.String = Fable.Core.Rust.emitExpr v66 v11
    let v921 : Types.EmitType<Types.std.string.String> = v920 |> unbox<Types.EmitType<Types.std.string.String>>
    let v922 : (Types.EmitType<Types.std.string.String> []) = [|v911; v913; v915; v917; v919; v921|]
    let v923 : obj = Fable.Core.Rust.emitExpr v922 v39
    let v924 : Types.std.string.String = Fable.Core.Rust.emitExpr v923 v41
    let v925 : Types.EmitType<Types.std.string.String> = v924 |> unbox<Types.EmitType<Types.std.string.String>>
    let v926 : Types.std.string.String = Fable.Core.Rust.emitExpr v73 v11
    let v927 : Types.EmitType<Types.std.string.String> = v926 |> unbox<Types.EmitType<Types.std.string.String>>
    let v928 : (Types.EmitType<Types.std.string.String> []) = [|v927|]
    let v929 : obj = Fable.Core.Rust.emitExpr v928 v39
    let v930 : Types.std.string.String = Fable.Core.Rust.emitExpr v929 v41
    let v931 : Types.EmitType<Types.std.string.String> = v930 |> unbox<Types.EmitType<Types.std.string.String>>
    let v932 : Types.std.string.String = v931 |> unbox
    let v933 : string = Fable.Core.Rust.emitExpr v932 v81
    let v934 : string = $"r#\"{v83}\"#"
    let v935 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v934
    let v936 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v935 v86
    let v937 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v936 v88
    let v938 : string = method2(v933)
    let v939 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v938 v91
    let v940 : string = method3()
    let v941 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v940 v91
    let v942 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v937, v939, v941) v95
    let v943 : string = Fable.Core.Rust.emitExpr v942 v81
    let v944 : string = $"r#\"{v98}\"#"
    let v945 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v944
    let v946 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v945 v86
    let v947 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v946 v88
    let v948 : string = method2(v943)
    let v949 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v948 v91
    let v950 : string = method4()
    let v951 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v950 v91
    let v952 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v947, v949, v951) v95
    let v953 : string = Fable.Core.Rust.emitExpr v952 v81
    let v954 : string = $"r#\"{v109}\"#"
    let v955 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v954
    let v956 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v955 v86
    let v957 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v956 v88
    let v958 : string = method2(v953)
    let v959 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v958 v91
    let v960 : string = method5()
    let v961 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v960 v91
    let v962 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v957, v959, v961) v95
    let v963 : string = Fable.Core.Rust.emitExpr v962 v81
    let v964 : Types.std.string.String = Fable.Core.Rust.emitExpr v963 v11
    let v965 : Types.EmitType<Types.std.string.String> = v964 |> unbox<Types.EmitType<Types.std.string.String>>
    let v966 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v965, v122) v123
    let v967 : Types.std.string.String = Fable.Core.Rust.emitExpr v966 v125
    let v968 : Types.std.string.String = v902 |> unbox
    let v969 : string = Fable.Core.Rust.emitExpr v968 v81
    let v970 : string = $"r#\"{v83}\"#"
    let v971 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v970
    let v972 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v971 v86
    let v973 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v972 v88
    let v974 : string = method2(v969)
    let v975 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v974 v91
    let v976 : string = method3()
    let v977 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v976 v91
    let v978 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v973, v975, v977) v95
    let v979 : string = Fable.Core.Rust.emitExpr v978 v81
    let v980 : string = $"r#\"{v98}\"#"
    let v981 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v980
    let v982 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v981 v86
    let v983 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v982 v88
    let v984 : string = method2(v979)
    let v985 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v984 v91
    let v986 : string = method4()
    let v987 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v986 v91
    let v988 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v983, v985, v987) v95
    let v989 : string = Fable.Core.Rust.emitExpr v988 v81
    let v990 : string = $"r#\"{v109}\"#"
    let v991 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v990
    let v992 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v991 v86
    let v993 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v992 v88
    let v994 : string = method2(v989)
    let v995 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v994 v91
    let v996 : string = method5()
    let v997 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v996 v91
    let v998 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v993, v995, v997) v95
    let v999 : string = Fable.Core.Rust.emitExpr v998 v81
    let v1000 : Types.std.string.String = Fable.Core.Rust.emitExpr v999 v11
    let v1001 : Types.EmitType<Types.std.string.String> = v1000 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1002 : string = v161.Substring (0, 2)
    let v1003 : uint8 = Fable.Core.Rust.emitExpr v1002 v163
    let v1004 : string = v161.Substring (2, 2)
    let v1005 : uint8 = Fable.Core.Rust.emitExpr v1004 v163
    let v1006 : string = v161.Substring (4, 2)
    let v1007 : uint8 = Fable.Core.Rust.emitExpr v1006 v163
    let v1008 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v1001, v1003, v1005, v1007) v169
    let v1009 : Types.std.string.String = Fable.Core.Rust.emitExpr v1008 v125
    let v1010 : Types.std.string.String = v925 |> unbox
    let v1011 : string = Fable.Core.Rust.emitExpr v1010 v81
    let v1012 : string = $"r#\"{v83}\"#"
    let v1013 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1012
    let v1014 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1013 v86
    let v1015 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1014 v88
    let v1016 : string = method2(v1011)
    let v1017 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1016 v91
    let v1018 : string = method3()
    let v1019 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1018 v91
    let v1020 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1015, v1017, v1019) v95
    let v1021 : string = Fable.Core.Rust.emitExpr v1020 v81
    let v1022 : string = $"r#\"{v98}\"#"
    let v1023 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1022
    let v1024 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1023 v86
    let v1025 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1024 v88
    let v1026 : string = method2(v1021)
    let v1027 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1026 v91
    let v1028 : string = method4()
    let v1029 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1028 v91
    let v1030 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1025, v1027, v1029) v95
    let v1031 : string = Fable.Core.Rust.emitExpr v1030 v81
    let v1032 : string = $"r#\"{v109}\"#"
    let v1033 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1032
    let v1034 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1033 v86
    let v1035 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1034 v88
    let v1036 : string = method2(v1031)
    let v1037 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1036 v91
    let v1038 : string = method5()
    let v1039 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1038 v91
    let v1040 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1035, v1037, v1039) v95
    let v1041 : string = Fable.Core.Rust.emitExpr v1040 v81
    let v1042 : Types.std.string.String = Fable.Core.Rust.emitExpr v1041 v11
    let v1043 : Types.EmitType<Types.std.string.String> = v1042 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1044 : string = v206.Substring (0, 2)
    let v1045 : uint8 = Fable.Core.Rust.emitExpr v1044 v163
    let v1046 : string = v206.Substring (2, 2)
    let v1047 : uint8 = Fable.Core.Rust.emitExpr v1046 v163
    let v1048 : string = v206.Substring (4, 2)
    let v1049 : uint8 = Fable.Core.Rust.emitExpr v1048 v163
    let v1050 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v1043, v1045, v1047, v1049) v169
    let v1051 : Types.std.string.String = Fable.Core.Rust.emitExpr v1050 v125
    let v1052 : string = $"{v967} {v1009} {v1051}"
    System.Console.WriteLine v1052
    let v1053 : string = "std::fs::read_to_string($0)"
    let v1054 : Result<Types.std.string.String, Types.std.io.Error> = Fable.Core.Rust.emitExpr v559 v1053
    let v1055 : string = "($0).as_ref().unwrap().to_string()"
    let v1056 : Types.std.string.String = Fable.Core.Rust.emitExpr v1054 v1055
    let struct (v1057 : string, v1058 : string, v1059 : string, v1060 : bool) = method0()
    let v1061 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v1062 : int64 = Fable.Core.Rust.emitExpr v1061 v8
    let v1063 : Types.std.string.String = Fable.Core.Rust.emitExpr v560 v11
    let v1064 : Types.EmitType<Types.std.string.String> = v1063 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1065 : string = Fable.Core.Rust.emitExpr v559 v21
    let v1066 : Types.std.string.String = Fable.Core.Rust.emitExpr v1065 v11
    let v1067 : Types.EmitType<Types.std.string.String> = v1066 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1068 : string = "spiproj_text len"
    let v1069 : Types.std.string.String = Fable.Core.Rust.emitExpr v1068 v11
    let v1070 : Types.EmitType<Types.std.string.String> = v1069 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1071 : string = "($0).len().try_into().unwrap()"
    let v1072 : int32 = Fable.Core.Rust.emitExpr v1056 v1071
    let v1073 : Types.std.string.String = Fable.Core.Rust.emitExpr v1072 v60
    let v1074 : Types.EmitType<Types.std.string.String> = v1073 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1075 : (Types.EmitType<Types.std.string.String> []) = [|v1064; v1067; v1070; v1074|]
    let v1076 : obj = Fable.Core.Rust.emitExpr v1075 v39
    let v1077 : Types.std.string.String = Fable.Core.Rust.emitExpr v1076 v41
    let v1078 : Types.EmitType<Types.std.string.String> = v1077 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1079 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v1080 : int64 = Fable.Core.Rust.emitExpr v1079 v8
    let v1081 : int64 = v1080 - v1062
    let v1082 : string = (v1081).ToString ()
    let v1083 : int32 = 6
    let v1084 : string = method1(v1083, v1082)
    let v1085 : uint8 = Fable.Core.Rust.emitExpr () v50
    let v1086 : Types.std.string.String = Fable.Core.Rust.emitExpr v52 v11
    let v1087 : Types.EmitType<Types.std.string.String> = v1086 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1088 : Types.std.string.String = Fable.Core.Rust.emitExpr v1084 v11
    let v1089 : Types.EmitType<Types.std.string.String> = v1088 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1090 : Types.std.string.String = Fable.Core.Rust.emitExpr v57 v11
    let v1091 : Types.EmitType<Types.std.string.String> = v1090 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1092 : Types.std.string.String = Fable.Core.Rust.emitExpr v1085 v60
    let v1093 : Types.EmitType<Types.std.string.String> = v1092 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1094 : Types.std.string.String = Fable.Core.Rust.emitExpr v63 v11
    let v1095 : Types.EmitType<Types.std.string.String> = v1094 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1096 : Types.std.string.String = Fable.Core.Rust.emitExpr v66 v11
    let v1097 : Types.EmitType<Types.std.string.String> = v1096 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1098 : (Types.EmitType<Types.std.string.String> []) = [|v1087; v1089; v1091; v1093; v1095; v1097|]
    let v1099 : obj = Fable.Core.Rust.emitExpr v1098 v39
    let v1100 : Types.std.string.String = Fable.Core.Rust.emitExpr v1099 v41
    let v1101 : Types.EmitType<Types.std.string.String> = v1100 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1102 : string = "> spiproj_open ()"
    let v1103 : Types.std.string.String = Fable.Core.Rust.emitExpr v1102 v11
    let v1104 : Types.EmitType<Types.std.string.String> = v1103 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1105 : (Types.EmitType<Types.std.string.String> []) = [|v1104|]
    let v1106 : obj = Fable.Core.Rust.emitExpr v1105 v39
    let v1107 : Types.std.string.String = Fable.Core.Rust.emitExpr v1106 v41
    let v1108 : Types.EmitType<Types.std.string.String> = v1107 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1109 : Types.std.string.String = v1108 |> unbox
    let v1110 : string = Fable.Core.Rust.emitExpr v1109 v81
    let v1111 : string = $"r#\"{v83}\"#"
    let v1112 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1111
    let v1113 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1112 v86
    let v1114 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1113 v88
    let v1115 : string = method2(v1110)
    let v1116 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1115 v91
    let v1117 : string = method3()
    let v1118 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1117 v91
    let v1119 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1114, v1116, v1118) v95
    let v1120 : string = Fable.Core.Rust.emitExpr v1119 v81
    let v1121 : string = $"r#\"{v98}\"#"
    let v1122 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1121
    let v1123 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1122 v86
    let v1124 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1123 v88
    let v1125 : string = method2(v1120)
    let v1126 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1125 v91
    let v1127 : string = method4()
    let v1128 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1127 v91
    let v1129 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1124, v1126, v1128) v95
    let v1130 : string = Fable.Core.Rust.emitExpr v1129 v81
    let v1131 : string = $"r#\"{v109}\"#"
    let v1132 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1131
    let v1133 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1132 v86
    let v1134 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1133 v88
    let v1135 : string = method2(v1130)
    let v1136 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1135 v91
    let v1137 : string = method5()
    let v1138 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1137 v91
    let v1139 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1134, v1136, v1138) v95
    let v1140 : string = Fable.Core.Rust.emitExpr v1139 v81
    let v1141 : Types.std.string.String = Fable.Core.Rust.emitExpr v1140 v11
    let v1142 : Types.EmitType<Types.std.string.String> = v1141 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1143 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v1142, v122) v123
    let v1144 : Types.std.string.String = Fable.Core.Rust.emitExpr v1143 v125
    let v1145 : Types.std.string.String = v1078 |> unbox
    let v1146 : string = Fable.Core.Rust.emitExpr v1145 v81
    let v1147 : string = $"r#\"{v83}\"#"
    let v1148 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1147
    let v1149 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1148 v86
    let v1150 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1149 v88
    let v1151 : string = method2(v1146)
    let v1152 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1151 v91
    let v1153 : string = method3()
    let v1154 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1153 v91
    let v1155 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1150, v1152, v1154) v95
    let v1156 : string = Fable.Core.Rust.emitExpr v1155 v81
    let v1157 : string = $"r#\"{v98}\"#"
    let v1158 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1157
    let v1159 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1158 v86
    let v1160 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1159 v88
    let v1161 : string = method2(v1156)
    let v1162 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1161 v91
    let v1163 : string = method4()
    let v1164 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1163 v91
    let v1165 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1160, v1162, v1164) v95
    let v1166 : string = Fable.Core.Rust.emitExpr v1165 v81
    let v1167 : string = $"r#\"{v109}\"#"
    let v1168 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1167
    let v1169 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1168 v86
    let v1170 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1169 v88
    let v1171 : string = method2(v1166)
    let v1172 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1171 v91
    let v1173 : string = method5()
    let v1174 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1173 v91
    let v1175 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1170, v1172, v1174) v95
    let v1176 : string = Fable.Core.Rust.emitExpr v1175 v81
    let v1177 : Types.std.string.String = Fable.Core.Rust.emitExpr v1176 v11
    let v1178 : Types.EmitType<Types.std.string.String> = v1177 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1179 : string = "e36a62"
    let v1180 : string = v1179.Substring (0, 2)
    let v1181 : uint8 = Fable.Core.Rust.emitExpr v1180 v163
    let v1182 : string = v1179.Substring (2, 2)
    let v1183 : uint8 = Fable.Core.Rust.emitExpr v1182 v163
    let v1184 : string = v1179.Substring (4, 2)
    let v1185 : uint8 = Fable.Core.Rust.emitExpr v1184 v163
    let v1186 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v1178, v1181, v1183, v1185) v169
    let v1187 : Types.std.string.String = Fable.Core.Rust.emitExpr v1186 v125
    let v1188 : Types.std.string.String = v1101 |> unbox
    let v1189 : string = Fable.Core.Rust.emitExpr v1188 v81
    let v1190 : string = $"r#\"{v83}\"#"
    let v1191 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1190
    let v1192 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1191 v86
    let v1193 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1192 v88
    let v1194 : string = method2(v1189)
    let v1195 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1194 v91
    let v1196 : string = method3()
    let v1197 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1196 v91
    let v1198 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1193, v1195, v1197) v95
    let v1199 : string = Fable.Core.Rust.emitExpr v1198 v81
    let v1200 : string = $"r#\"{v98}\"#"
    let v1201 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1200
    let v1202 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1201 v86
    let v1203 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1202 v88
    let v1204 : string = method2(v1199)
    let v1205 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1204 v91
    let v1206 : string = method4()
    let v1207 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1206 v91
    let v1208 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1203, v1205, v1207) v95
    let v1209 : string = Fable.Core.Rust.emitExpr v1208 v81
    let v1210 : string = $"r#\"{v109}\"#"
    let v1211 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1210
    let v1212 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1211 v86
    let v1213 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1212 v88
    let v1214 : string = method2(v1209)
    let v1215 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1214 v91
    let v1216 : string = method5()
    let v1217 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1216 v91
    let v1218 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1213, v1215, v1217) v95
    let v1219 : string = Fable.Core.Rust.emitExpr v1218 v81
    let v1220 : Types.std.string.String = Fable.Core.Rust.emitExpr v1219 v11
    let v1221 : Types.EmitType<Types.std.string.String> = v1220 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1222 : string = v206.Substring (0, 2)
    let v1223 : uint8 = Fable.Core.Rust.emitExpr v1222 v163
    let v1224 : string = v206.Substring (2, 2)
    let v1225 : uint8 = Fable.Core.Rust.emitExpr v1224 v163
    let v1226 : string = v206.Substring (4, 2)
    let v1227 : uint8 = Fable.Core.Rust.emitExpr v1226 v163
    let v1228 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v1221, v1223, v1225, v1227) v169
    let v1229 : Types.std.string.String = Fable.Core.Rust.emitExpr v1228 v125
    let v1230 : string = $"{v1144} {v1187} {v1229}"
    System.Console.WriteLine v1230
    let v1231 : string = "{"
    let v1232 : string = "\"ProjectFileOpen\": {"
    let v1233 : string = v1231 + v1232
    let v1234 : string = "\"uri\": $0,"
    let v1235 : string = v1233 + v1234
    let v1236 : string = "\"spiprojText\": $1"
    let v1237 : string = v1235 + v1236
    let v1238 : string = "}"
    let v1239 : string = v1237 + v1238
    let v1240 : string = v1239 + v1238
    let v1241 : string = "serde_json::json!("
    let v1242 : string = v1241 + v1240
    let v1243 : string = ").to_string()"
    let v1244 : string = v1242 + v1243
    let v1245 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v559, v1056) v1244
    let v1246 : string = "json len="
    let v1247 : Types.std.string.String = Fable.Core.Rust.emitExpr v1246 v11
    let v1248 : Types.EmitType<Types.std.string.String> = v1247 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1249 : int32 = Fable.Core.Rust.emitExpr v1245 v1071
    let v1250 : Types.std.string.String = Fable.Core.Rust.emitExpr v1249 v60
    let v1251 : Types.EmitType<Types.std.string.String> = v1250 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1252 : (Types.EmitType<Types.std.string.String> []) = [|v1248; v1251|]
    let v1253 : obj = Fable.Core.Rust.emitExpr v1252 v39
    let v1254 : Types.std.string.String = Fable.Core.Rust.emitExpr v1253 v41
    let v1255 : Types.EmitType<Types.std.string.String> = v1254 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1256 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v1257 : int64 = Fable.Core.Rust.emitExpr v1256 v8
    let v1258 : int64 = v1257 - v1062
    let v1259 : string = (v1258).ToString ()
    let v1260 : int32 = 6
    let v1261 : string = method1(v1260, v1259)
    let v1262 : uint8 = Fable.Core.Rust.emitExpr () v50
    let v1263 : Types.std.string.String = Fable.Core.Rust.emitExpr v52 v11
    let v1264 : Types.EmitType<Types.std.string.String> = v1263 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1265 : Types.std.string.String = Fable.Core.Rust.emitExpr v1261 v11
    let v1266 : Types.EmitType<Types.std.string.String> = v1265 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1267 : Types.std.string.String = Fable.Core.Rust.emitExpr v57 v11
    let v1268 : Types.EmitType<Types.std.string.String> = v1267 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1269 : Types.std.string.String = Fable.Core.Rust.emitExpr v1262 v60
    let v1270 : Types.EmitType<Types.std.string.String> = v1269 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1271 : Types.std.string.String = Fable.Core.Rust.emitExpr v63 v11
    let v1272 : Types.EmitType<Types.std.string.String> = v1271 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1273 : Types.std.string.String = Fable.Core.Rust.emitExpr v66 v11
    let v1274 : Types.EmitType<Types.std.string.String> = v1273 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1275 : (Types.EmitType<Types.std.string.String> []) = [|v1264; v1266; v1268; v1270; v1272; v1274|]
    let v1276 : obj = Fable.Core.Rust.emitExpr v1275 v39
    let v1277 : Types.std.string.String = Fable.Core.Rust.emitExpr v1276 v41
    let v1278 : Types.EmitType<Types.std.string.String> = v1277 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1279 : Types.std.string.String = Fable.Core.Rust.emitExpr v1102 v11
    let v1280 : Types.EmitType<Types.std.string.String> = v1279 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1281 : (Types.EmitType<Types.std.string.String> []) = [|v1280|]
    let v1282 : obj = Fable.Core.Rust.emitExpr v1281 v39
    let v1283 : Types.std.string.String = Fable.Core.Rust.emitExpr v1282 v41
    let v1284 : Types.EmitType<Types.std.string.String> = v1283 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1285 : Types.std.string.String = v1284 |> unbox
    let v1286 : string = Fable.Core.Rust.emitExpr v1285 v81
    let v1287 : string = $"r#\"{v83}\"#"
    let v1288 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1287
    let v1289 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1288 v86
    let v1290 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1289 v88
    let v1291 : string = method2(v1286)
    let v1292 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1291 v91
    let v1293 : string = method3()
    let v1294 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1293 v91
    let v1295 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1290, v1292, v1294) v95
    let v1296 : string = Fable.Core.Rust.emitExpr v1295 v81
    let v1297 : string = $"r#\"{v98}\"#"
    let v1298 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1297
    let v1299 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1298 v86
    let v1300 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1299 v88
    let v1301 : string = method2(v1296)
    let v1302 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1301 v91
    let v1303 : string = method4()
    let v1304 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1303 v91
    let v1305 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1300, v1302, v1304) v95
    let v1306 : string = Fable.Core.Rust.emitExpr v1305 v81
    let v1307 : string = $"r#\"{v109}\"#"
    let v1308 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1307
    let v1309 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1308 v86
    let v1310 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1309 v88
    let v1311 : string = method2(v1306)
    let v1312 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1311 v91
    let v1313 : string = method5()
    let v1314 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1313 v91
    let v1315 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1310, v1312, v1314) v95
    let v1316 : string = Fable.Core.Rust.emitExpr v1315 v81
    let v1317 : Types.std.string.String = Fable.Core.Rust.emitExpr v1316 v11
    let v1318 : Types.EmitType<Types.std.string.String> = v1317 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1319 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v1318, v122) v123
    let v1320 : Types.std.string.String = Fable.Core.Rust.emitExpr v1319 v125
    let v1321 : Types.std.string.String = v1255 |> unbox
    let v1322 : string = Fable.Core.Rust.emitExpr v1321 v81
    let v1323 : string = $"r#\"{v83}\"#"
    let v1324 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1323
    let v1325 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1324 v86
    let v1326 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1325 v88
    let v1327 : string = method2(v1322)
    let v1328 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1327 v91
    let v1329 : string = method3()
    let v1330 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1329 v91
    let v1331 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1326, v1328, v1330) v95
    let v1332 : string = Fable.Core.Rust.emitExpr v1331 v81
    let v1333 : string = $"r#\"{v98}\"#"
    let v1334 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1333
    let v1335 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1334 v86
    let v1336 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1335 v88
    let v1337 : string = method2(v1332)
    let v1338 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1337 v91
    let v1339 : string = method4()
    let v1340 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1339 v91
    let v1341 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1336, v1338, v1340) v95
    let v1342 : string = Fable.Core.Rust.emitExpr v1341 v81
    let v1343 : string = $"r#\"{v109}\"#"
    let v1344 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1343
    let v1345 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1344 v86
    let v1346 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1345 v88
    let v1347 : string = method2(v1342)
    let v1348 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1347 v91
    let v1349 : string = method5()
    let v1350 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1349 v91
    let v1351 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1346, v1348, v1350) v95
    let v1352 : string = Fable.Core.Rust.emitExpr v1351 v81
    let v1353 : Types.std.string.String = Fable.Core.Rust.emitExpr v1352 v11
    let v1354 : Types.EmitType<Types.std.string.String> = v1353 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1355 : string = v1179.Substring (0, 2)
    let v1356 : uint8 = Fable.Core.Rust.emitExpr v1355 v163
    let v1357 : string = v1179.Substring (2, 2)
    let v1358 : uint8 = Fable.Core.Rust.emitExpr v1357 v163
    let v1359 : string = v1179.Substring (4, 2)
    let v1360 : uint8 = Fable.Core.Rust.emitExpr v1359 v163
    let v1361 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v1354, v1356, v1358, v1360) v169
    let v1362 : Types.std.string.String = Fable.Core.Rust.emitExpr v1361 v125
    let v1363 : Types.std.string.String = v1278 |> unbox
    let v1364 : string = Fable.Core.Rust.emitExpr v1363 v81
    let v1365 : string = $"r#\"{v83}\"#"
    let v1366 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1365
    let v1367 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1366 v86
    let v1368 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1367 v88
    let v1369 : string = method2(v1364)
    let v1370 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1369 v91
    let v1371 : string = method3()
    let v1372 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1371 v91
    let v1373 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1368, v1370, v1372) v95
    let v1374 : string = Fable.Core.Rust.emitExpr v1373 v81
    let v1375 : string = $"r#\"{v98}\"#"
    let v1376 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1375
    let v1377 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1376 v86
    let v1378 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1377 v88
    let v1379 : string = method2(v1374)
    let v1380 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1379 v91
    let v1381 : string = method4()
    let v1382 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1381 v91
    let v1383 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1378, v1380, v1382) v95
    let v1384 : string = Fable.Core.Rust.emitExpr v1383 v81
    let v1385 : string = $"r#\"{v109}\"#"
    let v1386 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1385
    let v1387 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1386 v86
    let v1388 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1387 v88
    let v1389 : string = method2(v1384)
    let v1390 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1389 v91
    let v1391 : string = method5()
    let v1392 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1391 v91
    let v1393 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1388, v1390, v1392) v95
    let v1394 : string = Fable.Core.Rust.emitExpr v1393 v81
    let v1395 : Types.std.string.String = Fable.Core.Rust.emitExpr v1394 v11
    let v1396 : Types.EmitType<Types.std.string.String> = v1395 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1397 : string = v206.Substring (0, 2)
    let v1398 : uint8 = Fable.Core.Rust.emitExpr v1397 v163
    let v1399 : string = v206.Substring (2, 2)
    let v1400 : uint8 = Fable.Core.Rust.emitExpr v1399 v163
    let v1401 : string = v206.Substring (4, 2)
    let v1402 : uint8 = Fable.Core.Rust.emitExpr v1401 v163
    let v1403 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v1396, v1398, v1400, v1402) v169
    let v1404 : Types.std.string.String = Fable.Core.Rust.emitExpr v1403 v125
    let v1405 : string = $"{v1320} {v1362} {v1404}"
    System.Console.WriteLine v1405
    let struct (v1406 : string, v1407 : string, v1408 : string, v1409 : bool) = method0()
    let v1410 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v1411 : int64 = Fable.Core.Rust.emitExpr v1410 v8
    let v1412 : string = "host"
    let v1413 : Types.std.string.String = Fable.Core.Rust.emitExpr v1412 v11
    let v1414 : Types.EmitType<Types.std.string.String> = v1413 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1415 : string = "localhost"
    let v1416 : Types.std.string.String = Fable.Core.Rust.emitExpr v1415 v11
    let v1417 : Types.EmitType<Types.std.string.String> = v1416 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1418 : string = "port"
    let v1419 : Types.std.string.String = Fable.Core.Rust.emitExpr v1418 v11
    let v1420 : Types.EmitType<Types.std.string.String> = v1419 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1421 : Types.std.string.String = Fable.Core.Rust.emitExpr 13805 v60
    let v1422 : Types.EmitType<Types.std.string.String> = v1421 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1423 : string = "msg len"
    let v1424 : Types.std.string.String = Fable.Core.Rust.emitExpr v1423 v11
    let v1425 : Types.EmitType<Types.std.string.String> = v1424 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1426 : int32 = Fable.Core.Rust.emitExpr v1245 v1071
    let v1427 : Types.std.string.String = Fable.Core.Rust.emitExpr v1426 v60
    let v1428 : Types.EmitType<Types.std.string.String> = v1427 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1429 : (Types.EmitType<Types.std.string.String> []) = [|v1414; v1417; v1420; v1422; v1425; v1428|]
    let v1430 : obj = Fable.Core.Rust.emitExpr v1429 v39
    let v1431 : Types.std.string.String = Fable.Core.Rust.emitExpr v1430 v41
    let v1432 : Types.EmitType<Types.std.string.String> = v1431 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1433 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v1434 : int64 = Fable.Core.Rust.emitExpr v1433 v8
    let v1435 : int64 = v1434 - v1411
    let v1436 : string = (v1435).ToString ()
    let v1437 : int32 = 6
    let v1438 : string = method1(v1437, v1436)
    let v1439 : uint8 = Fable.Core.Rust.emitExpr () v50
    let v1440 : Types.std.string.String = Fable.Core.Rust.emitExpr v52 v11
    let v1441 : Types.EmitType<Types.std.string.String> = v1440 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1442 : Types.std.string.String = Fable.Core.Rust.emitExpr v1438 v11
    let v1443 : Types.EmitType<Types.std.string.String> = v1442 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1444 : Types.std.string.String = Fable.Core.Rust.emitExpr v57 v11
    let v1445 : Types.EmitType<Types.std.string.String> = v1444 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1446 : Types.std.string.String = Fable.Core.Rust.emitExpr v1439 v60
    let v1447 : Types.EmitType<Types.std.string.String> = v1446 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1448 : Types.std.string.String = Fable.Core.Rust.emitExpr v63 v11
    let v1449 : Types.EmitType<Types.std.string.String> = v1448 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1450 : Types.std.string.String = Fable.Core.Rust.emitExpr v66 v11
    let v1451 : Types.EmitType<Types.std.string.String> = v1450 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1452 : (Types.EmitType<Types.std.string.String> []) = [|v1441; v1443; v1445; v1447; v1449; v1451|]
    let v1453 : obj = Fable.Core.Rust.emitExpr v1452 v39
    let v1454 : Types.std.string.String = Fable.Core.Rust.emitExpr v1453 v41
    let v1455 : Types.EmitType<Types.std.string.String> = v1454 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1456 : string = "> zmq_request ()"
    let v1457 : Types.std.string.String = Fable.Core.Rust.emitExpr v1456 v11
    let v1458 : Types.EmitType<Types.std.string.String> = v1457 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1459 : (Types.EmitType<Types.std.string.String> []) = [|v1458|]
    let v1460 : obj = Fable.Core.Rust.emitExpr v1459 v39
    let v1461 : Types.std.string.String = Fable.Core.Rust.emitExpr v1460 v41
    let v1462 : Types.EmitType<Types.std.string.String> = v1461 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1463 : Types.std.string.String = v1462 |> unbox
    let v1464 : string = Fable.Core.Rust.emitExpr v1463 v81
    let v1465 : string = $"r#\"{v83}\"#"
    let v1466 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1465
    let v1467 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1466 v86
    let v1468 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1467 v88
    let v1469 : string = method2(v1464)
    let v1470 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1469 v91
    let v1471 : string = method3()
    let v1472 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1471 v91
    let v1473 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1468, v1470, v1472) v95
    let v1474 : string = Fable.Core.Rust.emitExpr v1473 v81
    let v1475 : string = $"r#\"{v98}\"#"
    let v1476 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1475
    let v1477 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1476 v86
    let v1478 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1477 v88
    let v1479 : string = method2(v1474)
    let v1480 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1479 v91
    let v1481 : string = method4()
    let v1482 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1481 v91
    let v1483 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1478, v1480, v1482) v95
    let v1484 : string = Fable.Core.Rust.emitExpr v1483 v81
    let v1485 : string = $"r#\"{v109}\"#"
    let v1486 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1485
    let v1487 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1486 v86
    let v1488 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1487 v88
    let v1489 : string = method2(v1484)
    let v1490 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1489 v91
    let v1491 : string = method5()
    let v1492 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1491 v91
    let v1493 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1488, v1490, v1492) v95
    let v1494 : string = Fable.Core.Rust.emitExpr v1493 v81
    let v1495 : Types.std.string.String = Fable.Core.Rust.emitExpr v1494 v11
    let v1496 : Types.EmitType<Types.std.string.String> = v1495 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1497 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v1496, v122) v123
    let v1498 : Types.std.string.String = Fable.Core.Rust.emitExpr v1497 v125
    let v1499 : Types.std.string.String = v1432 |> unbox
    let v1500 : string = Fable.Core.Rust.emitExpr v1499 v81
    let v1501 : string = $"r#\"{v83}\"#"
    let v1502 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1501
    let v1503 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1502 v86
    let v1504 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1503 v88
    let v1505 : string = method2(v1500)
    let v1506 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1505 v91
    let v1507 : string = method3()
    let v1508 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1507 v91
    let v1509 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1504, v1506, v1508) v95
    let v1510 : string = Fable.Core.Rust.emitExpr v1509 v81
    let v1511 : string = $"r#\"{v98}\"#"
    let v1512 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1511
    let v1513 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1512 v86
    let v1514 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1513 v88
    let v1515 : string = method2(v1510)
    let v1516 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1515 v91
    let v1517 : string = method4()
    let v1518 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1517 v91
    let v1519 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1514, v1516, v1518) v95
    let v1520 : string = Fable.Core.Rust.emitExpr v1519 v81
    let v1521 : string = $"r#\"{v109}\"#"
    let v1522 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1521
    let v1523 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1522 v86
    let v1524 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1523 v88
    let v1525 : string = method2(v1520)
    let v1526 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1525 v91
    let v1527 : string = method5()
    let v1528 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1527 v91
    let v1529 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1524, v1526, v1528) v95
    let v1530 : string = Fable.Core.Rust.emitExpr v1529 v81
    let v1531 : Types.std.string.String = Fable.Core.Rust.emitExpr v1530 v11
    let v1532 : Types.EmitType<Types.std.string.String> = v1531 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1533 : string = "fcfb1b"
    let v1534 : string = v1533.Substring (0, 2)
    let v1535 : uint8 = Fable.Core.Rust.emitExpr v1534 v163
    let v1536 : string = v1533.Substring (2, 2)
    let v1537 : uint8 = Fable.Core.Rust.emitExpr v1536 v163
    let v1538 : string = v1533.Substring (4, 2)
    let v1539 : uint8 = Fable.Core.Rust.emitExpr v1538 v163
    let v1540 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v1532, v1535, v1537, v1539) v169
    let v1541 : Types.std.string.String = Fable.Core.Rust.emitExpr v1540 v125
    let v1542 : Types.std.string.String = v1455 |> unbox
    let v1543 : string = Fable.Core.Rust.emitExpr v1542 v81
    let v1544 : string = $"r#\"{v83}\"#"
    let v1545 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1544
    let v1546 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1545 v86
    let v1547 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1546 v88
    let v1548 : string = method2(v1543)
    let v1549 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1548 v91
    let v1550 : string = method3()
    let v1551 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1550 v91
    let v1552 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1547, v1549, v1551) v95
    let v1553 : string = Fable.Core.Rust.emitExpr v1552 v81
    let v1554 : string = $"r#\"{v98}\"#"
    let v1555 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1554
    let v1556 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1555 v86
    let v1557 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1556 v88
    let v1558 : string = method2(v1553)
    let v1559 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1558 v91
    let v1560 : string = method4()
    let v1561 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1560 v91
    let v1562 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1557, v1559, v1561) v95
    let v1563 : string = Fable.Core.Rust.emitExpr v1562 v81
    let v1564 : string = $"r#\"{v109}\"#"
    let v1565 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1564
    let v1566 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1565 v86
    let v1567 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1566 v88
    let v1568 : string = method2(v1563)
    let v1569 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1568 v91
    let v1570 : string = method5()
    let v1571 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1570 v91
    let v1572 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1567, v1569, v1571) v95
    let v1573 : string = Fable.Core.Rust.emitExpr v1572 v81
    let v1574 : Types.std.string.String = Fable.Core.Rust.emitExpr v1573 v11
    let v1575 : Types.EmitType<Types.std.string.String> = v1574 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1576 : string = v206.Substring (0, 2)
    let v1577 : uint8 = Fable.Core.Rust.emitExpr v1576 v163
    let v1578 : string = v206.Substring (2, 2)
    let v1579 : uint8 = Fable.Core.Rust.emitExpr v1578 v163
    let v1580 : string = v206.Substring (4, 2)
    let v1581 : uint8 = Fable.Core.Rust.emitExpr v1580 v163
    let v1582 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v1575, v1577, v1579, v1581) v169
    let v1583 : Types.std.string.String = Fable.Core.Rust.emitExpr v1582 v125
    let v1584 : string = $"{v1498} {v1541} {v1583}"
    System.Console.WriteLine v1584
    let v1585 : string = "zmq::Context::new()"
    let v1586 : obj = Fable.Core.Rust.emitExpr () v1585
    let v1587 : string = "$0.socket(zmq::REQ).unwrap()"
    let v1588 : obj = Fable.Core.Rust.emitExpr v1586 v1587
    let v1589 : string = $"tcp://{v1415}:{13805}"
    let v1590 : string = "$0.connect(&$1).unwrap()"
    Fable.Core.Rust.emitExpr struct (v1588, v1589) v1590
    let v1591 : string = $"$0.send($1.as_str(), 0).unwrap()"
    Fable.Core.Rust.emitExpr struct (v1588, v1245) v1591
    let v1592 : string = "$0.recv_string(0).unwrap().unwrap()"
    let v1593 : Types.std.string.String = Fable.Core.Rust.emitExpr v1588 v1592
    let v1594 : string = "$0.disconnect(&$1).unwrap()"
    Fable.Core.Rust.emitExpr struct (v1588, v1589) v1594
    let v1595 : string = "result len"
    let v1596 : Types.std.string.String = Fable.Core.Rust.emitExpr v1595 v11
    let v1597 : Types.EmitType<Types.std.string.String> = v1596 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1598 : int32 = Fable.Core.Rust.emitExpr v1593 v1071
    let v1599 : Types.std.string.String = Fable.Core.Rust.emitExpr v1598 v60
    let v1600 : Types.EmitType<Types.std.string.String> = v1599 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1601 : (Types.EmitType<Types.std.string.String> []) = [|v1597; v1600|]
    let v1602 : obj = Fable.Core.Rust.emitExpr v1601 v39
    let v1603 : Types.std.string.String = Fable.Core.Rust.emitExpr v1602 v41
    let v1604 : Types.EmitType<Types.std.string.String> = v1603 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1605 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v1606 : int64 = Fable.Core.Rust.emitExpr v1605 v8
    let v1607 : int64 = v1606 - v1411
    let v1608 : string = (v1607).ToString ()
    let v1609 : int32 = 6
    let v1610 : string = method1(v1609, v1608)
    let v1611 : uint8 = Fable.Core.Rust.emitExpr () v50
    let v1612 : Types.std.string.String = Fable.Core.Rust.emitExpr v52 v11
    let v1613 : Types.EmitType<Types.std.string.String> = v1612 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1614 : Types.std.string.String = Fable.Core.Rust.emitExpr v1610 v11
    let v1615 : Types.EmitType<Types.std.string.String> = v1614 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1616 : Types.std.string.String = Fable.Core.Rust.emitExpr v57 v11
    let v1617 : Types.EmitType<Types.std.string.String> = v1616 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1618 : Types.std.string.String = Fable.Core.Rust.emitExpr v1611 v60
    let v1619 : Types.EmitType<Types.std.string.String> = v1618 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1620 : Types.std.string.String = Fable.Core.Rust.emitExpr v63 v11
    let v1621 : Types.EmitType<Types.std.string.String> = v1620 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1622 : Types.std.string.String = Fable.Core.Rust.emitExpr v66 v11
    let v1623 : Types.EmitType<Types.std.string.String> = v1622 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1624 : (Types.EmitType<Types.std.string.String> []) = [|v1613; v1615; v1617; v1619; v1621; v1623|]
    let v1625 : obj = Fable.Core.Rust.emitExpr v1624 v39
    let v1626 : Types.std.string.String = Fable.Core.Rust.emitExpr v1625 v41
    let v1627 : Types.EmitType<Types.std.string.String> = v1626 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1628 : Types.std.string.String = Fable.Core.Rust.emitExpr v1456 v11
    let v1629 : Types.EmitType<Types.std.string.String> = v1628 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1630 : (Types.EmitType<Types.std.string.String> []) = [|v1629|]
    let v1631 : obj = Fable.Core.Rust.emitExpr v1630 v39
    let v1632 : Types.std.string.String = Fable.Core.Rust.emitExpr v1631 v41
    let v1633 : Types.EmitType<Types.std.string.String> = v1632 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1634 : Types.std.string.String = v1633 |> unbox
    let v1635 : string = Fable.Core.Rust.emitExpr v1634 v81
    let v1636 : string = $"r#\"{v83}\"#"
    let v1637 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1636
    let v1638 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1637 v86
    let v1639 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1638 v88
    let v1640 : string = method2(v1635)
    let v1641 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1640 v91
    let v1642 : string = method3()
    let v1643 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1642 v91
    let v1644 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1639, v1641, v1643) v95
    let v1645 : string = Fable.Core.Rust.emitExpr v1644 v81
    let v1646 : string = $"r#\"{v98}\"#"
    let v1647 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1646
    let v1648 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1647 v86
    let v1649 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1648 v88
    let v1650 : string = method2(v1645)
    let v1651 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1650 v91
    let v1652 : string = method4()
    let v1653 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1652 v91
    let v1654 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1649, v1651, v1653) v95
    let v1655 : string = Fable.Core.Rust.emitExpr v1654 v81
    let v1656 : string = $"r#\"{v109}\"#"
    let v1657 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1656
    let v1658 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1657 v86
    let v1659 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1658 v88
    let v1660 : string = method2(v1655)
    let v1661 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1660 v91
    let v1662 : string = method5()
    let v1663 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1662 v91
    let v1664 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1659, v1661, v1663) v95
    let v1665 : string = Fable.Core.Rust.emitExpr v1664 v81
    let v1666 : Types.std.string.String = Fable.Core.Rust.emitExpr v1665 v11
    let v1667 : Types.EmitType<Types.std.string.String> = v1666 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1668 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v1667, v122) v123
    let v1669 : Types.std.string.String = Fable.Core.Rust.emitExpr v1668 v125
    let v1670 : Types.std.string.String = v1604 |> unbox
    let v1671 : string = Fable.Core.Rust.emitExpr v1670 v81
    let v1672 : string = $"r#\"{v83}\"#"
    let v1673 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1672
    let v1674 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1673 v86
    let v1675 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1674 v88
    let v1676 : string = method2(v1671)
    let v1677 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1676 v91
    let v1678 : string = method3()
    let v1679 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1678 v91
    let v1680 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1675, v1677, v1679) v95
    let v1681 : string = Fable.Core.Rust.emitExpr v1680 v81
    let v1682 : string = $"r#\"{v98}\"#"
    let v1683 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1682
    let v1684 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1683 v86
    let v1685 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1684 v88
    let v1686 : string = method2(v1681)
    let v1687 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1686 v91
    let v1688 : string = method4()
    let v1689 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1688 v91
    let v1690 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1685, v1687, v1689) v95
    let v1691 : string = Fable.Core.Rust.emitExpr v1690 v81
    let v1692 : string = $"r#\"{v109}\"#"
    let v1693 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1692
    let v1694 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1693 v86
    let v1695 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1694 v88
    let v1696 : string = method2(v1691)
    let v1697 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1696 v91
    let v1698 : string = method5()
    let v1699 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1698 v91
    let v1700 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1695, v1697, v1699) v95
    let v1701 : string = Fable.Core.Rust.emitExpr v1700 v81
    let v1702 : Types.std.string.String = Fable.Core.Rust.emitExpr v1701 v11
    let v1703 : Types.EmitType<Types.std.string.String> = v1702 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1704 : string = v1533.Substring (0, 2)
    let v1705 : uint8 = Fable.Core.Rust.emitExpr v1704 v163
    let v1706 : string = v1533.Substring (2, 2)
    let v1707 : uint8 = Fable.Core.Rust.emitExpr v1706 v163
    let v1708 : string = v1533.Substring (4, 2)
    let v1709 : uint8 = Fable.Core.Rust.emitExpr v1708 v163
    let v1710 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v1703, v1705, v1707, v1709) v169
    let v1711 : Types.std.string.String = Fable.Core.Rust.emitExpr v1710 v125
    let v1712 : Types.std.string.String = v1627 |> unbox
    let v1713 : string = Fable.Core.Rust.emitExpr v1712 v81
    let v1714 : string = $"r#\"{v83}\"#"
    let v1715 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1714
    let v1716 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1715 v86
    let v1717 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1716 v88
    let v1718 : string = method2(v1713)
    let v1719 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1718 v91
    let v1720 : string = method3()
    let v1721 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1720 v91
    let v1722 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1717, v1719, v1721) v95
    let v1723 : string = Fable.Core.Rust.emitExpr v1722 v81
    let v1724 : string = $"r#\"{v98}\"#"
    let v1725 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1724
    let v1726 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1725 v86
    let v1727 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1726 v88
    let v1728 : string = method2(v1723)
    let v1729 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1728 v91
    let v1730 : string = method4()
    let v1731 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1730 v91
    let v1732 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1727, v1729, v1731) v95
    let v1733 : string = Fable.Core.Rust.emitExpr v1732 v81
    let v1734 : string = $"r#\"{v109}\"#"
    let v1735 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1734
    let v1736 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1735 v86
    let v1737 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1736 v88
    let v1738 : string = method2(v1733)
    let v1739 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1738 v91
    let v1740 : string = method5()
    let v1741 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1740 v91
    let v1742 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1737, v1739, v1741) v95
    let v1743 : string = Fable.Core.Rust.emitExpr v1742 v81
    let v1744 : Types.std.string.String = Fable.Core.Rust.emitExpr v1743 v11
    let v1745 : Types.EmitType<Types.std.string.String> = v1744 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1746 : string = v206.Substring (0, 2)
    let v1747 : uint8 = Fable.Core.Rust.emitExpr v1746 v163
    let v1748 : string = v206.Substring (2, 2)
    let v1749 : uint8 = Fable.Core.Rust.emitExpr v1748 v163
    let v1750 : string = v206.Substring (4, 2)
    let v1751 : uint8 = Fable.Core.Rust.emitExpr v1750 v163
    let v1752 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v1745, v1747, v1749, v1751) v169
    let v1753 : Types.std.string.String = Fable.Core.Rust.emitExpr v1752 v125
    let v1754 : string = $"{v1669} {v1711} {v1753}"
    System.Console.WriteLine v1754
    let v1755 : string = "> spiproj_open; ok"
    let v1756 : Types.std.string.String = Fable.Core.Rust.emitExpr v1755 v11
    let v1757 : Types.EmitType<Types.std.string.String> = v1756 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1758 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v1759 : int64 = Fable.Core.Rust.emitExpr v1758 v8
    let v1760 : int64 = v1759 - v9
    let v1761 : string = (v1760).ToString ()
    let v1762 : int32 = 6
    let v1763 : string = method1(v1762, v1761)
    let v1764 : uint8 = Fable.Core.Rust.emitExpr () v50
    let v1765 : Types.std.string.String = Fable.Core.Rust.emitExpr v52 v11
    let v1766 : Types.EmitType<Types.std.string.String> = v1765 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1767 : Types.std.string.String = Fable.Core.Rust.emitExpr v1763 v11
    let v1768 : Types.EmitType<Types.std.string.String> = v1767 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1769 : Types.std.string.String = Fable.Core.Rust.emitExpr v57 v11
    let v1770 : Types.EmitType<Types.std.string.String> = v1769 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1771 : Types.std.string.String = Fable.Core.Rust.emitExpr v1764 v60
    let v1772 : Types.EmitType<Types.std.string.String> = v1771 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1773 : Types.std.string.String = Fable.Core.Rust.emitExpr v63 v11
    let v1774 : Types.EmitType<Types.std.string.String> = v1773 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1775 : Types.std.string.String = Fable.Core.Rust.emitExpr v66 v11
    let v1776 : Types.EmitType<Types.std.string.String> = v1775 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1777 : (Types.EmitType<Types.std.string.String> []) = [|v1766; v1768; v1770; v1772; v1774; v1776|]
    let v1778 : obj = Fable.Core.Rust.emitExpr v1777 v39
    let v1779 : Types.std.string.String = Fable.Core.Rust.emitExpr v1778 v41
    let v1780 : Types.EmitType<Types.std.string.String> = v1779 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1781 : Types.std.string.String = Fable.Core.Rust.emitExpr v73 v11
    let v1782 : Types.EmitType<Types.std.string.String> = v1781 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1783 : (Types.EmitType<Types.std.string.String> []) = [|v1782|]
    let v1784 : obj = Fable.Core.Rust.emitExpr v1783 v39
    let v1785 : Types.std.string.String = Fable.Core.Rust.emitExpr v1784 v41
    let v1786 : Types.EmitType<Types.std.string.String> = v1785 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1787 : Types.std.string.String = v1786 |> unbox
    let v1788 : string = Fable.Core.Rust.emitExpr v1787 v81
    let v1789 : string = $"r#\"{v83}\"#"
    let v1790 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1789
    let v1791 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1790 v86
    let v1792 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1791 v88
    let v1793 : string = method2(v1788)
    let v1794 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1793 v91
    let v1795 : string = method3()
    let v1796 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1795 v91
    let v1797 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1792, v1794, v1796) v95
    let v1798 : string = Fable.Core.Rust.emitExpr v1797 v81
    let v1799 : string = $"r#\"{v98}\"#"
    let v1800 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1799
    let v1801 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1800 v86
    let v1802 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1801 v88
    let v1803 : string = method2(v1798)
    let v1804 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1803 v91
    let v1805 : string = method4()
    let v1806 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1805 v91
    let v1807 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1802, v1804, v1806) v95
    let v1808 : string = Fable.Core.Rust.emitExpr v1807 v81
    let v1809 : string = $"r#\"{v109}\"#"
    let v1810 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1809
    let v1811 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1810 v86
    let v1812 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1811 v88
    let v1813 : string = method2(v1808)
    let v1814 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1813 v91
    let v1815 : string = method5()
    let v1816 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1815 v91
    let v1817 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1812, v1814, v1816) v95
    let v1818 : string = Fable.Core.Rust.emitExpr v1817 v81
    let v1819 : Types.std.string.String = Fable.Core.Rust.emitExpr v1818 v11
    let v1820 : Types.EmitType<Types.std.string.String> = v1819 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1821 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v1820, v122) v123
    let v1822 : Types.std.string.String = Fable.Core.Rust.emitExpr v1821 v125
    let v1823 : Types.std.string.String = v1757 |> unbox
    let v1824 : string = Fable.Core.Rust.emitExpr v1823 v81
    let v1825 : string = $"r#\"{v83}\"#"
    let v1826 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1825
    let v1827 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1826 v86
    let v1828 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1827 v88
    let v1829 : string = method2(v1824)
    let v1830 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1829 v91
    let v1831 : string = method3()
    let v1832 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1831 v91
    let v1833 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1828, v1830, v1832) v95
    let v1834 : string = Fable.Core.Rust.emitExpr v1833 v81
    let v1835 : string = $"r#\"{v98}\"#"
    let v1836 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1835
    let v1837 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1836 v86
    let v1838 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1837 v88
    let v1839 : string = method2(v1834)
    let v1840 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1839 v91
    let v1841 : string = method4()
    let v1842 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1841 v91
    let v1843 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1838, v1840, v1842) v95
    let v1844 : string = Fable.Core.Rust.emitExpr v1843 v81
    let v1845 : string = $"r#\"{v109}\"#"
    let v1846 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1845
    let v1847 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1846 v86
    let v1848 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1847 v88
    let v1849 : string = method2(v1844)
    let v1850 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1849 v91
    let v1851 : string = method5()
    let v1852 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1851 v91
    let v1853 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1848, v1850, v1852) v95
    let v1854 : string = Fable.Core.Rust.emitExpr v1853 v81
    let v1855 : Types.std.string.String = Fable.Core.Rust.emitExpr v1854 v11
    let v1856 : Types.EmitType<Types.std.string.String> = v1855 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1857 : string = v161.Substring (0, 2)
    let v1858 : uint8 = Fable.Core.Rust.emitExpr v1857 v163
    let v1859 : string = v161.Substring (2, 2)
    let v1860 : uint8 = Fable.Core.Rust.emitExpr v1859 v163
    let v1861 : string = v161.Substring (4, 2)
    let v1862 : uint8 = Fable.Core.Rust.emitExpr v1861 v163
    let v1863 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v1856, v1858, v1860, v1862) v169
    let v1864 : Types.std.string.String = Fable.Core.Rust.emitExpr v1863 v125
    let v1865 : Types.std.string.String = v1780 |> unbox
    let v1866 : string = Fable.Core.Rust.emitExpr v1865 v81
    let v1867 : string = $"r#\"{v83}\"#"
    let v1868 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1867
    let v1869 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1868 v86
    let v1870 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1869 v88
    let v1871 : string = method2(v1866)
    let v1872 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1871 v91
    let v1873 : string = method3()
    let v1874 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1873 v91
    let v1875 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1870, v1872, v1874) v95
    let v1876 : string = Fable.Core.Rust.emitExpr v1875 v81
    let v1877 : string = $"r#\"{v98}\"#"
    let v1878 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1877
    let v1879 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1878 v86
    let v1880 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1879 v88
    let v1881 : string = method2(v1876)
    let v1882 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1881 v91
    let v1883 : string = method4()
    let v1884 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1883 v91
    let v1885 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1880, v1882, v1884) v95
    let v1886 : string = Fable.Core.Rust.emitExpr v1885 v81
    let v1887 : string = $"r#\"{v109}\"#"
    let v1888 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1887
    let v1889 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1888 v86
    let v1890 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1889 v88
    let v1891 : string = method2(v1886)
    let v1892 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1891 v91
    let v1893 : string = method5()
    let v1894 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1893 v91
    let v1895 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1890, v1892, v1894) v95
    let v1896 : string = Fable.Core.Rust.emitExpr v1895 v81
    let v1897 : Types.std.string.String = Fable.Core.Rust.emitExpr v1896 v11
    let v1898 : Types.EmitType<Types.std.string.String> = v1897 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1899 : string = v206.Substring (0, 2)
    let v1900 : uint8 = Fable.Core.Rust.emitExpr v1899 v163
    let v1901 : string = v206.Substring (2, 2)
    let v1902 : uint8 = Fable.Core.Rust.emitExpr v1901 v163
    let v1903 : string = v206.Substring (4, 2)
    let v1904 : uint8 = Fable.Core.Rust.emitExpr v1903 v163
    let v1905 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v1898, v1900, v1902, v1904) v169
    let v1906 : Types.std.string.String = Fable.Core.Rust.emitExpr v1905 v125
    let v1907 : string = $"{v1822} {v1864} {v1906}"
    System.Console.WriteLine v1907
    let struct (v1908 : string, v1909 : string, v1910 : string, v1911 : bool) = method0()
    let v1912 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v1913 : int64 = Fable.Core.Rust.emitExpr v1912 v8
    let v1914 : Types.std.string.String = Fable.Core.Rust.emitExpr v25 v11
    let v1915 : Types.EmitType<Types.std.string.String> = v1914 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1916 : string = Fable.Core.Rust.emitExpr v217 v21
    let v1917 : Types.std.string.String = Fable.Core.Rust.emitExpr v1916 v11
    let v1918 : Types.EmitType<Types.std.string.String> = v1917 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1919 : string = "backend"
    let v1920 : Types.std.string.String = Fable.Core.Rust.emitExpr v1919 v11
    let v1921 : Types.EmitType<Types.std.string.String> = v1920 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1922 : string = "Fsharp"
    let v1923 : Types.std.string.String = Fable.Core.Rust.emitExpr v1922 v11
    let v1924 : Types.EmitType<Types.std.string.String> = v1923 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1925 : (Types.EmitType<Types.std.string.String> []) = [|v1915; v1918; v1921; v1924|]
    let v1926 : obj = Fable.Core.Rust.emitExpr v1925 v39
    let v1927 : Types.std.string.String = Fable.Core.Rust.emitExpr v1926 v41
    let v1928 : Types.EmitType<Types.std.string.String> = v1927 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1929 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v1930 : int64 = Fable.Core.Rust.emitExpr v1929 v8
    let v1931 : int64 = v1930 - v1913
    let v1932 : string = (v1931).ToString ()
    let v1933 : int32 = 6
    let v1934 : string = method1(v1933, v1932)
    let v1935 : uint8 = Fable.Core.Rust.emitExpr () v50
    let v1936 : Types.std.string.String = Fable.Core.Rust.emitExpr v52 v11
    let v1937 : Types.EmitType<Types.std.string.String> = v1936 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1938 : Types.std.string.String = Fable.Core.Rust.emitExpr v1934 v11
    let v1939 : Types.EmitType<Types.std.string.String> = v1938 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1940 : Types.std.string.String = Fable.Core.Rust.emitExpr v57 v11
    let v1941 : Types.EmitType<Types.std.string.String> = v1940 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1942 : Types.std.string.String = Fable.Core.Rust.emitExpr v1935 v60
    let v1943 : Types.EmitType<Types.std.string.String> = v1942 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1944 : Types.std.string.String = Fable.Core.Rust.emitExpr v63 v11
    let v1945 : Types.EmitType<Types.std.string.String> = v1944 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1946 : Types.std.string.String = Fable.Core.Rust.emitExpr v66 v11
    let v1947 : Types.EmitType<Types.std.string.String> = v1946 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1948 : (Types.EmitType<Types.std.string.String> []) = [|v1937; v1939; v1941; v1943; v1945; v1947|]
    let v1949 : obj = Fable.Core.Rust.emitExpr v1948 v39
    let v1950 : Types.std.string.String = Fable.Core.Rust.emitExpr v1949 v41
    let v1951 : Types.EmitType<Types.std.string.String> = v1950 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1952 : string = "> spi_build_file ()"
    let v1953 : Types.std.string.String = Fable.Core.Rust.emitExpr v1952 v11
    let v1954 : Types.EmitType<Types.std.string.String> = v1953 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1955 : (Types.EmitType<Types.std.string.String> []) = [|v1954|]
    let v1956 : obj = Fable.Core.Rust.emitExpr v1955 v39
    let v1957 : Types.std.string.String = Fable.Core.Rust.emitExpr v1956 v41
    let v1958 : Types.EmitType<Types.std.string.String> = v1957 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1959 : Types.std.string.String = v1958 |> unbox
    let v1960 : string = Fable.Core.Rust.emitExpr v1959 v81
    let v1961 : string = $"r#\"{v83}\"#"
    let v1962 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1961
    let v1963 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1962 v86
    let v1964 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1963 v88
    let v1965 : string = method2(v1960)
    let v1966 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1965 v91
    let v1967 : string = method3()
    let v1968 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1967 v91
    let v1969 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1964, v1966, v1968) v95
    let v1970 : string = Fable.Core.Rust.emitExpr v1969 v81
    let v1971 : string = $"r#\"{v98}\"#"
    let v1972 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1971
    let v1973 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1972 v86
    let v1974 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1973 v88
    let v1975 : string = method2(v1970)
    let v1976 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1975 v91
    let v1977 : string = method4()
    let v1978 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1977 v91
    let v1979 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1974, v1976, v1978) v95
    let v1980 : string = Fable.Core.Rust.emitExpr v1979 v81
    let v1981 : string = $"r#\"{v109}\"#"
    let v1982 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1981
    let v1983 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1982 v86
    let v1984 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1983 v88
    let v1985 : string = method2(v1980)
    let v1986 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1985 v91
    let v1987 : string = method5()
    let v1988 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v1987 v91
    let v1989 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v1984, v1986, v1988) v95
    let v1990 : string = Fable.Core.Rust.emitExpr v1989 v81
    let v1991 : Types.std.string.String = Fable.Core.Rust.emitExpr v1990 v11
    let v1992 : Types.EmitType<Types.std.string.String> = v1991 |> unbox<Types.EmitType<Types.std.string.String>>
    let v1993 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v1992, v122) v123
    let v1994 : Types.std.string.String = Fable.Core.Rust.emitExpr v1993 v125
    let v1995 : Types.std.string.String = v1928 |> unbox
    let v1996 : string = Fable.Core.Rust.emitExpr v1995 v81
    let v1997 : string = $"r#\"{v83}\"#"
    let v1998 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v1997
    let v1999 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v1998 v86
    let v2000 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v1999 v88
    let v2001 : string = method2(v1996)
    let v2002 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2001 v91
    let v2003 : string = method3()
    let v2004 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2003 v91
    let v2005 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2000, v2002, v2004) v95
    let v2006 : string = Fable.Core.Rust.emitExpr v2005 v81
    let v2007 : string = $"r#\"{v98}\"#"
    let v2008 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2007
    let v2009 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2008 v86
    let v2010 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2009 v88
    let v2011 : string = method2(v2006)
    let v2012 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2011 v91
    let v2013 : string = method4()
    let v2014 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2013 v91
    let v2015 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2010, v2012, v2014) v95
    let v2016 : string = Fable.Core.Rust.emitExpr v2015 v81
    let v2017 : string = $"r#\"{v109}\"#"
    let v2018 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2017
    let v2019 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2018 v86
    let v2020 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2019 v88
    let v2021 : string = method2(v2016)
    let v2022 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2021 v91
    let v2023 : string = method5()
    let v2024 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2023 v91
    let v2025 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2020, v2022, v2024) v95
    let v2026 : string = Fable.Core.Rust.emitExpr v2025 v81
    let v2027 : Types.std.string.String = Fable.Core.Rust.emitExpr v2026 v11
    let v2028 : Types.EmitType<Types.std.string.String> = v2027 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2029 : string = "98d5ef"
    let v2030 : string = v2029.Substring (0, 2)
    let v2031 : uint8 = Fable.Core.Rust.emitExpr v2030 v163
    let v2032 : string = v2029.Substring (2, 2)
    let v2033 : uint8 = Fable.Core.Rust.emitExpr v2032 v163
    let v2034 : string = v2029.Substring (4, 2)
    let v2035 : uint8 = Fable.Core.Rust.emitExpr v2034 v163
    let v2036 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v2028, v2031, v2033, v2035) v169
    let v2037 : Types.std.string.String = Fable.Core.Rust.emitExpr v2036 v125
    let v2038 : Types.std.string.String = v1951 |> unbox
    let v2039 : string = Fable.Core.Rust.emitExpr v2038 v81
    let v2040 : string = $"r#\"{v83}\"#"
    let v2041 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2040
    let v2042 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2041 v86
    let v2043 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2042 v88
    let v2044 : string = method2(v2039)
    let v2045 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2044 v91
    let v2046 : string = method3()
    let v2047 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2046 v91
    let v2048 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2043, v2045, v2047) v95
    let v2049 : string = Fable.Core.Rust.emitExpr v2048 v81
    let v2050 : string = $"r#\"{v98}\"#"
    let v2051 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2050
    let v2052 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2051 v86
    let v2053 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2052 v88
    let v2054 : string = method2(v2049)
    let v2055 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2054 v91
    let v2056 : string = method4()
    let v2057 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2056 v91
    let v2058 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2053, v2055, v2057) v95
    let v2059 : string = Fable.Core.Rust.emitExpr v2058 v81
    let v2060 : string = $"r#\"{v109}\"#"
    let v2061 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2060
    let v2062 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2061 v86
    let v2063 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2062 v88
    let v2064 : string = method2(v2059)
    let v2065 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2064 v91
    let v2066 : string = method5()
    let v2067 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2066 v91
    let v2068 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2063, v2065, v2067) v95
    let v2069 : string = Fable.Core.Rust.emitExpr v2068 v81
    let v2070 : Types.std.string.String = Fable.Core.Rust.emitExpr v2069 v11
    let v2071 : Types.EmitType<Types.std.string.String> = v2070 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2072 : string = v206.Substring (0, 2)
    let v2073 : uint8 = Fable.Core.Rust.emitExpr v2072 v163
    let v2074 : string = v206.Substring (2, 2)
    let v2075 : uint8 = Fable.Core.Rust.emitExpr v2074 v163
    let v2076 : string = v206.Substring (4, 2)
    let v2077 : uint8 = Fable.Core.Rust.emitExpr v2076 v163
    let v2078 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v2071, v2073, v2075, v2077) v169
    let v2079 : Types.std.string.String = Fable.Core.Rust.emitExpr v2078 v125
    let v2080 : string = $"{v1994} {v2037} {v2079}"
    System.Console.WriteLine v2080
    let v2081 : Types.std.string.String = Fable.Core.Rust.emitExpr v1922 v11
    let v2082 : string = "\"BuildFile\": {"
    let v2083 : string = v1231 + v2082
    let v2084 : string = v2083 + v1234
    let v2085 : string = "\"backend\": $1"
    let v2086 : string = v2084 + v2085
    let v2087 : string = v2086 + v1238
    let v2088 : string = v2087 + v1238
    let v2089 : string = v1241 + v2088
    let v2090 : string = v2089 + v1243
    let v2091 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v217, v2081) v2090
    let v2092 : string = "json len"
    let v2093 : Types.std.string.String = Fable.Core.Rust.emitExpr v2092 v11
    let v2094 : Types.EmitType<Types.std.string.String> = v2093 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2095 : int32 = Fable.Core.Rust.emitExpr v2091 v1071
    let v2096 : Types.std.string.String = Fable.Core.Rust.emitExpr v2095 v60
    let v2097 : Types.EmitType<Types.std.string.String> = v2096 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2098 : (Types.EmitType<Types.std.string.String> []) = [|v2094; v2097|]
    let v2099 : obj = Fable.Core.Rust.emitExpr v2098 v39
    let v2100 : Types.std.string.String = Fable.Core.Rust.emitExpr v2099 v41
    let v2101 : Types.EmitType<Types.std.string.String> = v2100 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2102 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v2103 : int64 = Fable.Core.Rust.emitExpr v2102 v8
    let v2104 : int64 = v2103 - v1913
    let v2105 : string = (v2104).ToString ()
    let v2106 : int32 = 6
    let v2107 : string = method1(v2106, v2105)
    let v2108 : uint8 = Fable.Core.Rust.emitExpr () v50
    let v2109 : Types.std.string.String = Fable.Core.Rust.emitExpr v52 v11
    let v2110 : Types.EmitType<Types.std.string.String> = v2109 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2111 : Types.std.string.String = Fable.Core.Rust.emitExpr v2107 v11
    let v2112 : Types.EmitType<Types.std.string.String> = v2111 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2113 : Types.std.string.String = Fable.Core.Rust.emitExpr v57 v11
    let v2114 : Types.EmitType<Types.std.string.String> = v2113 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2115 : Types.std.string.String = Fable.Core.Rust.emitExpr v2108 v60
    let v2116 : Types.EmitType<Types.std.string.String> = v2115 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2117 : Types.std.string.String = Fable.Core.Rust.emitExpr v63 v11
    let v2118 : Types.EmitType<Types.std.string.String> = v2117 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2119 : Types.std.string.String = Fable.Core.Rust.emitExpr v66 v11
    let v2120 : Types.EmitType<Types.std.string.String> = v2119 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2121 : (Types.EmitType<Types.std.string.String> []) = [|v2110; v2112; v2114; v2116; v2118; v2120|]
    let v2122 : obj = Fable.Core.Rust.emitExpr v2121 v39
    let v2123 : Types.std.string.String = Fable.Core.Rust.emitExpr v2122 v41
    let v2124 : Types.EmitType<Types.std.string.String> = v2123 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2125 : Types.std.string.String = Fable.Core.Rust.emitExpr v1952 v11
    let v2126 : Types.EmitType<Types.std.string.String> = v2125 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2127 : (Types.EmitType<Types.std.string.String> []) = [|v2126|]
    let v2128 : obj = Fable.Core.Rust.emitExpr v2127 v39
    let v2129 : Types.std.string.String = Fable.Core.Rust.emitExpr v2128 v41
    let v2130 : Types.EmitType<Types.std.string.String> = v2129 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2131 : Types.std.string.String = v2130 |> unbox
    let v2132 : string = Fable.Core.Rust.emitExpr v2131 v81
    let v2133 : string = $"r#\"{v83}\"#"
    let v2134 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2133
    let v2135 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2134 v86
    let v2136 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2135 v88
    let v2137 : string = method2(v2132)
    let v2138 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2137 v91
    let v2139 : string = method3()
    let v2140 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2139 v91
    let v2141 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2136, v2138, v2140) v95
    let v2142 : string = Fable.Core.Rust.emitExpr v2141 v81
    let v2143 : string = $"r#\"{v98}\"#"
    let v2144 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2143
    let v2145 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2144 v86
    let v2146 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2145 v88
    let v2147 : string = method2(v2142)
    let v2148 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2147 v91
    let v2149 : string = method4()
    let v2150 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2149 v91
    let v2151 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2146, v2148, v2150) v95
    let v2152 : string = Fable.Core.Rust.emitExpr v2151 v81
    let v2153 : string = $"r#\"{v109}\"#"
    let v2154 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2153
    let v2155 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2154 v86
    let v2156 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2155 v88
    let v2157 : string = method2(v2152)
    let v2158 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2157 v91
    let v2159 : string = method5()
    let v2160 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2159 v91
    let v2161 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2156, v2158, v2160) v95
    let v2162 : string = Fable.Core.Rust.emitExpr v2161 v81
    let v2163 : Types.std.string.String = Fable.Core.Rust.emitExpr v2162 v11
    let v2164 : Types.EmitType<Types.std.string.String> = v2163 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2165 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v2164, v122) v123
    let v2166 : Types.std.string.String = Fable.Core.Rust.emitExpr v2165 v125
    let v2167 : Types.std.string.String = v2101 |> unbox
    let v2168 : string = Fable.Core.Rust.emitExpr v2167 v81
    let v2169 : string = $"r#\"{v83}\"#"
    let v2170 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2169
    let v2171 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2170 v86
    let v2172 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2171 v88
    let v2173 : string = method2(v2168)
    let v2174 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2173 v91
    let v2175 : string = method3()
    let v2176 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2175 v91
    let v2177 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2172, v2174, v2176) v95
    let v2178 : string = Fable.Core.Rust.emitExpr v2177 v81
    let v2179 : string = $"r#\"{v98}\"#"
    let v2180 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2179
    let v2181 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2180 v86
    let v2182 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2181 v88
    let v2183 : string = method2(v2178)
    let v2184 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2183 v91
    let v2185 : string = method4()
    let v2186 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2185 v91
    let v2187 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2182, v2184, v2186) v95
    let v2188 : string = Fable.Core.Rust.emitExpr v2187 v81
    let v2189 : string = $"r#\"{v109}\"#"
    let v2190 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2189
    let v2191 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2190 v86
    let v2192 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2191 v88
    let v2193 : string = method2(v2188)
    let v2194 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2193 v91
    let v2195 : string = method5()
    let v2196 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2195 v91
    let v2197 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2192, v2194, v2196) v95
    let v2198 : string = Fable.Core.Rust.emitExpr v2197 v81
    let v2199 : Types.std.string.String = Fable.Core.Rust.emitExpr v2198 v11
    let v2200 : Types.EmitType<Types.std.string.String> = v2199 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2201 : string = v2029.Substring (0, 2)
    let v2202 : uint8 = Fable.Core.Rust.emitExpr v2201 v163
    let v2203 : string = v2029.Substring (2, 2)
    let v2204 : uint8 = Fable.Core.Rust.emitExpr v2203 v163
    let v2205 : string = v2029.Substring (4, 2)
    let v2206 : uint8 = Fable.Core.Rust.emitExpr v2205 v163
    let v2207 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v2200, v2202, v2204, v2206) v169
    let v2208 : Types.std.string.String = Fable.Core.Rust.emitExpr v2207 v125
    let v2209 : Types.std.string.String = v2124 |> unbox
    let v2210 : string = Fable.Core.Rust.emitExpr v2209 v81
    let v2211 : string = $"r#\"{v83}\"#"
    let v2212 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2211
    let v2213 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2212 v86
    let v2214 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2213 v88
    let v2215 : string = method2(v2210)
    let v2216 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2215 v91
    let v2217 : string = method3()
    let v2218 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2217 v91
    let v2219 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2214, v2216, v2218) v95
    let v2220 : string = Fable.Core.Rust.emitExpr v2219 v81
    let v2221 : string = $"r#\"{v98}\"#"
    let v2222 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2221
    let v2223 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2222 v86
    let v2224 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2223 v88
    let v2225 : string = method2(v2220)
    let v2226 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2225 v91
    let v2227 : string = method4()
    let v2228 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2227 v91
    let v2229 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2224, v2226, v2228) v95
    let v2230 : string = Fable.Core.Rust.emitExpr v2229 v81
    let v2231 : string = $"r#\"{v109}\"#"
    let v2232 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2231
    let v2233 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2232 v86
    let v2234 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2233 v88
    let v2235 : string = method2(v2230)
    let v2236 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2235 v91
    let v2237 : string = method5()
    let v2238 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2237 v91
    let v2239 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2234, v2236, v2238) v95
    let v2240 : string = Fable.Core.Rust.emitExpr v2239 v81
    let v2241 : Types.std.string.String = Fable.Core.Rust.emitExpr v2240 v11
    let v2242 : Types.EmitType<Types.std.string.String> = v2241 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2243 : string = v206.Substring (0, 2)
    let v2244 : uint8 = Fable.Core.Rust.emitExpr v2243 v163
    let v2245 : string = v206.Substring (2, 2)
    let v2246 : uint8 = Fable.Core.Rust.emitExpr v2245 v163
    let v2247 : string = v206.Substring (4, 2)
    let v2248 : uint8 = Fable.Core.Rust.emitExpr v2247 v163
    let v2249 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v2242, v2244, v2246, v2248) v169
    let v2250 : Types.std.string.String = Fable.Core.Rust.emitExpr v2249 v125
    let v2251 : string = $"{v2166} {v2208} {v2250}"
    System.Console.WriteLine v2251
    let struct (v2252 : string, v2253 : string, v2254 : string, v2255 : bool) = method0()
    let v2256 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v2257 : int64 = Fable.Core.Rust.emitExpr v2256 v8
    let v2258 : Types.std.string.String = Fable.Core.Rust.emitExpr v1412 v11
    let v2259 : Types.EmitType<Types.std.string.String> = v2258 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2260 : Types.std.string.String = Fable.Core.Rust.emitExpr v1415 v11
    let v2261 : Types.EmitType<Types.std.string.String> = v2260 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2262 : Types.std.string.String = Fable.Core.Rust.emitExpr v1418 v11
    let v2263 : Types.EmitType<Types.std.string.String> = v2262 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2264 : Types.std.string.String = Fable.Core.Rust.emitExpr 13805 v60
    let v2265 : Types.EmitType<Types.std.string.String> = v2264 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2266 : Types.std.string.String = Fable.Core.Rust.emitExpr v1423 v11
    let v2267 : Types.EmitType<Types.std.string.String> = v2266 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2268 : int32 = Fable.Core.Rust.emitExpr v2091 v1071
    let v2269 : Types.std.string.String = Fable.Core.Rust.emitExpr v2268 v60
    let v2270 : Types.EmitType<Types.std.string.String> = v2269 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2271 : (Types.EmitType<Types.std.string.String> []) = [|v2259; v2261; v2263; v2265; v2267; v2270|]
    let v2272 : obj = Fable.Core.Rust.emitExpr v2271 v39
    let v2273 : Types.std.string.String = Fable.Core.Rust.emitExpr v2272 v41
    let v2274 : Types.EmitType<Types.std.string.String> = v2273 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2275 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v2276 : int64 = Fable.Core.Rust.emitExpr v2275 v8
    let v2277 : int64 = v2276 - v2257
    let v2278 : string = (v2277).ToString ()
    let v2279 : int32 = 6
    let v2280 : string = method1(v2279, v2278)
    let v2281 : uint8 = Fable.Core.Rust.emitExpr () v50
    let v2282 : Types.std.string.String = Fable.Core.Rust.emitExpr v52 v11
    let v2283 : Types.EmitType<Types.std.string.String> = v2282 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2284 : Types.std.string.String = Fable.Core.Rust.emitExpr v2280 v11
    let v2285 : Types.EmitType<Types.std.string.String> = v2284 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2286 : Types.std.string.String = Fable.Core.Rust.emitExpr v57 v11
    let v2287 : Types.EmitType<Types.std.string.String> = v2286 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2288 : Types.std.string.String = Fable.Core.Rust.emitExpr v2281 v60
    let v2289 : Types.EmitType<Types.std.string.String> = v2288 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2290 : Types.std.string.String = Fable.Core.Rust.emitExpr v63 v11
    let v2291 : Types.EmitType<Types.std.string.String> = v2290 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2292 : Types.std.string.String = Fable.Core.Rust.emitExpr v66 v11
    let v2293 : Types.EmitType<Types.std.string.String> = v2292 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2294 : (Types.EmitType<Types.std.string.String> []) = [|v2283; v2285; v2287; v2289; v2291; v2293|]
    let v2295 : obj = Fable.Core.Rust.emitExpr v2294 v39
    let v2296 : Types.std.string.String = Fable.Core.Rust.emitExpr v2295 v41
    let v2297 : Types.EmitType<Types.std.string.String> = v2296 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2298 : Types.std.string.String = Fable.Core.Rust.emitExpr v1456 v11
    let v2299 : Types.EmitType<Types.std.string.String> = v2298 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2300 : (Types.EmitType<Types.std.string.String> []) = [|v2299|]
    let v2301 : obj = Fable.Core.Rust.emitExpr v2300 v39
    let v2302 : Types.std.string.String = Fable.Core.Rust.emitExpr v2301 v41
    let v2303 : Types.EmitType<Types.std.string.String> = v2302 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2304 : Types.std.string.String = v2303 |> unbox
    let v2305 : string = Fable.Core.Rust.emitExpr v2304 v81
    let v2306 : string = $"r#\"{v83}\"#"
    let v2307 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2306
    let v2308 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2307 v86
    let v2309 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2308 v88
    let v2310 : string = method2(v2305)
    let v2311 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2310 v91
    let v2312 : string = method3()
    let v2313 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2312 v91
    let v2314 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2309, v2311, v2313) v95
    let v2315 : string = Fable.Core.Rust.emitExpr v2314 v81
    let v2316 : string = $"r#\"{v98}\"#"
    let v2317 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2316
    let v2318 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2317 v86
    let v2319 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2318 v88
    let v2320 : string = method2(v2315)
    let v2321 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2320 v91
    let v2322 : string = method4()
    let v2323 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2322 v91
    let v2324 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2319, v2321, v2323) v95
    let v2325 : string = Fable.Core.Rust.emitExpr v2324 v81
    let v2326 : string = $"r#\"{v109}\"#"
    let v2327 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2326
    let v2328 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2327 v86
    let v2329 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2328 v88
    let v2330 : string = method2(v2325)
    let v2331 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2330 v91
    let v2332 : string = method5()
    let v2333 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2332 v91
    let v2334 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2329, v2331, v2333) v95
    let v2335 : string = Fable.Core.Rust.emitExpr v2334 v81
    let v2336 : Types.std.string.String = Fable.Core.Rust.emitExpr v2335 v11
    let v2337 : Types.EmitType<Types.std.string.String> = v2336 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2338 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v2337, v122) v123
    let v2339 : Types.std.string.String = Fable.Core.Rust.emitExpr v2338 v125
    let v2340 : Types.std.string.String = v2274 |> unbox
    let v2341 : string = Fable.Core.Rust.emitExpr v2340 v81
    let v2342 : string = $"r#\"{v83}\"#"
    let v2343 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2342
    let v2344 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2343 v86
    let v2345 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2344 v88
    let v2346 : string = method2(v2341)
    let v2347 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2346 v91
    let v2348 : string = method3()
    let v2349 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2348 v91
    let v2350 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2345, v2347, v2349) v95
    let v2351 : string = Fable.Core.Rust.emitExpr v2350 v81
    let v2352 : string = $"r#\"{v98}\"#"
    let v2353 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2352
    let v2354 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2353 v86
    let v2355 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2354 v88
    let v2356 : string = method2(v2351)
    let v2357 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2356 v91
    let v2358 : string = method4()
    let v2359 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2358 v91
    let v2360 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2355, v2357, v2359) v95
    let v2361 : string = Fable.Core.Rust.emitExpr v2360 v81
    let v2362 : string = $"r#\"{v109}\"#"
    let v2363 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2362
    let v2364 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2363 v86
    let v2365 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2364 v88
    let v2366 : string = method2(v2361)
    let v2367 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2366 v91
    let v2368 : string = method5()
    let v2369 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2368 v91
    let v2370 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2365, v2367, v2369) v95
    let v2371 : string = Fable.Core.Rust.emitExpr v2370 v81
    let v2372 : Types.std.string.String = Fable.Core.Rust.emitExpr v2371 v11
    let v2373 : Types.EmitType<Types.std.string.String> = v2372 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2374 : string = v1533.Substring (0, 2)
    let v2375 : uint8 = Fable.Core.Rust.emitExpr v2374 v163
    let v2376 : string = v1533.Substring (2, 2)
    let v2377 : uint8 = Fable.Core.Rust.emitExpr v2376 v163
    let v2378 : string = v1533.Substring (4, 2)
    let v2379 : uint8 = Fable.Core.Rust.emitExpr v2378 v163
    let v2380 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v2373, v2375, v2377, v2379) v169
    let v2381 : Types.std.string.String = Fable.Core.Rust.emitExpr v2380 v125
    let v2382 : Types.std.string.String = v2297 |> unbox
    let v2383 : string = Fable.Core.Rust.emitExpr v2382 v81
    let v2384 : string = $"r#\"{v83}\"#"
    let v2385 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2384
    let v2386 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2385 v86
    let v2387 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2386 v88
    let v2388 : string = method2(v2383)
    let v2389 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2388 v91
    let v2390 : string = method3()
    let v2391 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2390 v91
    let v2392 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2387, v2389, v2391) v95
    let v2393 : string = Fable.Core.Rust.emitExpr v2392 v81
    let v2394 : string = $"r#\"{v98}\"#"
    let v2395 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2394
    let v2396 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2395 v86
    let v2397 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2396 v88
    let v2398 : string = method2(v2393)
    let v2399 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2398 v91
    let v2400 : string = method4()
    let v2401 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2400 v91
    let v2402 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2397, v2399, v2401) v95
    let v2403 : string = Fable.Core.Rust.emitExpr v2402 v81
    let v2404 : string = $"r#\"{v109}\"#"
    let v2405 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2404
    let v2406 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2405 v86
    let v2407 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2406 v88
    let v2408 : string = method2(v2403)
    let v2409 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2408 v91
    let v2410 : string = method5()
    let v2411 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2410 v91
    let v2412 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2407, v2409, v2411) v95
    let v2413 : string = Fable.Core.Rust.emitExpr v2412 v81
    let v2414 : Types.std.string.String = Fable.Core.Rust.emitExpr v2413 v11
    let v2415 : Types.EmitType<Types.std.string.String> = v2414 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2416 : string = v206.Substring (0, 2)
    let v2417 : uint8 = Fable.Core.Rust.emitExpr v2416 v163
    let v2418 : string = v206.Substring (2, 2)
    let v2419 : uint8 = Fable.Core.Rust.emitExpr v2418 v163
    let v2420 : string = v206.Substring (4, 2)
    let v2421 : uint8 = Fable.Core.Rust.emitExpr v2420 v163
    let v2422 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v2415, v2417, v2419, v2421) v169
    let v2423 : Types.std.string.String = Fable.Core.Rust.emitExpr v2422 v125
    let v2424 : string = $"{v2339} {v2381} {v2423}"
    System.Console.WriteLine v2424
    let v2425 : obj = Fable.Core.Rust.emitExpr () v1585
    let v2426 : obj = Fable.Core.Rust.emitExpr v2425 v1587
    let v2427 : string = $"tcp://{v1415}:{13805}"
    Fable.Core.Rust.emitExpr struct (v2426, v2427) v1590
    let v2428 : string = $"$0.send($1.as_str(), 0).unwrap()"
    Fable.Core.Rust.emitExpr struct (v2426, v2091) v2428
    let v2429 : Types.std.string.String = Fable.Core.Rust.emitExpr v2426 v1592
    Fable.Core.Rust.emitExpr struct (v2426, v2427) v1594
    let v2430 : Types.std.string.String = Fable.Core.Rust.emitExpr v1595 v11
    let v2431 : Types.EmitType<Types.std.string.String> = v2430 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2432 : int32 = Fable.Core.Rust.emitExpr v2429 v1071
    let v2433 : Types.std.string.String = Fable.Core.Rust.emitExpr v2432 v60
    let v2434 : Types.EmitType<Types.std.string.String> = v2433 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2435 : (Types.EmitType<Types.std.string.String> []) = [|v2431; v2434|]
    let v2436 : obj = Fable.Core.Rust.emitExpr v2435 v39
    let v2437 : Types.std.string.String = Fable.Core.Rust.emitExpr v2436 v41
    let v2438 : Types.EmitType<Types.std.string.String> = v2437 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2439 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v2440 : int64 = Fable.Core.Rust.emitExpr v2439 v8
    let v2441 : int64 = v2440 - v2257
    let v2442 : string = (v2441).ToString ()
    let v2443 : int32 = 6
    let v2444 : string = method1(v2443, v2442)
    let v2445 : uint8 = Fable.Core.Rust.emitExpr () v50
    let v2446 : Types.std.string.String = Fable.Core.Rust.emitExpr v52 v11
    let v2447 : Types.EmitType<Types.std.string.String> = v2446 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2448 : Types.std.string.String = Fable.Core.Rust.emitExpr v2444 v11
    let v2449 : Types.EmitType<Types.std.string.String> = v2448 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2450 : Types.std.string.String = Fable.Core.Rust.emitExpr v57 v11
    let v2451 : Types.EmitType<Types.std.string.String> = v2450 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2452 : Types.std.string.String = Fable.Core.Rust.emitExpr v2445 v60
    let v2453 : Types.EmitType<Types.std.string.String> = v2452 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2454 : Types.std.string.String = Fable.Core.Rust.emitExpr v63 v11
    let v2455 : Types.EmitType<Types.std.string.String> = v2454 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2456 : Types.std.string.String = Fable.Core.Rust.emitExpr v66 v11
    let v2457 : Types.EmitType<Types.std.string.String> = v2456 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2458 : (Types.EmitType<Types.std.string.String> []) = [|v2447; v2449; v2451; v2453; v2455; v2457|]
    let v2459 : obj = Fable.Core.Rust.emitExpr v2458 v39
    let v2460 : Types.std.string.String = Fable.Core.Rust.emitExpr v2459 v41
    let v2461 : Types.EmitType<Types.std.string.String> = v2460 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2462 : Types.std.string.String = Fable.Core.Rust.emitExpr v1456 v11
    let v2463 : Types.EmitType<Types.std.string.String> = v2462 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2464 : (Types.EmitType<Types.std.string.String> []) = [|v2463|]
    let v2465 : obj = Fable.Core.Rust.emitExpr v2464 v39
    let v2466 : Types.std.string.String = Fable.Core.Rust.emitExpr v2465 v41
    let v2467 : Types.EmitType<Types.std.string.String> = v2466 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2468 : Types.std.string.String = v2467 |> unbox
    let v2469 : string = Fable.Core.Rust.emitExpr v2468 v81
    let v2470 : string = $"r#\"{v83}\"#"
    let v2471 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2470
    let v2472 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2471 v86
    let v2473 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2472 v88
    let v2474 : string = method2(v2469)
    let v2475 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2474 v91
    let v2476 : string = method3()
    let v2477 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2476 v91
    let v2478 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2473, v2475, v2477) v95
    let v2479 : string = Fable.Core.Rust.emitExpr v2478 v81
    let v2480 : string = $"r#\"{v98}\"#"
    let v2481 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2480
    let v2482 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2481 v86
    let v2483 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2482 v88
    let v2484 : string = method2(v2479)
    let v2485 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2484 v91
    let v2486 : string = method4()
    let v2487 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2486 v91
    let v2488 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2483, v2485, v2487) v95
    let v2489 : string = Fable.Core.Rust.emitExpr v2488 v81
    let v2490 : string = $"r#\"{v109}\"#"
    let v2491 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2490
    let v2492 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2491 v86
    let v2493 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2492 v88
    let v2494 : string = method2(v2489)
    let v2495 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2494 v91
    let v2496 : string = method5()
    let v2497 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2496 v91
    let v2498 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2493, v2495, v2497) v95
    let v2499 : string = Fable.Core.Rust.emitExpr v2498 v81
    let v2500 : Types.std.string.String = Fable.Core.Rust.emitExpr v2499 v11
    let v2501 : Types.EmitType<Types.std.string.String> = v2500 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2502 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v2501, v122) v123
    let v2503 : Types.std.string.String = Fable.Core.Rust.emitExpr v2502 v125
    let v2504 : Types.std.string.String = v2438 |> unbox
    let v2505 : string = Fable.Core.Rust.emitExpr v2504 v81
    let v2506 : string = $"r#\"{v83}\"#"
    let v2507 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2506
    let v2508 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2507 v86
    let v2509 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2508 v88
    let v2510 : string = method2(v2505)
    let v2511 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2510 v91
    let v2512 : string = method3()
    let v2513 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2512 v91
    let v2514 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2509, v2511, v2513) v95
    let v2515 : string = Fable.Core.Rust.emitExpr v2514 v81
    let v2516 : string = $"r#\"{v98}\"#"
    let v2517 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2516
    let v2518 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2517 v86
    let v2519 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2518 v88
    let v2520 : string = method2(v2515)
    let v2521 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2520 v91
    let v2522 : string = method4()
    let v2523 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2522 v91
    let v2524 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2519, v2521, v2523) v95
    let v2525 : string = Fable.Core.Rust.emitExpr v2524 v81
    let v2526 : string = $"r#\"{v109}\"#"
    let v2527 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2526
    let v2528 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2527 v86
    let v2529 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2528 v88
    let v2530 : string = method2(v2525)
    let v2531 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2530 v91
    let v2532 : string = method5()
    let v2533 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2532 v91
    let v2534 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2529, v2531, v2533) v95
    let v2535 : string = Fable.Core.Rust.emitExpr v2534 v81
    let v2536 : Types.std.string.String = Fable.Core.Rust.emitExpr v2535 v11
    let v2537 : Types.EmitType<Types.std.string.String> = v2536 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2538 : string = v1533.Substring (0, 2)
    let v2539 : uint8 = Fable.Core.Rust.emitExpr v2538 v163
    let v2540 : string = v1533.Substring (2, 2)
    let v2541 : uint8 = Fable.Core.Rust.emitExpr v2540 v163
    let v2542 : string = v1533.Substring (4, 2)
    let v2543 : uint8 = Fable.Core.Rust.emitExpr v2542 v163
    let v2544 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v2537, v2539, v2541, v2543) v169
    let v2545 : Types.std.string.String = Fable.Core.Rust.emitExpr v2544 v125
    let v2546 : Types.std.string.String = v2461 |> unbox
    let v2547 : string = Fable.Core.Rust.emitExpr v2546 v81
    let v2548 : string = $"r#\"{v83}\"#"
    let v2549 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2548
    let v2550 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2549 v86
    let v2551 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2550 v88
    let v2552 : string = method2(v2547)
    let v2553 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2552 v91
    let v2554 : string = method3()
    let v2555 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2554 v91
    let v2556 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2551, v2553, v2555) v95
    let v2557 : string = Fable.Core.Rust.emitExpr v2556 v81
    let v2558 : string = $"r#\"{v98}\"#"
    let v2559 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2558
    let v2560 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2559 v86
    let v2561 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2560 v88
    let v2562 : string = method2(v2557)
    let v2563 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2562 v91
    let v2564 : string = method4()
    let v2565 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2564 v91
    let v2566 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2561, v2563, v2565) v95
    let v2567 : string = Fable.Core.Rust.emitExpr v2566 v81
    let v2568 : string = $"r#\"{v109}\"#"
    let v2569 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2568
    let v2570 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2569 v86
    let v2571 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2570 v88
    let v2572 : string = method2(v2567)
    let v2573 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2572 v91
    let v2574 : string = method5()
    let v2575 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2574 v91
    let v2576 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2571, v2573, v2575) v95
    let v2577 : string = Fable.Core.Rust.emitExpr v2576 v81
    let v2578 : Types.std.string.String = Fable.Core.Rust.emitExpr v2577 v11
    let v2579 : Types.EmitType<Types.std.string.String> = v2578 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2580 : string = v206.Substring (0, 2)
    let v2581 : uint8 = Fable.Core.Rust.emitExpr v2580 v163
    let v2582 : string = v206.Substring (2, 2)
    let v2583 : uint8 = Fable.Core.Rust.emitExpr v2582 v163
    let v2584 : string = v206.Substring (4, 2)
    let v2585 : uint8 = Fable.Core.Rust.emitExpr v2584 v163
    let v2586 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v2579, v2581, v2583, v2585) v169
    let v2587 : Types.std.string.String = Fable.Core.Rust.emitExpr v2586 v125
    let v2588 : string = $"{v2503} {v2545} {v2587}"
    System.Console.WriteLine v2588
    let v2589 : string = "> spi_build_file; ok"
    let v2590 : Types.std.string.String = Fable.Core.Rust.emitExpr v2589 v11
    let v2591 : Types.EmitType<Types.std.string.String> = v2590 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2592 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v2593 : int64 = Fable.Core.Rust.emitExpr v2592 v8
    let v2594 : int64 = v2593 - v9
    let v2595 : string = (v2594).ToString ()
    let v2596 : int32 = 6
    let v2597 : string = method1(v2596, v2595)
    let v2598 : uint8 = Fable.Core.Rust.emitExpr () v50
    let v2599 : Types.std.string.String = Fable.Core.Rust.emitExpr v52 v11
    let v2600 : Types.EmitType<Types.std.string.String> = v2599 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2601 : Types.std.string.String = Fable.Core.Rust.emitExpr v2597 v11
    let v2602 : Types.EmitType<Types.std.string.String> = v2601 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2603 : Types.std.string.String = Fable.Core.Rust.emitExpr v57 v11
    let v2604 : Types.EmitType<Types.std.string.String> = v2603 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2605 : Types.std.string.String = Fable.Core.Rust.emitExpr v2598 v60
    let v2606 : Types.EmitType<Types.std.string.String> = v2605 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2607 : Types.std.string.String = Fable.Core.Rust.emitExpr v63 v11
    let v2608 : Types.EmitType<Types.std.string.String> = v2607 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2609 : Types.std.string.String = Fable.Core.Rust.emitExpr v66 v11
    let v2610 : Types.EmitType<Types.std.string.String> = v2609 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2611 : (Types.EmitType<Types.std.string.String> []) = [|v2600; v2602; v2604; v2606; v2608; v2610|]
    let v2612 : obj = Fable.Core.Rust.emitExpr v2611 v39
    let v2613 : Types.std.string.String = Fable.Core.Rust.emitExpr v2612 v41
    let v2614 : Types.EmitType<Types.std.string.String> = v2613 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2615 : Types.std.string.String = Fable.Core.Rust.emitExpr v73 v11
    let v2616 : Types.EmitType<Types.std.string.String> = v2615 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2617 : (Types.EmitType<Types.std.string.String> []) = [|v2616|]
    let v2618 : obj = Fable.Core.Rust.emitExpr v2617 v39
    let v2619 : Types.std.string.String = Fable.Core.Rust.emitExpr v2618 v41
    let v2620 : Types.EmitType<Types.std.string.String> = v2619 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2621 : Types.std.string.String = v2620 |> unbox
    let v2622 : string = Fable.Core.Rust.emitExpr v2621 v81
    let v2623 : string = $"r#\"{v83}\"#"
    let v2624 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2623
    let v2625 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2624 v86
    let v2626 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2625 v88
    let v2627 : string = method2(v2622)
    let v2628 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2627 v91
    let v2629 : string = method3()
    let v2630 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2629 v91
    let v2631 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2626, v2628, v2630) v95
    let v2632 : string = Fable.Core.Rust.emitExpr v2631 v81
    let v2633 : string = $"r#\"{v98}\"#"
    let v2634 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2633
    let v2635 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2634 v86
    let v2636 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2635 v88
    let v2637 : string = method2(v2632)
    let v2638 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2637 v91
    let v2639 : string = method4()
    let v2640 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2639 v91
    let v2641 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2636, v2638, v2640) v95
    let v2642 : string = Fable.Core.Rust.emitExpr v2641 v81
    let v2643 : string = $"r#\"{v109}\"#"
    let v2644 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2643
    let v2645 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2644 v86
    let v2646 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2645 v88
    let v2647 : string = method2(v2642)
    let v2648 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2647 v91
    let v2649 : string = method5()
    let v2650 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2649 v91
    let v2651 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2646, v2648, v2650) v95
    let v2652 : string = Fable.Core.Rust.emitExpr v2651 v81
    let v2653 : Types.std.string.String = Fable.Core.Rust.emitExpr v2652 v11
    let v2654 : Types.EmitType<Types.std.string.String> = v2653 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2655 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v2654, v122) v123
    let v2656 : Types.std.string.String = Fable.Core.Rust.emitExpr v2655 v125
    let v2657 : Types.std.string.String = v2591 |> unbox
    let v2658 : string = Fable.Core.Rust.emitExpr v2657 v81
    let v2659 : string = $"r#\"{v83}\"#"
    let v2660 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2659
    let v2661 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2660 v86
    let v2662 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2661 v88
    let v2663 : string = method2(v2658)
    let v2664 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2663 v91
    let v2665 : string = method3()
    let v2666 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2665 v91
    let v2667 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2662, v2664, v2666) v95
    let v2668 : string = Fable.Core.Rust.emitExpr v2667 v81
    let v2669 : string = $"r#\"{v98}\"#"
    let v2670 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2669
    let v2671 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2670 v86
    let v2672 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2671 v88
    let v2673 : string = method2(v2668)
    let v2674 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2673 v91
    let v2675 : string = method4()
    let v2676 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2675 v91
    let v2677 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2672, v2674, v2676) v95
    let v2678 : string = Fable.Core.Rust.emitExpr v2677 v81
    let v2679 : string = $"r#\"{v109}\"#"
    let v2680 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2679
    let v2681 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2680 v86
    let v2682 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2681 v88
    let v2683 : string = method2(v2678)
    let v2684 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2683 v91
    let v2685 : string = method5()
    let v2686 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2685 v91
    let v2687 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2682, v2684, v2686) v95
    let v2688 : string = Fable.Core.Rust.emitExpr v2687 v81
    let v2689 : Types.std.string.String = Fable.Core.Rust.emitExpr v2688 v11
    let v2690 : Types.EmitType<Types.std.string.String> = v2689 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2691 : string = v161.Substring (0, 2)
    let v2692 : uint8 = Fable.Core.Rust.emitExpr v2691 v163
    let v2693 : string = v161.Substring (2, 2)
    let v2694 : uint8 = Fable.Core.Rust.emitExpr v2693 v163
    let v2695 : string = v161.Substring (4, 2)
    let v2696 : uint8 = Fable.Core.Rust.emitExpr v2695 v163
    let v2697 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v2690, v2692, v2694, v2696) v169
    let v2698 : Types.std.string.String = Fable.Core.Rust.emitExpr v2697 v125
    let v2699 : Types.std.string.String = v2614 |> unbox
    let v2700 : string = Fable.Core.Rust.emitExpr v2699 v81
    let v2701 : string = $"r#\"{v83}\"#"
    let v2702 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2701
    let v2703 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2702 v86
    let v2704 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2703 v88
    let v2705 : string = method2(v2700)
    let v2706 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2705 v91
    let v2707 : string = method3()
    let v2708 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2707 v91
    let v2709 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2704, v2706, v2708) v95
    let v2710 : string = Fable.Core.Rust.emitExpr v2709 v81
    let v2711 : string = $"r#\"{v98}\"#"
    let v2712 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2711
    let v2713 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2712 v86
    let v2714 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2713 v88
    let v2715 : string = method2(v2710)
    let v2716 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2715 v91
    let v2717 : string = method4()
    let v2718 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2717 v91
    let v2719 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2714, v2716, v2718) v95
    let v2720 : string = Fable.Core.Rust.emitExpr v2719 v81
    let v2721 : string = $"r#\"{v109}\"#"
    let v2722 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2721
    let v2723 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2722 v86
    let v2724 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2723 v88
    let v2725 : string = method2(v2720)
    let v2726 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2725 v91
    let v2727 : string = method5()
    let v2728 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2727 v91
    let v2729 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2724, v2726, v2728) v95
    let v2730 : string = Fable.Core.Rust.emitExpr v2729 v81
    let v2731 : Types.std.string.String = Fable.Core.Rust.emitExpr v2730 v11
    let v2732 : Types.EmitType<Types.std.string.String> = v2731 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2733 : string = v206.Substring (0, 2)
    let v2734 : uint8 = Fable.Core.Rust.emitExpr v2733 v163
    let v2735 : string = v206.Substring (2, 2)
    let v2736 : uint8 = Fable.Core.Rust.emitExpr v2735 v163
    let v2737 : string = v206.Substring (4, 2)
    let v2738 : uint8 = Fable.Core.Rust.emitExpr v2737 v163
    let v2739 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v2732, v2734, v2736, v2738) v169
    let v2740 : Types.std.string.String = Fable.Core.Rust.emitExpr v2739 v125
    let v2741 : string = $"{v2656} {v2698} {v2740}"
    System.Console.WriteLine v2741
    let struct (v2742 : string, v2743 : string, v2744 : string, v2745 : bool) = method0()
    let v2746 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v2747 : int64 = Fable.Core.Rust.emitExpr v2746 v8
    let v2748 : string = "std::fs::metadata($0).unwrap().modified().unwrap()"
    let v2749 : Types.std.time.SystemTime = Fable.Core.Rust.emitExpr v735 v2748
    let v2750 : Types.std.string.String = Fable.Core.Rust.emitExpr v736 v11
    let v2751 : Types.EmitType<Types.std.string.String> = v2750 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2752 : string = Fable.Core.Rust.emitExpr v735 v21
    let v2753 : Types.std.string.String = Fable.Core.Rust.emitExpr v2752 v11
    let v2754 : Types.EmitType<Types.std.string.String> = v2753 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2755 : string = "start"
    let v2756 : Types.std.string.String = Fable.Core.Rust.emitExpr v2755 v11
    let v2757 : Types.EmitType<Types.std.string.String> = v2756 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2758 : Types.std.string.String = Fable.Core.Rust.emitExpr v2749 v60
    let v2759 : Types.EmitType<Types.std.string.String> = v2758 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2760 : (Types.EmitType<Types.std.string.String> []) = [|v2751; v2754; v2757; v2759|]
    let v2761 : obj = Fable.Core.Rust.emitExpr v2760 v39
    let v2762 : Types.std.string.String = Fable.Core.Rust.emitExpr v2761 v41
    let v2763 : Types.EmitType<Types.std.string.String> = v2762 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2764 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v2765 : int64 = Fable.Core.Rust.emitExpr v2764 v8
    let v2766 : int64 = v2765 - v2747
    let v2767 : string = (v2766).ToString ()
    let v2768 : int32 = 6
    let v2769 : string = method1(v2768, v2767)
    let v2770 : uint8 = Fable.Core.Rust.emitExpr () v50
    let v2771 : Types.std.string.String = Fable.Core.Rust.emitExpr v52 v11
    let v2772 : Types.EmitType<Types.std.string.String> = v2771 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2773 : Types.std.string.String = Fable.Core.Rust.emitExpr v2769 v11
    let v2774 : Types.EmitType<Types.std.string.String> = v2773 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2775 : Types.std.string.String = Fable.Core.Rust.emitExpr v57 v11
    let v2776 : Types.EmitType<Types.std.string.String> = v2775 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2777 : Types.std.string.String = Fable.Core.Rust.emitExpr v2770 v60
    let v2778 : Types.EmitType<Types.std.string.String> = v2777 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2779 : Types.std.string.String = Fable.Core.Rust.emitExpr v63 v11
    let v2780 : Types.EmitType<Types.std.string.String> = v2779 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2781 : Types.std.string.String = Fable.Core.Rust.emitExpr v66 v11
    let v2782 : Types.EmitType<Types.std.string.String> = v2781 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2783 : (Types.EmitType<Types.std.string.String> []) = [|v2772; v2774; v2776; v2778; v2780; v2782|]
    let v2784 : obj = Fable.Core.Rust.emitExpr v2783 v39
    let v2785 : Types.std.string.String = Fable.Core.Rust.emitExpr v2784 v41
    let v2786 : Types.EmitType<Types.std.string.String> = v2785 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2787 : string = "> wait_file_change ()"
    let v2788 : Types.std.string.String = Fable.Core.Rust.emitExpr v2787 v11
    let v2789 : Types.EmitType<Types.std.string.String> = v2788 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2790 : (Types.EmitType<Types.std.string.String> []) = [|v2789|]
    let v2791 : obj = Fable.Core.Rust.emitExpr v2790 v39
    let v2792 : Types.std.string.String = Fable.Core.Rust.emitExpr v2791 v41
    let v2793 : Types.EmitType<Types.std.string.String> = v2792 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2794 : Types.std.string.String = v2793 |> unbox
    let v2795 : string = Fable.Core.Rust.emitExpr v2794 v81
    let v2796 : string = $"r#\"{v83}\"#"
    let v2797 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2796
    let v2798 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2797 v86
    let v2799 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2798 v88
    let v2800 : string = method2(v2795)
    let v2801 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2800 v91
    let v2802 : string = method3()
    let v2803 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2802 v91
    let v2804 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2799, v2801, v2803) v95
    let v2805 : string = Fable.Core.Rust.emitExpr v2804 v81
    let v2806 : string = $"r#\"{v98}\"#"
    let v2807 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2806
    let v2808 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2807 v86
    let v2809 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2808 v88
    let v2810 : string = method2(v2805)
    let v2811 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2810 v91
    let v2812 : string = method4()
    let v2813 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2812 v91
    let v2814 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2809, v2811, v2813) v95
    let v2815 : string = Fable.Core.Rust.emitExpr v2814 v81
    let v2816 : string = $"r#\"{v109}\"#"
    let v2817 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2816
    let v2818 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2817 v86
    let v2819 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2818 v88
    let v2820 : string = method2(v2815)
    let v2821 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2820 v91
    let v2822 : string = method5()
    let v2823 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2822 v91
    let v2824 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2819, v2821, v2823) v95
    let v2825 : string = Fable.Core.Rust.emitExpr v2824 v81
    let v2826 : Types.std.string.String = Fable.Core.Rust.emitExpr v2825 v11
    let v2827 : Types.EmitType<Types.std.string.String> = v2826 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2828 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v2827, v122) v123
    let v2829 : Types.std.string.String = Fable.Core.Rust.emitExpr v2828 v125
    let v2830 : Types.std.string.String = v2763 |> unbox
    let v2831 : string = Fable.Core.Rust.emitExpr v2830 v81
    let v2832 : string = $"r#\"{v83}\"#"
    let v2833 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2832
    let v2834 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2833 v86
    let v2835 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2834 v88
    let v2836 : string = method2(v2831)
    let v2837 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2836 v91
    let v2838 : string = method3()
    let v2839 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2838 v91
    let v2840 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2835, v2837, v2839) v95
    let v2841 : string = Fable.Core.Rust.emitExpr v2840 v81
    let v2842 : string = $"r#\"{v98}\"#"
    let v2843 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2842
    let v2844 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2843 v86
    let v2845 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2844 v88
    let v2846 : string = method2(v2841)
    let v2847 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2846 v91
    let v2848 : string = method4()
    let v2849 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2848 v91
    let v2850 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2845, v2847, v2849) v95
    let v2851 : string = Fable.Core.Rust.emitExpr v2850 v81
    let v2852 : string = $"r#\"{v109}\"#"
    let v2853 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2852
    let v2854 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2853 v86
    let v2855 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2854 v88
    let v2856 : string = method2(v2851)
    let v2857 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2856 v91
    let v2858 : string = method5()
    let v2859 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2858 v91
    let v2860 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2855, v2857, v2859) v95
    let v2861 : string = Fable.Core.Rust.emitExpr v2860 v81
    let v2862 : Types.std.string.String = Fable.Core.Rust.emitExpr v2861 v11
    let v2863 : Types.EmitType<Types.std.string.String> = v2862 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2864 : string = "387957"
    let v2865 : string = v2864.Substring (0, 2)
    let v2866 : uint8 = Fable.Core.Rust.emitExpr v2865 v163
    let v2867 : string = v2864.Substring (2, 2)
    let v2868 : uint8 = Fable.Core.Rust.emitExpr v2867 v163
    let v2869 : string = v2864.Substring (4, 2)
    let v2870 : uint8 = Fable.Core.Rust.emitExpr v2869 v163
    let v2871 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v2863, v2866, v2868, v2870) v169
    let v2872 : Types.std.string.String = Fable.Core.Rust.emitExpr v2871 v125
    let v2873 : Types.std.string.String = v2786 |> unbox
    let v2874 : string = Fable.Core.Rust.emitExpr v2873 v81
    let v2875 : string = $"r#\"{v83}\"#"
    let v2876 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2875
    let v2877 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2876 v86
    let v2878 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2877 v88
    let v2879 : string = method2(v2874)
    let v2880 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2879 v91
    let v2881 : string = method3()
    let v2882 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2881 v91
    let v2883 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2878, v2880, v2882) v95
    let v2884 : string = Fable.Core.Rust.emitExpr v2883 v81
    let v2885 : string = $"r#\"{v98}\"#"
    let v2886 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2885
    let v2887 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2886 v86
    let v2888 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2887 v88
    let v2889 : string = method2(v2884)
    let v2890 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2889 v91
    let v2891 : string = method4()
    let v2892 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2891 v91
    let v2893 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2888, v2890, v2892) v95
    let v2894 : string = Fable.Core.Rust.emitExpr v2893 v81
    let v2895 : string = $"r#\"{v109}\"#"
    let v2896 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2895
    let v2897 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2896 v86
    let v2898 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2897 v88
    let v2899 : string = method2(v2894)
    let v2900 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2899 v91
    let v2901 : string = method5()
    let v2902 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2901 v91
    let v2903 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2898, v2900, v2902) v95
    let v2904 : string = Fable.Core.Rust.emitExpr v2903 v81
    let v2905 : Types.std.string.String = Fable.Core.Rust.emitExpr v2904 v11
    let v2906 : Types.EmitType<Types.std.string.String> = v2905 |> unbox<Types.EmitType<Types.std.string.String>>
    let v2907 : string = v206.Substring (0, 2)
    let v2908 : uint8 = Fable.Core.Rust.emitExpr v2907 v163
    let v2909 : string = v206.Substring (2, 2)
    let v2910 : uint8 = Fable.Core.Rust.emitExpr v2909 v163
    let v2911 : string = v206.Substring (4, 2)
    let v2912 : uint8 = Fable.Core.Rust.emitExpr v2911 v163
    let v2913 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v2906, v2908, v2910, v2912) v169
    let v2914 : Types.std.string.String = Fable.Core.Rust.emitExpr v2913 v125
    let v2915 : string = $"{v2829} {v2872} {v2914}"
    System.Console.WriteLine v2915
    let v2916 : (int32 []) = [| 0..50 |]
    let v2917 : int32 = v2916.Length
    let v2918 : US0 = US0_0
    let v2919 : Mut0 = {l0 = 0; l1 = v2918} : Mut0
    while method6(v2917, v2919) do
        let v2921 : int32 = v2919.l0
        let v2922 : US0 = v2919.l1
        let v2923 : int32 = v2916.[int v2921]
        let v3101 : US0 =
            match v2922 with
            | US0_0 -> (* None *)
                let v2926 : Types.std.time.SystemTime = Fable.Core.Rust.emitExpr v735 v2748
                let v2927 : string = "i"
                let v2928 : Types.std.string.String = Fable.Core.Rust.emitExpr v2927 v11
                let v2929 : Types.EmitType<Types.std.string.String> = v2928 |> unbox<Types.EmitType<Types.std.string.String>>
                let v2930 : Types.std.string.String = Fable.Core.Rust.emitExpr v2923 v60
                let v2931 : Types.EmitType<Types.std.string.String> = v2930 |> unbox<Types.EmitType<Types.std.string.String>>
                let v2932 : string = "last_modified"
                let v2933 : Types.std.string.String = Fable.Core.Rust.emitExpr v2932 v11
                let v2934 : Types.EmitType<Types.std.string.String> = v2933 |> unbox<Types.EmitType<Types.std.string.String>>
                let v2935 : Types.std.string.String = Fable.Core.Rust.emitExpr v2926 v60
                let v2936 : Types.EmitType<Types.std.string.String> = v2935 |> unbox<Types.EmitType<Types.std.string.String>>
                let v2937 : (Types.EmitType<Types.std.string.String> []) = [|v2929; v2931; v2934; v2936|]
                let v2938 : obj = Fable.Core.Rust.emitExpr v2937 v39
                let v2939 : Types.std.string.String = Fable.Core.Rust.emitExpr v2938 v41
                let v2940 : Types.EmitType<Types.std.string.String> = v2939 |> unbox<Types.EmitType<Types.std.string.String>>
                let v2941 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
                let v2942 : int64 = Fable.Core.Rust.emitExpr v2941 v8
                let v2943 : int64 = v2942 - v2747
                let v2944 : string = (v2943).ToString ()
                let v2945 : int32 = 6
                let v2946 : string = method1(v2945, v2944)
                let v2947 : uint8 = Fable.Core.Rust.emitExpr () v50
                let v2948 : Types.std.string.String = Fable.Core.Rust.emitExpr v52 v11
                let v2949 : Types.EmitType<Types.std.string.String> = v2948 |> unbox<Types.EmitType<Types.std.string.String>>
                let v2950 : Types.std.string.String = Fable.Core.Rust.emitExpr v2946 v11
                let v2951 : Types.EmitType<Types.std.string.String> = v2950 |> unbox<Types.EmitType<Types.std.string.String>>
                let v2952 : Types.std.string.String = Fable.Core.Rust.emitExpr v57 v11
                let v2953 : Types.EmitType<Types.std.string.String> = v2952 |> unbox<Types.EmitType<Types.std.string.String>>
                let v2954 : Types.std.string.String = Fable.Core.Rust.emitExpr v2947 v60
                let v2955 : Types.EmitType<Types.std.string.String> = v2954 |> unbox<Types.EmitType<Types.std.string.String>>
                let v2956 : Types.std.string.String = Fable.Core.Rust.emitExpr v63 v11
                let v2957 : Types.EmitType<Types.std.string.String> = v2956 |> unbox<Types.EmitType<Types.std.string.String>>
                let v2958 : Types.std.string.String = Fable.Core.Rust.emitExpr v66 v11
                let v2959 : Types.EmitType<Types.std.string.String> = v2958 |> unbox<Types.EmitType<Types.std.string.String>>
                let v2960 : (Types.EmitType<Types.std.string.String> []) = [|v2949; v2951; v2953; v2955; v2957; v2959|]
                let v2961 : obj = Fable.Core.Rust.emitExpr v2960 v39
                let v2962 : Types.std.string.String = Fable.Core.Rust.emitExpr v2961 v41
                let v2963 : Types.EmitType<Types.std.string.String> = v2962 |> unbox<Types.EmitType<Types.std.string.String>>
                let v2964 : Types.std.string.String = Fable.Core.Rust.emitExpr v2787 v11
                let v2965 : Types.EmitType<Types.std.string.String> = v2964 |> unbox<Types.EmitType<Types.std.string.String>>
                let v2966 : (Types.EmitType<Types.std.string.String> []) = [|v2965|]
                let v2967 : obj = Fable.Core.Rust.emitExpr v2966 v39
                let v2968 : Types.std.string.String = Fable.Core.Rust.emitExpr v2967 v41
                let v2969 : Types.EmitType<Types.std.string.String> = v2968 |> unbox<Types.EmitType<Types.std.string.String>>
                let v2970 : Types.std.string.String = v2969 |> unbox
                let v2971 : string = Fable.Core.Rust.emitExpr v2970 v81
                let v2972 : string = $"r#\"{v83}\"#"
                let v2973 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2972
                let v2974 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2973 v86
                let v2975 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2974 v88
                let v2976 : string = method2(v2971)
                let v2977 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2976 v91
                let v2978 : string = method3()
                let v2979 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2978 v91
                let v2980 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2975, v2977, v2979) v95
                let v2981 : string = Fable.Core.Rust.emitExpr v2980 v81
                let v2982 : string = $"r#\"{v98}\"#"
                let v2983 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2982
                let v2984 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2983 v86
                let v2985 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2984 v88
                let v2986 : string = method2(v2981)
                let v2987 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2986 v91
                let v2988 : string = method4()
                let v2989 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2988 v91
                let v2990 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2985, v2987, v2989) v95
                let v2991 : string = Fable.Core.Rust.emitExpr v2990 v81
                let v2992 : string = $"r#\"{v109}\"#"
                let v2993 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v2992
                let v2994 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v2993 v86
                let v2995 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v2994 v88
                let v2996 : string = method2(v2991)
                let v2997 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2996 v91
                let v2998 : string = method5()
                let v2999 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v2998 v91
                let v3000 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v2995, v2997, v2999) v95
                let v3001 : string = Fable.Core.Rust.emitExpr v3000 v81
                let v3002 : Types.std.string.String = Fable.Core.Rust.emitExpr v3001 v11
                let v3003 : Types.EmitType<Types.std.string.String> = v3002 |> unbox<Types.EmitType<Types.std.string.String>>
                let v3004 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v3003, v122) v123
                let v3005 : Types.std.string.String = Fable.Core.Rust.emitExpr v3004 v125
                let v3006 : Types.std.string.String = v2940 |> unbox
                let v3007 : string = Fable.Core.Rust.emitExpr v3006 v81
                let v3008 : string = $"r#\"{v83}\"#"
                let v3009 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3008
                let v3010 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3009 v86
                let v3011 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3010 v88
                let v3012 : string = method2(v3007)
                let v3013 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3012 v91
                let v3014 : string = method3()
                let v3015 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3014 v91
                let v3016 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3011, v3013, v3015) v95
                let v3017 : string = Fable.Core.Rust.emitExpr v3016 v81
                let v3018 : string = $"r#\"{v98}\"#"
                let v3019 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3018
                let v3020 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3019 v86
                let v3021 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3020 v88
                let v3022 : string = method2(v3017)
                let v3023 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3022 v91
                let v3024 : string = method4()
                let v3025 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3024 v91
                let v3026 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3021, v3023, v3025) v95
                let v3027 : string = Fable.Core.Rust.emitExpr v3026 v81
                let v3028 : string = $"r#\"{v109}\"#"
                let v3029 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3028
                let v3030 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3029 v86
                let v3031 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3030 v88
                let v3032 : string = method2(v3027)
                let v3033 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3032 v91
                let v3034 : string = method5()
                let v3035 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3034 v91
                let v3036 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3031, v3033, v3035) v95
                let v3037 : string = Fable.Core.Rust.emitExpr v3036 v81
                let v3038 : Types.std.string.String = Fable.Core.Rust.emitExpr v3037 v11
                let v3039 : Types.EmitType<Types.std.string.String> = v3038 |> unbox<Types.EmitType<Types.std.string.String>>
                let v3040 : string = v2864.Substring (0, 2)
                let v3041 : uint8 = Fable.Core.Rust.emitExpr v3040 v163
                let v3042 : string = v2864.Substring (2, 2)
                let v3043 : uint8 = Fable.Core.Rust.emitExpr v3042 v163
                let v3044 : string = v2864.Substring (4, 2)
                let v3045 : uint8 = Fable.Core.Rust.emitExpr v3044 v163
                let v3046 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v3039, v3041, v3043, v3045) v169
                let v3047 : Types.std.string.String = Fable.Core.Rust.emitExpr v3046 v125
                let v3048 : Types.std.string.String = v2963 |> unbox
                let v3049 : string = Fable.Core.Rust.emitExpr v3048 v81
                let v3050 : string = $"r#\"{v83}\"#"
                let v3051 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3050
                let v3052 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3051 v86
                let v3053 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3052 v88
                let v3054 : string = method2(v3049)
                let v3055 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3054 v91
                let v3056 : string = method3()
                let v3057 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3056 v91
                let v3058 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3053, v3055, v3057) v95
                let v3059 : string = Fable.Core.Rust.emitExpr v3058 v81
                let v3060 : string = $"r#\"{v98}\"#"
                let v3061 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3060
                let v3062 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3061 v86
                let v3063 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3062 v88
                let v3064 : string = method2(v3059)
                let v3065 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3064 v91
                let v3066 : string = method4()
                let v3067 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3066 v91
                let v3068 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3063, v3065, v3067) v95
                let v3069 : string = Fable.Core.Rust.emitExpr v3068 v81
                let v3070 : string = $"r#\"{v109}\"#"
                let v3071 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3070
                let v3072 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3071 v86
                let v3073 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3072 v88
                let v3074 : string = method2(v3069)
                let v3075 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3074 v91
                let v3076 : string = method5()
                let v3077 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3076 v91
                let v3078 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3073, v3075, v3077) v95
                let v3079 : string = Fable.Core.Rust.emitExpr v3078 v81
                let v3080 : Types.std.string.String = Fable.Core.Rust.emitExpr v3079 v11
                let v3081 : Types.EmitType<Types.std.string.String> = v3080 |> unbox<Types.EmitType<Types.std.string.String>>
                let v3082 : string = v206.Substring (0, 2)
                let v3083 : uint8 = Fable.Core.Rust.emitExpr v3082 v163
                let v3084 : string = v206.Substring (2, 2)
                let v3085 : uint8 = Fable.Core.Rust.emitExpr v3084 v163
                let v3086 : string = v206.Substring (4, 2)
                let v3087 : uint8 = Fable.Core.Rust.emitExpr v3086 v163
                let v3088 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v3081, v3083, v3085, v3087) v169
                let v3089 : Types.std.string.String = Fable.Core.Rust.emitExpr v3088 v125
                let v3090 : string = $"{v3005} {v3047} {v3089}"
                System.Console.WriteLine v3090
                let v3091 : string = "$0 > $1"
                let v3092 : bool = Fable.Core.Rust.emitExpr struct (v2926, v2749) v3091
                if v3092 then
                    let v3093 : Result<Types.std.string.String, Types.std.io.Error> = Fable.Core.Rust.emitExpr v735 v1053
                    let v3094 : Types.std.string.String = Fable.Core.Rust.emitExpr v3093 v1055
                    let v3095 : string = Fable.Core.Rust.emitExpr v3094 v81
                    US0_1(v3095)
                else
                    let v3097 : string = "std::thread::sleep(std::time::Duration::from_millis(*$0))"
                    Fable.Core.Rust.emitExpr 25UL v3097
                    US0_0
            | US0_1(v2924) -> (* Some *)
                US0_1(v2924)
        let v3102 : int32 = v2921 + 1
        v2919.l0 <- v3102
        v2919.l1 <- v3101
        ()
    let v3103 : US0 = v2919.l1
    let v3106 : string =
        match v3103 with
        | US0_0 -> (* None *)
            v896
        | US0_1(v3104) -> (* Some *)
            v3104
    let v3107 : string = "new_fsx len"
    let v3108 : Types.std.string.String = Fable.Core.Rust.emitExpr v3107 v11
    let v3109 : Types.EmitType<Types.std.string.String> = v3108 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3110 : int32 = Fable.Core.Rust.emitExpr v3106 v1071
    let v3111 : Types.std.string.String = Fable.Core.Rust.emitExpr v3110 v60
    let v3112 : Types.EmitType<Types.std.string.String> = v3111 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3113 : (Types.EmitType<Types.std.string.String> []) = [|v3109; v3112|]
    let v3114 : obj = Fable.Core.Rust.emitExpr v3113 v39
    let v3115 : Types.std.string.String = Fable.Core.Rust.emitExpr v3114 v41
    let v3116 : Types.EmitType<Types.std.string.String> = v3115 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3117 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v3118 : int64 = Fable.Core.Rust.emitExpr v3117 v8
    let v3119 : int64 = v3118 - v9
    let v3120 : string = (v3119).ToString ()
    let v3121 : int32 = 6
    let v3122 : string = method1(v3121, v3120)
    let v3123 : uint8 = Fable.Core.Rust.emitExpr () v50
    let v3124 : Types.std.string.String = Fable.Core.Rust.emitExpr v52 v11
    let v3125 : Types.EmitType<Types.std.string.String> = v3124 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3126 : Types.std.string.String = Fable.Core.Rust.emitExpr v3122 v11
    let v3127 : Types.EmitType<Types.std.string.String> = v3126 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3128 : Types.std.string.String = Fable.Core.Rust.emitExpr v57 v11
    let v3129 : Types.EmitType<Types.std.string.String> = v3128 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3130 : Types.std.string.String = Fable.Core.Rust.emitExpr v3123 v60
    let v3131 : Types.EmitType<Types.std.string.String> = v3130 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3132 : Types.std.string.String = Fable.Core.Rust.emitExpr v63 v11
    let v3133 : Types.EmitType<Types.std.string.String> = v3132 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3134 : Types.std.string.String = Fable.Core.Rust.emitExpr v66 v11
    let v3135 : Types.EmitType<Types.std.string.String> = v3134 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3136 : (Types.EmitType<Types.std.string.String> []) = [|v3125; v3127; v3129; v3131; v3133; v3135|]
    let v3137 : obj = Fable.Core.Rust.emitExpr v3136 v39
    let v3138 : Types.std.string.String = Fable.Core.Rust.emitExpr v3137 v41
    let v3139 : Types.EmitType<Types.std.string.String> = v3138 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3140 : Types.std.string.String = Fable.Core.Rust.emitExpr v73 v11
    let v3141 : Types.EmitType<Types.std.string.String> = v3140 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3142 : (Types.EmitType<Types.std.string.String> []) = [|v3141|]
    let v3143 : obj = Fable.Core.Rust.emitExpr v3142 v39
    let v3144 : Types.std.string.String = Fable.Core.Rust.emitExpr v3143 v41
    let v3145 : Types.EmitType<Types.std.string.String> = v3144 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3146 : Types.std.string.String = v3145 |> unbox
    let v3147 : string = Fable.Core.Rust.emitExpr v3146 v81
    let v3148 : string = $"r#\"{v83}\"#"
    let v3149 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3148
    let v3150 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3149 v86
    let v3151 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3150 v88
    let v3152 : string = method2(v3147)
    let v3153 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3152 v91
    let v3154 : string = method3()
    let v3155 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3154 v91
    let v3156 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3151, v3153, v3155) v95
    let v3157 : string = Fable.Core.Rust.emitExpr v3156 v81
    let v3158 : string = $"r#\"{v98}\"#"
    let v3159 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3158
    let v3160 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3159 v86
    let v3161 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3160 v88
    let v3162 : string = method2(v3157)
    let v3163 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3162 v91
    let v3164 : string = method4()
    let v3165 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3164 v91
    let v3166 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3161, v3163, v3165) v95
    let v3167 : string = Fable.Core.Rust.emitExpr v3166 v81
    let v3168 : string = $"r#\"{v109}\"#"
    let v3169 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3168
    let v3170 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3169 v86
    let v3171 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3170 v88
    let v3172 : string = method2(v3167)
    let v3173 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3172 v91
    let v3174 : string = method5()
    let v3175 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3174 v91
    let v3176 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3171, v3173, v3175) v95
    let v3177 : string = Fable.Core.Rust.emitExpr v3176 v81
    let v3178 : Types.std.string.String = Fable.Core.Rust.emitExpr v3177 v11
    let v3179 : Types.EmitType<Types.std.string.String> = v3178 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3180 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v3179, v122) v123
    let v3181 : Types.std.string.String = Fable.Core.Rust.emitExpr v3180 v125
    let v3182 : Types.std.string.String = v3116 |> unbox
    let v3183 : string = Fable.Core.Rust.emitExpr v3182 v81
    let v3184 : string = $"r#\"{v83}\"#"
    let v3185 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3184
    let v3186 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3185 v86
    let v3187 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3186 v88
    let v3188 : string = method2(v3183)
    let v3189 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3188 v91
    let v3190 : string = method3()
    let v3191 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3190 v91
    let v3192 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3187, v3189, v3191) v95
    let v3193 : string = Fable.Core.Rust.emitExpr v3192 v81
    let v3194 : string = $"r#\"{v98}\"#"
    let v3195 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3194
    let v3196 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3195 v86
    let v3197 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3196 v88
    let v3198 : string = method2(v3193)
    let v3199 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3198 v91
    let v3200 : string = method4()
    let v3201 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3200 v91
    let v3202 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3197, v3199, v3201) v95
    let v3203 : string = Fable.Core.Rust.emitExpr v3202 v81
    let v3204 : string = $"r#\"{v109}\"#"
    let v3205 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3204
    let v3206 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3205 v86
    let v3207 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3206 v88
    let v3208 : string = method2(v3203)
    let v3209 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3208 v91
    let v3210 : string = method5()
    let v3211 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3210 v91
    let v3212 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3207, v3209, v3211) v95
    let v3213 : string = Fable.Core.Rust.emitExpr v3212 v81
    let v3214 : Types.std.string.String = Fable.Core.Rust.emitExpr v3213 v11
    let v3215 : Types.EmitType<Types.std.string.String> = v3214 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3216 : string = v161.Substring (0, 2)
    let v3217 : uint8 = Fable.Core.Rust.emitExpr v3216 v163
    let v3218 : string = v161.Substring (2, 2)
    let v3219 : uint8 = Fable.Core.Rust.emitExpr v3218 v163
    let v3220 : string = v161.Substring (4, 2)
    let v3221 : uint8 = Fable.Core.Rust.emitExpr v3220 v163
    let v3222 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v3215, v3217, v3219, v3221) v169
    let v3223 : Types.std.string.String = Fable.Core.Rust.emitExpr v3222 v125
    let v3224 : Types.std.string.String = v3139 |> unbox
    let v3225 : string = Fable.Core.Rust.emitExpr v3224 v81
    let v3226 : string = $"r#\"{v83}\"#"
    let v3227 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3226
    let v3228 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3227 v86
    let v3229 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3228 v88
    let v3230 : string = method2(v3225)
    let v3231 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3230 v91
    let v3232 : string = method3()
    let v3233 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3232 v91
    let v3234 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3229, v3231, v3233) v95
    let v3235 : string = Fable.Core.Rust.emitExpr v3234 v81
    let v3236 : string = $"r#\"{v98}\"#"
    let v3237 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3236
    let v3238 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3237 v86
    let v3239 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3238 v88
    let v3240 : string = method2(v3235)
    let v3241 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3240 v91
    let v3242 : string = method4()
    let v3243 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3242 v91
    let v3244 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3239, v3241, v3243) v95
    let v3245 : string = Fable.Core.Rust.emitExpr v3244 v81
    let v3246 : string = $"r#\"{v109}\"#"
    let v3247 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3246
    let v3248 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3247 v86
    let v3249 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3248 v88
    let v3250 : string = method2(v3245)
    let v3251 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3250 v91
    let v3252 : string = method5()
    let v3253 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3252 v91
    let v3254 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3249, v3251, v3253) v95
    let v3255 : string = Fable.Core.Rust.emitExpr v3254 v81
    let v3256 : Types.std.string.String = Fable.Core.Rust.emitExpr v3255 v11
    let v3257 : Types.EmitType<Types.std.string.String> = v3256 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3258 : string = v206.Substring (0, 2)
    let v3259 : uint8 = Fable.Core.Rust.emitExpr v3258 v163
    let v3260 : string = v206.Substring (2, 2)
    let v3261 : uint8 = Fable.Core.Rust.emitExpr v3260 v163
    let v3262 : string = v206.Substring (4, 2)
    let v3263 : uint8 = Fable.Core.Rust.emitExpr v3262 v163
    let v3264 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v3257, v3259, v3261, v3263) v169
    let v3265 : Types.std.string.String = Fable.Core.Rust.emitExpr v3264 v125
    let v3266 : string = $"{v3181} {v3223} {v3265}"
    System.Console.WriteLine v3266
    let v3267 : Types.std.path.PathBuf = v1 |> Option.defaultValue v735
    let v3268 : Result<unit, Types.std.io.Error> = Fable.Core.Rust.emitExpr struct (v3267, v3106) v897
    Fable.Core.Rust.emitExpr v3268 v899
    let v3269 : string = "> fs_write new_fsx_path; ok"
    let v3270 : Types.std.string.String = Fable.Core.Rust.emitExpr v3269 v11
    let v3271 : Types.EmitType<Types.std.string.String> = v3270 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3272 : Types.chrono.DateTime<Types.chrono.Utc> = Fable.Core.Rust.emitExpr () v6
    let v3273 : int64 = Fable.Core.Rust.emitExpr v3272 v8
    let v3274 : int64 = v3273 - v9
    let v3275 : string = (v3274).ToString ()
    let v3276 : int32 = 6
    let v3277 : string = method1(v3276, v3275)
    let v3278 : uint8 = Fable.Core.Rust.emitExpr () v50
    let v3279 : Types.std.string.String = Fable.Core.Rust.emitExpr v52 v11
    let v3280 : Types.EmitType<Types.std.string.String> = v3279 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3281 : Types.std.string.String = Fable.Core.Rust.emitExpr v3277 v11
    let v3282 : Types.EmitType<Types.std.string.String> = v3281 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3283 : Types.std.string.String = Fable.Core.Rust.emitExpr v57 v11
    let v3284 : Types.EmitType<Types.std.string.String> = v3283 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3285 : Types.std.string.String = Fable.Core.Rust.emitExpr v3278 v60
    let v3286 : Types.EmitType<Types.std.string.String> = v3285 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3287 : Types.std.string.String = Fable.Core.Rust.emitExpr v63 v11
    let v3288 : Types.EmitType<Types.std.string.String> = v3287 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3289 : Types.std.string.String = Fable.Core.Rust.emitExpr v66 v11
    let v3290 : Types.EmitType<Types.std.string.String> = v3289 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3291 : (Types.EmitType<Types.std.string.String> []) = [|v3280; v3282; v3284; v3286; v3288; v3290|]
    let v3292 : obj = Fable.Core.Rust.emitExpr v3291 v39
    let v3293 : Types.std.string.String = Fable.Core.Rust.emitExpr v3292 v41
    let v3294 : Types.EmitType<Types.std.string.String> = v3293 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3295 : Types.std.string.String = Fable.Core.Rust.emitExpr v73 v11
    let v3296 : Types.EmitType<Types.std.string.String> = v3295 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3297 : (Types.EmitType<Types.std.string.String> []) = [|v3296|]
    let v3298 : obj = Fable.Core.Rust.emitExpr v3297 v39
    let v3299 : Types.std.string.String = Fable.Core.Rust.emitExpr v3298 v41
    let v3300 : Types.EmitType<Types.std.string.String> = v3299 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3301 : Types.std.string.String = v3300 |> unbox
    let v3302 : string = Fable.Core.Rust.emitExpr v3301 v81
    let v3303 : string = $"r#\"{v83}\"#"
    let v3304 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3303
    let v3305 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3304 v86
    let v3306 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3305 v88
    let v3307 : string = method2(v3302)
    let v3308 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3307 v91
    let v3309 : string = method3()
    let v3310 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3309 v91
    let v3311 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3306, v3308, v3310) v95
    let v3312 : string = Fable.Core.Rust.emitExpr v3311 v81
    let v3313 : string = $"r#\"{v98}\"#"
    let v3314 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3313
    let v3315 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3314 v86
    let v3316 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3315 v88
    let v3317 : string = method2(v3312)
    let v3318 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3317 v91
    let v3319 : string = method4()
    let v3320 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3319 v91
    let v3321 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3316, v3318, v3320) v95
    let v3322 : string = Fable.Core.Rust.emitExpr v3321 v81
    let v3323 : string = $"r#\"{v109}\"#"
    let v3324 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3323
    let v3325 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3324 v86
    let v3326 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3325 v88
    let v3327 : string = method2(v3322)
    let v3328 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3327 v91
    let v3329 : string = method5()
    let v3330 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3329 v91
    let v3331 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3326, v3328, v3330) v95
    let v3332 : string = Fable.Core.Rust.emitExpr v3331 v81
    let v3333 : Types.std.string.String = Fable.Core.Rust.emitExpr v3332 v11
    let v3334 : Types.EmitType<Types.std.string.String> = v3333 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3335 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v3334, v122) v123
    let v3336 : Types.std.string.String = Fable.Core.Rust.emitExpr v3335 v125
    let v3337 : Types.std.string.String = v3271 |> unbox
    let v3338 : string = Fable.Core.Rust.emitExpr v3337 v81
    let v3339 : string = $"r#\"{v83}\"#"
    let v3340 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3339
    let v3341 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3340 v86
    let v3342 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3341 v88
    let v3343 : string = method2(v3338)
    let v3344 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3343 v91
    let v3345 : string = method3()
    let v3346 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3345 v91
    let v3347 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3342, v3344, v3346) v95
    let v3348 : string = Fable.Core.Rust.emitExpr v3347 v81
    let v3349 : string = $"r#\"{v98}\"#"
    let v3350 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3349
    let v3351 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3350 v86
    let v3352 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3351 v88
    let v3353 : string = method2(v3348)
    let v3354 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3353 v91
    let v3355 : string = method4()
    let v3356 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3355 v91
    let v3357 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3352, v3354, v3356) v95
    let v3358 : string = Fable.Core.Rust.emitExpr v3357 v81
    let v3359 : string = $"r#\"{v109}\"#"
    let v3360 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3359
    let v3361 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3360 v86
    let v3362 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3361 v88
    let v3363 : string = method2(v3358)
    let v3364 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3363 v91
    let v3365 : string = method5()
    let v3366 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3365 v91
    let v3367 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3362, v3364, v3366) v95
    let v3368 : string = Fable.Core.Rust.emitExpr v3367 v81
    let v3369 : Types.std.string.String = Fable.Core.Rust.emitExpr v3368 v11
    let v3370 : Types.EmitType<Types.std.string.String> = v3369 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3371 : string = v161.Substring (0, 2)
    let v3372 : uint8 = Fable.Core.Rust.emitExpr v3371 v163
    let v3373 : string = v161.Substring (2, 2)
    let v3374 : uint8 = Fable.Core.Rust.emitExpr v3373 v163
    let v3375 : string = v161.Substring (4, 2)
    let v3376 : uint8 = Fable.Core.Rust.emitExpr v3375 v163
    let v3377 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v3370, v3372, v3374, v3376) v169
    let v3378 : Types.std.string.String = Fable.Core.Rust.emitExpr v3377 v125
    let v3379 : Types.std.string.String = v3294 |> unbox
    let v3380 : string = Fable.Core.Rust.emitExpr v3379 v81
    let v3381 : string = $"r#\"{v83}\"#"
    let v3382 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3381
    let v3383 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3382 v86
    let v3384 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3383 v88
    let v3385 : string = method2(v3380)
    let v3386 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3385 v91
    let v3387 : string = method3()
    let v3388 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3387 v91
    let v3389 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3384, v3386, v3388) v95
    let v3390 : string = Fable.Core.Rust.emitExpr v3389 v81
    let v3391 : string = $"r#\"{v98}\"#"
    let v3392 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3391
    let v3393 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3392 v86
    let v3394 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3393 v88
    let v3395 : string = method2(v3390)
    let v3396 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3395 v91
    let v3397 : string = method4()
    let v3398 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3397 v91
    let v3399 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3394, v3396, v3398) v95
    let v3400 : string = Fable.Core.Rust.emitExpr v3399 v81
    let v3401 : string = $"r#\"{v109}\"#"
    let v3402 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr () v3401
    let v3403 : Types.regex.RegexBuilder = Fable.Core.Rust.emitExpr v3402 v86
    let v3404 : Types.Ref<Types.regex.Regex> = Fable.Core.Rust.emitExpr v3403 v88
    let v3405 : string = method2(v3400)
    let v3406 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3405 v91
    let v3407 : string = method5()
    let v3408 : Types.Ref<Types.Str> = Fable.Core.Rust.emitExpr v3407 v91
    let v3409 : Types.std.string.String = Fable.Core.Rust.emitExpr struct (v3404, v3406, v3408) v95
    let v3410 : string = Fable.Core.Rust.emitExpr v3409 v81
    let v3411 : Types.std.string.String = Fable.Core.Rust.emitExpr v3410 v11
    let v3412 : Types.EmitType<Types.std.string.String> = v3411 |> unbox<Types.EmitType<Types.std.string.String>>
    let v3413 : string = v206.Substring (0, 2)
    let v3414 : uint8 = Fable.Core.Rust.emitExpr v3413 v163
    let v3415 : string = v206.Substring (2, 2)
    let v3416 : uint8 = Fable.Core.Rust.emitExpr v3415 v163
    let v3417 : string = v206.Substring (4, 2)
    let v3418 : uint8 = Fable.Core.Rust.emitExpr v3417 v163
    let v3419 : Types.colored.ColoredString = Fable.Core.Rust.emitExpr struct (v3412, v3414, v3416, v3418) v169
    let v3420 : Types.std.string.String = Fable.Core.Rust.emitExpr v3419 v125
    let v3421 : string = $"{v3336} {v3378} {v3420}"
    System.Console.WriteLine v3421
    v3106
and closure0 () (v0 : Types.std.path.PathBuf) : (Option<Types.std.path.PathBuf> -> string) =
    closure1(v0)
let v0 : (Types.std.path.PathBuf -> (Option<Types.std.path.PathBuf> -> string)) = closure0()
()
