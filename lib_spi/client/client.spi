open rust.util


inl get_window () : any = emit_expr () "web_sys::window().unwrap()"
inl get_document (window : any) : any = emit_expr window "$0.document().unwrap()"
inl get_body (document : any) : any = emit_expr document "$0.body().unwrap()"
inl create_element (tag : string) (document : any) : any =
    emit_expr (document, tag |> raw_string_literal) "$0.create_element($1).unwrap()"

inl set_attribute (key : string) (value : string) (element : any) : any =
    emit_expr (element, key |> raw_string_literal, value |> raw_string_literal) "$0.set_attribute($1, $2).unwrap()"
    element

inl append_parent (parent : any) (element : any) : () =
    emit_expr (parent, element) "$0.append_child(&$1).unwrap()"


inl app () =
    inl get_locals () = !!(;[
        !!"> app ()" : log_item
    ])
    inl log = new_log (fun () => Debug) get_locals console_log "387957"

    inl window = get_window ()
    inl document = window |> get_document
    inl body = document |> get_body
    inl iframe = document |> create_element "iframe"

    log Debug !!(;[
        !!"window"; !!window : log_item
        !!"document"; !!document
        !!"body"; !!body
        !!"iframe"; !!iframe
    ])

    iframe
    |> set_attribute "src" "https://time.is"
    |> set_attribute "width" "100%"
    |> set_attribute "style" "height: 100vh; border: 0;"
    |> set_attribute "data-test" "1"
    |> append_parent body

    0i32


inl main () =
    print_static "<client>"

    app
    |> dyn
    |> ignore

    print_static "</client>"
