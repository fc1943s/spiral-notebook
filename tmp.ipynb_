{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "UsageError: Cell magic `%%html2` not found.\n"
     ]
    }
   ],
   "source": [
    "%%html2\n",
    "<script type=\"module\">\n",
    "// log(document.querySelectorAll('script[type=\"importmap\"]').length)\n",
    "// document.querySelector('script[type=\"importmap\"]').remove()\n",
    "// log(document.querySelectorAll('script[type=\"importmap\"]').length)\n",
    "</script>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "vscode": {
     "languageId": "html"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<script type=\"importmap\">\n",
       "{\n",
       "    \"imports\": {\n",
       "        \"algosdk\": \"https://ga.jspm.io/npm:algosdk@1.16.0/dist/browser/algosdk.min.js?a=1\",\n",
       "        \"buffer\": \"https://ga.jspm.io/npm:buffer@6.0.3/index.js?a=1\"\n",
       "    },\n",
       "    \"scopes\": {\n",
       "        \"https://ga.jspm.io/\": {\n",
       "            \"base64-js\": \"https://ga.jspm.io/npm:base64-js@1.5.1/index.js?a=1\",\n",
       "            \"crypto\": \"https://ga.jspm.io/npm:@jspm/core@2.0.0-beta.24/nodelibs/browser/crypto.js?a=1\",\n",
       "            \"ieee754\": \"https://ga.jspm.io/npm:ieee754@1.2.1/index.js?a=1\",\n",
       "            \"process\": \"https://ga.jspm.io/npm:@jspm/core@2.0.0-beta.24/nodelibs/browser/process.js?a=1\"\n",
       "        }\n",
       "    }\n",
       "}\n",
       "</script>\n",
       "<script async src=\"https://ga.jspm.io/npm:es-module-shims@1.5.1/dist/es-module-shims.js\" crossorigin=\"anonymous\"></script>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%%html\n",
    "<script type=\"importmap\">\n",
    "{\n",
    "    \"imports\": {\n",
    "        \"algosdk\": \"https://ga.jspm.io/npm:algosdk@1.16.0/dist/browser/algosdk.min.js?a=1\",\n",
    "        \"buffer\": \"https://ga.jspm.io/npm:buffer@6.0.3/index.js?a=1\"\n",
    "    },\n",
    "    \"scopes\": {\n",
    "        \"https://ga.jspm.io/\": {\n",
    "            \"base64-js\": \"https://ga.jspm.io/npm:base64-js@1.5.1/index.js?a=1\",\n",
    "            \"crypto\": \"https://ga.jspm.io/npm:@jspm/core@2.0.0-beta.24/nodelibs/browser/crypto.js?a=1\",\n",
    "            \"ieee754\": \"https://ga.jspm.io/npm:ieee754@1.2.1/index.js?a=1\",\n",
    "            \"process\": \"https://ga.jspm.io/npm:@jspm/core@2.0.0-beta.24/nodelibs/browser/process.js?a=1\"\n",
    "        }\n",
    "    }\n",
    "}\n",
    "</script>\n",
    "<script async src=\"https://ga.jspm.io/npm:es-module-shims@1.5.1/dist/es-module-shims.js\" crossorigin=\"anonymous\"></script>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "vscode": {
     "languageId": "javascript"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "UsageError: Cell magic `%%html2` not found.\n"
     ]
    }
   ],
   "source": [
    "%%html2\n",
    "<script type=\"module\">\n",
    "window.accounts = [\n",
    "{'private_key': 'OBVzhzxAK4ZPdaF1QbkXsd8hgRUPJeCfYFjFghgMGnLmcpaAD0mdQJ3Rwq/RwklKGQWAbaIP9zb5BUmcZM4DOg==',\n",
    "    'address': '4ZZJNAAPJGOUBHORYKX5DQSJJIMQLADNUIH7ONXZAVEZYZGOAM5CM7HV2M',\n",
    "    'mnemonic': 'poem slush dry adult final thunder price pause concert topic mesh wild dry gate judge celery winter list promote clump country loan move about faith'},\n",
    "{'private_key': 'lHFQVWKpvRYU00yAQqHOHJegn5nvP0owYkroBFKr94qGmASQPz4KrmlSbpmNeevb+v+eqDR1owwGEmFARGRDOQ==',\n",
    "    'address': 'Q2MAJEB7HYFK42KSN2MY26PL3P5P7HVIGR22GDAGCJQUARDEIM4WLHSIFQ',\n",
    "    'mnemonic': 'crater dove click normal kitten aisle obvious error exotic lunar guard impact donkey gun lamp divide announce match cement excess piano turn fish above make'},\n",
    "{'private_key': '0DNKDAK5QfWuMCTMNJ+Re5mSlc7rbI0q1UOUYDmvPGpVTJc2PAknfOwS1rk+MAkE5ynA1XbqLeAGlYGA1H9T4w==',\n",
    "    'address': 'KVGJONR4BETXZ3AS224T4MAJATTSTQGVO3VC3YAGSWAYBVD7KPR23RKNBI',\n",
    "    'mnemonic': 'key churn alert mother lock run lyrics category office lamp silver nut cement pistol fury hollow faculty feed capable announce index cloth faint about bid'}\n",
    "]\n",
    "\n",
    "log(accounts)\n",
    "</script>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "vscode": {
     "languageId": "html"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "UsageError: Cell magic `%%html2` not found.\n"
     ]
    }
   ],
   "source": [
    "%%html2\n",
    "<script type=\"module\">\n",
    "import algosdk from \"algosdk\";\n",
    "log(Object.keys(algosdk).join('<br/>'))\n",
    "</script>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "dotnet_interactive": {
     "language": "csharp"
    },
    "vscode": {
     "languageId": "html"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "UsageError: Cell magic `%%html2` not found.\n"
     ]
    }
   ],
   "source": [
    "%%html2\n",
    "<script type=\"module\">\n",
    "  import algosdk from \"algosdk\";\n",
    "  import buffer from \"buffer\";\n",
    "\n",
    "  try {\n",
    "    const token = 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa';\n",
    "    const client = new algosdk.Algodv2(token, stash.server, stash.port);\n",
    "\n",
    "    log('status:', await client.status().do());\n",
    "\n",
    "    const suggestedParams = await client.getTransactionParams().do();\n",
    "    suggestedParams.flatFee = true;\n",
    "    suggestedParams.fee = 1000;\n",
    "\n",
    "    const application_start_compiled = await client.compile(stash.application_start).do();\n",
    "    const clear_program_compiled = await client.compile(stash.clear_program).do();\n",
    "\n",
    "    log('suggestedParams:', suggestedParams, \n",
    "        'application_start_compiled:', application_start_compiled, \n",
    "        'clear_program_compiled:', clear_program_compiled);\n",
    "\n",
    "    var txn = algosdk.makeApplicationCreateTxnFromObject({\n",
    "      suggestedParams,\n",
    "      from: accounts[0].address,\n",
    "      onComplete: algosdk.OnApplicationComplete.NoOpOC,\n",
    "      approvalProgram: new Uint8Array(buffer.Buffer.from(application_start_compiled.result, \"base64\")),\n",
    "      clearProgram: new Uint8Array(buffer.Buffer.from(clear_program_compiled.result, \"base64\")),\n",
    "      numGlobalByteSlices: 5,\n",
    "      numGlobalInts: 4,\n",
    "      numLocalByteSlices: 0,\n",
    "      numLocalInts: 0\n",
    "    });\n",
    "\n",
    "    log('txn:', txn);\n",
    "\n",
    "    let txnSigned = txn.signTxn(new Uint8Array(buffer.Buffer.from(accounts[0].private_key, \"base64\")));\n",
    "    const { txId } = await client.sendRawTransaction(txnSigned).do();\n",
    "    const transactionResponse = await algosdk.waitForConfirmation(client, txId, 5);\n",
    "    log('txId:', txId, 'transactionResponse:', transactionResponse);\n",
    "    const appId = transactionResponse[\"application-index\"];\n",
    "    log(\"appId:\", appId);\n",
    "  } catch (e) {\n",
    "    log('error:', e.toString());\n",
    "  }\n",
    "</script>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# html"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/javascript": "require.config({\n  paths: {\n      d3: '//cdnjs.cloudflare.com/ajax/libs/d3/3.4.8/d3.min'\n  }\n});\n",
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%%javascript\n",
    "require.config({\n",
    "  paths: {\n",
    "      d3: '//cdnjs.cloudflare.com/ajax/libs/d3/3.4.8/d3.min'\n",
    "  }\n",
    "});"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/javascript": "element.append(\"<div id='chart1'></div>\");\n",
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%%javascript\n",
    "element.append(\"<div id='chart1'></div>\");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "    <div id=\"_my_special_div\"></div>\n",
       "    <script>\n",
       "    var myinputstring = 'hello world';\n",
       "    function do_convert_str_html(instr) {\n",
       "        return instr.toUpperCase();\n",
       "    }\n",
       "    document.getElementById(\"_my_special_div\").textContent = do_convert_str_html(myinputstring);\n",
       "    </script>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from IPython.display import display, Javascript, Markdown as md, HTML\n",
    "\n",
    "instring_str = \"hello world\"\n",
    "js_convert = \"\"\"\n",
    "    <div id=\"_my_special_div\"></div>\n",
    "    <script>\n",
    "    var myinputstring = '{0}';\n",
    "    function do_convert_str_html(instr) {{\n",
    "        return instr.toUpperCase();\n",
    "    }}\n",
    "    document.getElementById(\"_my_special_div\").textContent = do_convert_str_html(myinputstring);\n",
    "    </script>\n",
    "\"\"\".format(instring_str)\n",
    "jsobj = HTML(js_convert)\n",
    "display(jsobj)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/javascript": "\n// Load our libraries from a CDN instead of wherever this notebook is hosted.\nrequire.config({\n    paths: {\n        babel: 'https://unpkg.com/babel-standalone@6/babel.min',\n        react: 'https://unpkg.com/react@15.3.1/dist/react',\n        'react-dom': 'https://unpkg.com/react-dom@15.3.1/dist/react-dom'\n    }\n})\n\n// Hook to call into Python.\n// Credit to disarticulate for documenting the usage of iopub: \n//    https://gist.github.com/disarticulate/d06069ff3e71cf828e5329beab8cb084\nwindow.python = code => new Promise((resolve, reject) => {\n    IPython.notebook.kernel.execute(\n        code,\n        {iopub: {output: data => resolve(data.content.text)}},\n    )   \n})\n",
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import json\n",
    "from string import Template\n",
    "\n",
    "from IPython.display import Javascript, display\n",
    "from IPython.core.magic import register_cell_magic\n",
    "\n",
    "\n",
    "display(Javascript('''\n",
    "// Load our libraries from a CDN instead of wherever this notebook is hosted.\n",
    "require.config({\n",
    "    paths: {\n",
    "        babel: 'https://unpkg.com/babel-standalone@6/babel.min',\n",
    "        react: 'https://unpkg.com/react@15.3.1/dist/react',\n",
    "        'react-dom': 'https://unpkg.com/react-dom@15.3.1/dist/react-dom'\n",
    "    }\n",
    "})\n",
    "\n",
    "// Hook to call into Python.\n",
    "// Credit to disarticulate for documenting the usage of iopub: \n",
    "//    https://gist.github.com/disarticulate/d06069ff3e71cf828e5329beab8cb084\n",
    "window.python = code => new Promise((resolve, reject) => {\n",
    "    IPython.notebook.kernel.execute(\n",
    "        code,\n",
    "        {iopub: {output: data => resolve(data.content.text)}},\n",
    "    )   \n",
    "})\n",
    "'''))\n",
    "\n",
    "\n",
    "@register_cell_magic\n",
    "def jsx(line, cell):\n",
    "    display(Javascript((Template('''\n",
    "        require(['babel', 'react', 'react-dom'], (Babel, React, ReactDOM) => {\n",
    "            eval(Babel.transform($quoted_script, {presets: ['react']}).code)\n",
    "        })\n",
    "    ''').substitute(quoted_script=json.dumps(cell)))))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<ExecutionResult object at 7fd1a8f96830, execution_count=None error_before_exec=None error_in_exec=None info=<ExecutionInfo object at 7fd1a8f96860, raw_cell=\"print(1)\" store_history=False silent=False shell_futures=True cell_id=None> result=None>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import IPython\n",
    "IPython.InteractiveShell().run_cell('print(1)')\n",
    "#IPython.InteractiveShell.run_cell(, '1') #notebook.kernel.execute('print(\"1\")')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "    before\n",
       "    <div id=\"root1\"></div>\n",
       "    <script crossorigin src=\"https://unpkg.com/react@18/umd/react.production.min.js\"></script>\n",
       "    <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.production.min.js\"></script>\n",
       "    <script type=\"text/javascript\">\n",
       "        console.log(1);\n",
       "        const rootElement = document.getElementById(\"root1\");\n",
       "        const root = ReactDOM.createRoot(rootElement);\n",
       "        root.render(\n",
       "            <React.StrictMode>\n",
       "            <h1>X</h1>\n",
       "            </React.StrictMode>\n",
       "        );\n",
       "    </script>\n",
       "    after\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from IPython.display import display, Javascript, Markdown as md, HTML\n",
    "\n",
    "js_convert = f\"\"\"\n",
    "    before\n",
    "    <div id=\"root1\"></div>\n",
    "    <script crossorigin src=\"https://unpkg.com/react@18/umd/react.production.min.js\"></script>\n",
    "    <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.production.min.js\"></script>\n",
    "    <script type=\"text/javascript\">\n",
    "        console.log(1);\n",
    "        const rootElement = document.getElementById(\"root1\");\n",
    "        const root = ReactDOM.createRoot(rootElement);\n",
    "        root.render(\n",
    "            <React.StrictMode>\n",
    "            <h1>X</h1>\n",
    "            </React.StrictMode>\n",
    "        );\n",
    "    </script>\n",
    "    after\n",
    "\"\"\"\n",
    "jsobj = HTML(js_convert)\n",
    "display(jsobj)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "    before\n",
       "    <div id=\"root2\"></div>\n",
       "  <script src=\"https://unpkg.com/react@16/umd/react.production.min.js\"></script>\n",
       "<script src=\"https://unpkg.com/react-dom@16/umd/react-dom.production.min.js\"></script>\n",
       "  <script src=\"https://unpkg.com/babel-standalone@6.26.0/babel.js\"></script>\n",
       "  <script type=\"text/javascript\">\n",
       "  const rootElement = document.getElementById('root2');\n",
       "  rootElement.innerHTML = 'hello';\n",
       "  </script>\n",
       "<script type=\"text/babel\">\n",
       "  const { useState } = React\n",
       "\n",
       "  const App = (props) => { \n",
       "    const [text, setText] = useState('hello');\n",
       "\n",
       "    return (\n",
       "      <div>\n",
       "        <h1>{text}</h1>\n",
       "        <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} />\n",
       "      </div>\n",
       "    );\n",
       "  }\n",
       "\n",
       "  const rootElement = document.getElementById('root2')\n",
       "  ReactDOM.render(<App />, rootElement)\n",
       "  \n",
       "</script>\n",
       "    after\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from IPython.display import display, Javascript, Markdown as md, HTML\n",
    "\n",
    "js_convert = f\"\"\"\n",
    "    before\n",
    "    <div id=\"root2\"></div>\n",
    "  <script src=\"https://unpkg.com/react@16/umd/react.production.min.js\"></script>\n",
    "<script src=\"https://unpkg.com/react-dom@16/umd/react-dom.production.min.js\"></script>\n",
    "  <script src=\"https://unpkg.com/babel-standalone@6.26.0/babel.js\"></script>\n",
    "  <script type=\"text/javascript\">\n",
    "  const rootElement = document.getElementById('root2');\n",
    "  rootElement.innerHTML = 'hello';\n",
    "  </script>\n",
    "<script type=\"text/babel\">\n",
    "  const {{ useState }} = React\n",
    "\n",
    "  const App = (props) => {{ \n",
    "    const [text, setText] = useState('hello');\n",
    "\n",
    "    return (\n",
    "      <div>\n",
    "        <h1>{{text}}</h1>\n",
    "        <input type=\"text\" value={{text}} onChange={{(e) => setText(e.target.value)}} />\n",
    "      </div>\n",
    "    );\n",
    "  }}\n",
    "\n",
    "  const rootElement = document.getElementById('root2')\n",
    "  ReactDOM.render(<App />, rootElement)\n",
    "  \n",
    "</script>\n",
    "    after\n",
    "\"\"\"\n",
    "jsobj = HTML(js_convert)\n",
    "display(jsobj)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div id=\"app1\"></div>\n",
       "<div id=\"app2\"></div>\n",
       "<script type=\"module\">\n",
       "import {version} from \"https://cdnjs.cloudflare.com/ajax/libs/vue/3.0.5/vue.esm-browser.js\";\n",
       "document.getElementById('app1').innerHTML = version;\n",
       "\n",
       "import { render, createComponent, delegateEvents, insert, template } from 'https://cdn.skypack.dev/solid-js/web';\n",
       "import { createSignal } from 'https://cdn.skypack.dev/solid-js';\n",
       "\n",
       "const _tmpl$ = /*#__PURE__*/template(`<button type=\"button\"></button>`, 2);\n",
       "\n",
       "function Counter() {\n",
       "  const [count, setCount] = createSignal(0);\n",
       "\n",
       "  const increment = () => setCount(count() + 1);\n",
       "\n",
       "  return (() => {\n",
       "    const _el$ = _tmpl$.cloneNode(true);\n",
       "\n",
       "    _el$.$$click = increment;\n",
       "\n",
       "    insert(_el$, count);\n",
       "\n",
       "    return _el$;\n",
       "  })();\n",
       "}\n",
       "\n",
       "render(() => createComponent(Counter, {}), document.getElementById(\"app2\"));\n",
       "\n",
       "delegateEvents([\"click\"]);\n",
       "\n",
       "\n",
       "</script>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%%html\n",
    "<div id=\"app1\"></div>\n",
    "<div id=\"app2\"></div>\n",
    "<script type=\"module\">\n",
    "import {version} from \"https://cdnjs.cloudflare.com/ajax/libs/vue/3.0.5/vue.esm-browser.js\";\n",
    "document.getElementById('app1').innerHTML = version;\n",
    "\n",
    "import { render, createComponent, delegateEvents, insert, template } from 'https://cdn.skypack.dev/solid-js/web';\n",
    "import { createSignal } from 'https://cdn.skypack.dev/solid-js';\n",
    "\n",
    "const _tmpl$ = /*#__PURE__*/template(`<button type=\"button\"></button>`, 2);\n",
    "\n",
    "function Counter() {\n",
    "  const [count, setCount] = createSignal(0);\n",
    "\n",
    "  const increment = () => setCount(count() + 1);\n",
    "\n",
    "  return (() => {\n",
    "    const _el$ = _tmpl$.cloneNode(true);\n",
    "\n",
    "    _el$.$$click = increment;\n",
    "\n",
    "    insert(_el$, count);\n",
    "\n",
    "    return _el$;\n",
    "  })();\n",
    "}\n",
    "\n",
    "render(() => createComponent(Counter, {}), document.getElementById(\"app2\"));\n",
    "\n",
    "delegateEvents([\"click\"]);\n",
    "\n",
    "\n",
    "</script>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div id=\"app3\"></div>\n",
       "<div id=\"app4\"></div>\n",
       "\n",
       "\n",
       "<script type=\"text/javascript\">\n",
       "setTimeout(() => {\n",
       "  console.log(typeof algosdk);\n",
       "}, 100);\n",
       "</script>\n",
       "<script type=\"module\">\n",
       "document.getElementById('app4').innerHTML = 'X';\n",
       "\n",
       "import {version} from \"https://cdnjs.cloudflare.com/ajax/libs/vue/3.0.5/vue.esm-browser.js\";\n",
       "\n",
       "//import babelPresetReact from 'https://cdn.skypack.dev/@babel/preset-react';\n",
       "//import babel from \"https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.26.0/babel.min.js\";\n",
       "//import crypto from 'https://cdn.skypack.dev/crypto';\n",
       "//import algosdk from 'https://cdn.skypack.dev/algosdk/dist/browser/algosdk.min.js';\n",
       "//import algosdk from 'https://cdn.skypack.dev/algosdk';\n",
       "//import {algodsdk} from 'https://cdn.jsdelivr.net/npm/algosdk@1.16.0/dist/browser/algosdk.min.js';\n",
       "//import algosdk from 'https://unpkg.com/algosdk@1.16.0/dist/browser/algosdk.min.js';\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "const accounts = [\n",
       " {'private_key': 'OBVzhzxAK4ZPdaF1QbkXsd8hgRUPJeCfYFjFghgMGnLmcpaAD0mdQJ3Rwq/RwklKGQWAbaIP9zb5BUmcZM4DOg==',\n",
       "  'address': '4ZZJNAAPJGOUBHORYKX5DQSJJIMQLADNUIH7ONXZAVEZYZGOAM5CM7HV2M',\n",
       "  'mnemonic': 'poem slush dry adult final thunder price pause concert topic mesh wild dry gate judge celery winter list promote clump country loan move about faith'},\n",
       " {'private_key': 'lHFQVWKpvRYU00yAQqHOHJegn5nvP0owYkroBFKr94qGmASQPz4KrmlSbpmNeevb+v+eqDR1owwGEmFARGRDOQ==',\n",
       "  'address': 'Q2MAJEB7HYFK42KSN2MY26PL3P5P7HVIGR22GDAGCJQUARDEIM4WLHSIFQ',\n",
       "  'mnemonic': 'crater dove click normal kitten aisle obvious error exotic lunar guard impact donkey gun lamp divide announce match cement excess piano turn fish above make'},\n",
       " {'private_key': '0DNKDAK5QfWuMCTMNJ+Re5mSlc7rbI0q1UOUYDmvPGpVTJc2PAknfOwS1rk+MAkE5ynA1XbqLeAGlYGA1H9T4w==',\n",
       "  'address': 'KVGJONR4BETXZ3AS224T4MAJATTSTQGVO3VC3YAGSWAYBVD7KPR23RKNBI',\n",
       "  'mnemonic': 'key churn alert mother lock run lyrics category office lamp silver nut cement pistol fury hollow faculty feed capable announce index cloth faint about bid'}\n",
       "]\n",
       "\n",
       "const token = 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa';\n",
       "//const server = 'http://127.0.0.1';\n",
       "const server = 'http://localhost';\n",
       "const port = 4001;\n",
       "console.log(Object.keys(algosdk), algosdk.version);\n",
       "//const client = new algosdk.Algodv2(token, server, port);\n",
       "\n",
       "(async () => {\n",
       "  console.log('ok:', await client.status().do());\n",
       "})().catch((e) => {\n",
       "  console.log('error:', e, 'e.toString():', e.toString());\n",
       "});\n",
       "\n",
       "//document.getElementById('app4').innerHTML = String(algosdk);\n",
       "\n",
       "//const text = Babel.transform('1', {presets: ['react']}).code;\n",
       "//const text = String(babelRuntime.version)\n",
       "//document.getElementById('app4').innerHTML = text;\n",
       "\n",
       "document.getElementById('app3').innerHTML = version;\n",
       "\n",
       "</script>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%%html\n",
    "<div id=\"app3\"></div>\n",
    "<div id=\"app4\"></div>\n",
    "\n",
    "\n",
    "<script type=\"text/javascript\">\n",
    "setTimeout(() => {\n",
    "  console.log(typeof algosdk);\n",
    "}, 100);\n",
    "</script>\n",
    "<script type=\"module\">\n",
    "document.getElementById('app4').innerHTML = 'X';\n",
    "\n",
    "import {version} from \"https://cdnjs.cloudflare.com/ajax/libs/vue/3.0.5/vue.esm-browser.js\";\n",
    "\n",
    "//import babelPresetReact from 'https://cdn.skypack.dev/@babel/preset-react';\n",
    "//import babel from \"https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.26.0/babel.min.js\";\n",
    "//import crypto from 'https://cdn.skypack.dev/crypto';\n",
    "//import algosdk from 'https://cdn.skypack.dev/algosdk/dist/browser/algosdk.min.js';\n",
    "//import algosdk from 'https://cdn.skypack.dev/algosdk';\n",
    "//import {algodsdk} from 'https://cdn.jsdelivr.net/npm/algosdk@1.16.0/dist/browser/algosdk.min.js';\n",
    "//import algosdk from 'https://unpkg.com/algosdk@1.16.0/dist/browser/algosdk.min.js';\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "const accounts = [\n",
    " {'private_key': 'OBVzhzxAK4ZPdaF1QbkXsd8hgRUPJeCfYFjFghgMGnLmcpaAD0mdQJ3Rwq/RwklKGQWAbaIP9zb5BUmcZM4DOg==',\n",
    "  'address': '4ZZJNAAPJGOUBHORYKX5DQSJJIMQLADNUIH7ONXZAVEZYZGOAM5CM7HV2M',\n",
    "  'mnemonic': 'poem slush dry adult final thunder price pause concert topic mesh wild dry gate judge celery winter list promote clump country loan move about faith'},\n",
    " {'private_key': 'lHFQVWKpvRYU00yAQqHOHJegn5nvP0owYkroBFKr94qGmASQPz4KrmlSbpmNeevb+v+eqDR1owwGEmFARGRDOQ==',\n",
    "  'address': 'Q2MAJEB7HYFK42KSN2MY26PL3P5P7HVIGR22GDAGCJQUARDEIM4WLHSIFQ',\n",
    "  'mnemonic': 'crater dove click normal kitten aisle obvious error exotic lunar guard impact donkey gun lamp divide announce match cement excess piano turn fish above make'},\n",
    " {'private_key': '0DNKDAK5QfWuMCTMNJ+Re5mSlc7rbI0q1UOUYDmvPGpVTJc2PAknfOwS1rk+MAkE5ynA1XbqLeAGlYGA1H9T4w==',\n",
    "  'address': 'KVGJONR4BETXZ3AS224T4MAJATTSTQGVO3VC3YAGSWAYBVD7KPR23RKNBI',\n",
    "  'mnemonic': 'key churn alert mother lock run lyrics category office lamp silver nut cement pistol fury hollow faculty feed capable announce index cloth faint about bid'}\n",
    "]\n",
    "\n",
    "const token = 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa';\n",
    "//const server = 'http://127.0.0.1';\n",
    "const server = 'http://localhost';\n",
    "const port = 4001;\n",
    "console.log(Object.keys(algosdk), algosdk.version);\n",
    "//const client = new algosdk.Algodv2(token, server, port);\n",
    "\n",
    "(async () => {\n",
    "  console.log('ok:', await client.status().do());\n",
    "})().catch((e) => {\n",
    "  console.log('error:', e, 'e.toString():', e.toString());\n",
    "});\n",
    "\n",
    "//document.getElementById('app4').innerHTML = String(algosdk);\n",
    "\n",
    "//const text = Babel.transform('1', {presets: ['react']}).code;\n",
    "//const text = String(babelRuntime.version)\n",
    "//document.getElementById('app4').innerHTML = text;\n",
    "\n",
    "document.getElementById('app3').innerHTML = version;\n",
    "\n",
    "</script>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/javascript": "x = window\nx2 = 0\nconsole.log(Object.keys(x), Object.values(x2))\n",
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%%javascript\n",
    "x = window\n",
    "x2 = 0\n",
    "console.log(Object.keys(x), Object.values(x2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/javascript": "\n// Load our libraries from a CDN instead of wherever this notebook is hosted.\nrequire.config({\n    paths: {\n      //'algosdk': 'https://cdn.skypack.dev/algosdk/dist/browser/algosdk.min.js'\n      //'algosdk': 'https://cdn.jsdelivr.net/npm/algosdk@1.16.0/dist/browser/algosdk.min.js'\n      //'algosdk': 'https://cdn.skypack.dev/algosdk'\n    }\n})\n",
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": "\nconsole.log(2);\nrequire(['algosdk'], (algosdk) => {\n    console.log(1);\n});\nconsole.log(3);\n",
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from IPython.display import Javascript, display\n",
    "\n",
    "display(Javascript('''\n",
    "// Load our libraries from a CDN instead of wherever this notebook is hosted.\n",
    "require.config({\n",
    "    paths: {\n",
    "      //'algosdk': 'https://cdn.skypack.dev/algosdk/dist/browser/algosdk.min.js'\n",
    "      //'algosdk': 'https://cdn.jsdelivr.net/npm/algosdk@1.16.0/dist/browser/algosdk.min.js'\n",
    "      //'algosdk': 'https://cdn.skypack.dev/algosdk'\n",
    "    }\n",
    "})\n",
    "'''))\n",
    "\n",
    "display(Javascript('''\n",
    "console.log(2);\n",
    "require(['algosdk'], (algosdk) => {\n",
    "    console.log(1);\n",
    "});\n",
    "console.log(3);\n",
    "'''))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/javascript": "\nconsole.log(2);\nrequire(['algosdk'], (algosdk) => {\n    console.log(1);\n});\nconsole.log(3);\n",
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(Javascript('''\n",
    "console.log(2);\n",
    "require(['algosdk'], (algosdk) => {\n",
    "    console.log(1);\n",
    "});\n",
    "console.log(3);\n",
    "'''))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/javascript": "\n// Load our libraries from a CDN instead of wherever this notebook is hosted.\nrequire.config({\n    paths: {\n        \n    }\n})\n\n// Hook to call into Python.\n// Credit to disarticulate for documenting the usage of iopub: \n//    https://gist.github.com/disarticulate/d06069ff3e71cf828e5329beab8cb084\nconsole.log('y');\nwindow.py = code => new Promise((resolve, reject) => {\n    console.log('window.python()', 'code', code, 'typeof IPython', typeof IPython, 'Object.keys', Object.keys(ipywidgetsKernel), webpackChunk_vscode_jupyter_ipywidgets.push);\n    // IPython.notebook.kernel.execute(\n    //     code,\n    //     {iopub: {output: data => resolve(data.content.text)}},\n    // )   \n})\n",
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import json\n",
    "from string import Template\n",
    "\n",
    "from IPython.display import Javascript, display, HTML\n",
    "from IPython.core.magic import register_cell_magic\n",
    "\n",
    "\n",
    "display(Javascript('''\n",
    "// Load our libraries from a CDN instead of wherever this notebook is hosted.\n",
    "require.config({\n",
    "    paths: {\n",
    "        \n",
    "    }\n",
    "})\n",
    "\n",
    "// Hook to call into Python.\n",
    "// Credit to disarticulate for documenting the usage of iopub: \n",
    "//    https://gist.github.com/disarticulate/d06069ff3e71cf828e5329beab8cb084\n",
    "console.log('y');\n",
    "window.py = code => new Promise((resolve, reject) => {\n",
    "    console.log('window.python()', 'code', code, 'typeof IPython', typeof IPython, 'Object.keys', Object.keys(ipywidgetsKernel), webpackChunk_vscode_jupyter_ipywidgets.push);\n",
    "    // IPython.notebook.kernel.execute(\n",
    "    //     code,\n",
    "    //     {iopub: {output: data => resolve(data.content.text)}},\n",
    "    // )   \n",
    "})\n",
    "'''))\n",
    "\n",
    "\n",
    "@register_cell_magic\n",
    "def jsx2(line, cell):\n",
    "    print('line:', line, 'cell:', cell)\n",
    "    display(HTML('<div id=\"log\">log:</div>'))\n",
    "    display(HTML('<div id=\"log2\">log2:</div>'))\n",
    "    display(Javascript(\n",
    "        f'''window.log = msg => {{ document.getElementById('log').innerHTML = document.getElementById('log').innerHTML + '<br/>' + msg; return; }}'''))\n",
    "    display(Javascript(f'''\n",
    "        //element[0].appendChild(document.createElement('div')).innerHTML = 'append';\n",
    "\n",
    "        log(document.body.childElementCount);\n",
    "\n",
    "        var e = document.createElement('div');\n",
    "        e.innerHTML = 'append';\n",
    "        document.body.appendChild(e);\n",
    "        \n",
    "        py('print(77)');\n",
    "        \n",
    "        log(\"a\");\n",
    "        log(\"b\");\n",
    "        log(document.body.childElementCount);\n",
    "\n",
    "        document.getElementById('log2').innerHTML = 'hello';\n",
    "\n",
    "        //require([], () => {{\n",
    "        //    log(\"eval('log({json.dumps(cell)}, {{presets: []}})')\");\n",
    "        //    //eval('log({json.dumps(cell)}, {{presets: []}})')\n",
    "        //}})\n",
    "    '''))\n",
    "    print('jsx2 end')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "line:  cell: py('print(5)').then(greeting => {\n",
      "    ReactDOM.render(\n",
      "      <h1>{greeting}</h1>,\n",
      "      element[0],\n",
      "    )\n",
      "})\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div id=\"log\">log:</div>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div id=\"log2\">log2:</div>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": "window.log = msg => { document.getElementById('log').innerHTML = document.getElementById('log').innerHTML + '<br/>' + msg; return; }",
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": "\n        //element[0].appendChild(document.createElement('div')).innerHTML = 'append';\n\n        log(document.body.childElementCount);\n\n        var e = document.createElement('div');\n        e.innerHTML = 'append';\n        document.body.appendChild(e);\n        \n        py('print(77)');\n        \n        log(\"a\");\n        log(\"b\");\n        log(document.body.childElementCount);\n\n        document.getElementById('log2').innerHTML = 'hello';\n\n        //require([], () => {\n        //    log(\"eval('log(\"py('print(5)').then(greeting => {\\n    ReactDOM.render(\\n      <h1>{greeting}</h1>,\\n      element[0],\\n    )\\n})\\n\", {presets: []})')\");\n        //    //eval('log(\"py('print(5)').then(greeting => {\\n    ReactDOM.render(\\n      <h1>{greeting}</h1>,\\n      element[0],\\n    )\\n})\\n\", {presets: []})')\n        //})\n    ",
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "jsx2 end\n"
     ]
    }
   ],
   "source": [
    "%%jsx2\n",
    "py('print(5)').then(greeting => {\n",
    "    ReactDOM.render(\n",
    "      <h1>{greeting}</h1>,\n",
    "      element[0],\n",
    "    )\n",
    "})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "interpreter": {
   "hash": "4f946df053fbf2b937619d3c5458e7af74262f9a954d8797ba0b27400bcafe06"
  },
  "kernelspec": {
   "display_name": "Python 3.10.4 64-bit",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.4"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
